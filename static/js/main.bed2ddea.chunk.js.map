{"version":3,"sources":["components/slide/Slide.jsx","components/slide/bg.jpg","baseComponents/grid/Grid.jsx","baseComponents/buttons/ActionButton.jsx","baseComponents/list/List.jsx","baseComponents/index.js","utils/theme.js","slides/ElateConf/index.js","slides/HamarMeetup/index.js","slides/index.js","index.jsx","components/spinner/Spinner.js","components/spinner/FullScreenSpinner.js","components/slide/SlideProgress.jsx","components/slide/PresenterNavigation.jsx","components/slide/PresenterView.jsx","components/slide/SlideDeck.jsx","components/index.js"],"names":["Wrapper","styled","section","_templateObject","props","withImage","concat","bg","_ref","backgroundColor","color","theme","colors","white","Content","div","_templateObject2","Header","h1","_templateObject3","Slide","_ref2","heading","name","children","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_baseComponents__WEBPACK_IMPORTED_MODULE_3__","size","justify","defaultProps","module","exports","__webpack_require__","p","GridRow","GridCol","display","ButtonGroup","ActionButton_templateObject","ActionButtonGroup","ActionButton_templateObject2","NavButtonGroup","ActionButton","Router","_templateObject4","ScrollButton","button","_templateObject5","PrimaryButton","_templateObject6","LinkButton","_templateObject7","IconButton","_templateObject8","RouterButton","_templateObject9","List","ul","List_templateObject","ListItem","li","List_templateObject2","customDot","dot","getDot","d","__webpack_exports__","ElateConf","match","ElateSlideDeck","React","lazy","e","then","bind","Intro","Hooks","Promise","all","Lazy","Memo","Profiling","Immer","CustomHooks","react_default","Fragment","Route","exact","path","render","HamarMeetup","HamarMeetupSlideDeck","SlideDeckSelector","components","baseComponents","to","GlobalStyle","createGlobalStyle","Routes","react","fallback","slides","component","Navigation","HashRouter","basename","process","src_Routes","ReactDOM","react_hot_loader","dist","styled_components_browser_esm","src_Navigation","document","getElementById","rotate360","keyframes","Spinner","FullScreenSpinner_templateObject","FullScreenSpinner","spinner_Spinner","ProgressBar","SlideProgress_templateObject","progress","PresenterNavigation","updatePresenterMode","presenterMode","role","aria-label","onClick","Preview","PresenterView_templateObject","PresenterView","activeSlide","useEffect","react_new_window_default","slide_PresenterNavigation","map","child","idx","Date","now","reducer","produce","draft","action","type","max","slide","Error","SlideDeck","namedNav","filter","n","_useState","useState","_useState2","Object","slicedToArray","_useReducer","useReducer","length","_useReducer2","state","dispatch","keyNavigation","key","window","addEventListener","removeEventListener","slide_PresenterView","react_animation","animationIn","smooth","duration","SlideProgress","Math","round","spinner_FullScreenSpinner","slide_SlideDeck"],"mappings":"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","file":"static/js/main.bed2ddea.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { GridCol, GridRow } from \"../../baseComponents\";\nimport bg from \"./bg.jpg\";\n\nconst Wrapper = styled.section`\n  width: 100%;\n  height: 100vh;\n  max-height: 100vh;\n  overflow: hidden;\n  background-image: ${props => (props.withImage ? `url(${bg})` : \"\")};\n  background-repeat: no-repeat;\n  background-color: ${({ backgroundColor }) => backgroundColor};\n  background-blend-mode: darken;\n  color: ${props => (props.color ? props.color : props.theme.colors.white)};\n`;\n\nconst Content = styled.div`\n  overflow-y: scroll;\n  height: 100vh;\n`;\n\nconst Header = styled.h1`\n  text-align: center;\n  margin: 68px 12px 24px;\n`;\n\nconst Slide = ({\n  heading,\n  withImage,\n  name,\n  children,\n  backgroundColor,\n  color,\n}) => (\n  <Wrapper\n    name={name}\n    withImage={withImage}\n    backgroundColor={backgroundColor}\n    color={color}\n  >\n    <Content>\n      <GridRow>\n        <GridCol size={12}>\n          <Header>{heading}</Header>\n        </GridCol>\n      </GridRow>\n      <GridRow justify=\"center\">\n        <GridCol size={10}>{children}</GridCol>\n      </GridRow>\n    </Content>\n  </Wrapper>\n);\n\nSlide.defaultProps = {\n  backgroundColor: \"rgba(0,0,0,0.8)\",\n};\n\nexport default Slide;\n","module.exports = __webpack_public_path__ + \"static/media/bg.9d893a1e.jpg\";","import styled from \"styled-components\";\n\nexport const GridRow = styled.div`\n  display: flex;\n  justify-content: ${props => (props.justify ? props.justify : \"initial\")};\n`;\n\nexport const GridCol = styled.div`\n  width: ${props => (props.size / 12) * 100}vw;\n  display: ${props => (props.display ? props.display : \"initial\")};\n  justify-content: ${props => (props.justify ? props.justify : \"initial\")};\n`;\n","import styled from \"styled-components\";\nimport { Link as Router } from \"react-router-dom\";\n\nconst ButtonGroup = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  text-transform: capitalize;\n  background-color: rgba(0, 0, 0, 0.7);\n  border-radius: 8px;\n  max-width: 80vw;\n`;\n\nexport const ActionButtonGroup = styled(ButtonGroup)`\n  position: fixed;\n  bottom: 10px;\n  right: 10px;\n`;\n\nexport const NavButtonGroup = styled(ButtonGroup)`\n  position: fixed;\n  top: 10px;\n  right: 10px;\n  z-index: 1;\n`;\n\nexport const ActionButton = styled(Router)`\n  border: none;\n  font-size: 2.2rem;\n  padding: 0.8rem;\n  margin: 0.4rem;\n  background-color: transparent;\n`;\n\nexport const ScrollButton = styled.button`\n  border: 2px solid yellowgreen;\n  border-radius: 4px;\n  color: yellowgreen;\n  padding: 12px;\n  margin: 12px;\n  background-color: transparent;\n`;\n\nexport const PrimaryButton = styled.button`\n  border: 2px solid yellowgreen;\n  border-radius: 4px;\n  color: yellowgreen;\n  padding: 12px;\n  margin: 12px;\n  background-color: transparent;\n`;\n\nexport const LinkButton = styled.a`\n  border: 2px solid yellowgreen;\n  border-radius: 4px;\n  color: yellowgreen;\n  padding: 12px;\n  margin: 12px;\n  background-color: transparent;\n`;\n\nexport const IconButton = styled(ScrollButton)`\n  padding: 4px 18px;\n  font-size: 2rem;\n  border: none;\n`;\n\nexport const RouterButton = styled(Router)`\n  border: 2px solid yellowgreen;\n  border-radius: 4px;\n  color: yellowgreen;\n  padding: 12px;\n  margin: 12px;\n  text-decoration: none;\n  font-size: 2rem;\n`;\n","import styled from \"styled-components\";\n\nconst getDot = dot => {\n  switch (dot) {\n    case \"fire\":\n      return \"'🔥'\";\n    case \"heart\":\n      return \"'❤️'\";\n    case \"skull\":\n      return \"'☠️'\";\n    case \"puke\":\n      return \"'🤮'\";\n    case \"angry\":\n      return \"'🤬'\";\n    case \"down\":\n      return \"'👎'\";\n    case \"seeNoEvil\":\n      return \"'🙈'\";\n    default:\n      return \"'⚡'\";\n  }\n};\n\nexport const List = styled.ul``;\n\nexport const ListItem = styled.li`\n  margin-bottom: 24px;\n  font-size: 4.2rem;\n  line-height: 7rem;\n  list-style: ${props => (props.customDot ? \"none\" : \"initial\")};\n  &:before {\n    content: ${props => (props.customDot ? getDot(props.customDot) : \"\")};\n    margin-right: 18px;\n  }\n`;\n","export { GridCol, GridRow } from \"./grid/Grid.jsx\";\nexport {\n  ActionButtonGroup,\n  NavButtonGroup,\n  ActionButton,\n  ScrollButton,\n  IconButton,\n  RouterButton,\n  PrimaryButton,\n  LinkButton,\n} from \"./buttons/ActionButton\";\nexport { List, ListItem } from \"./list/List\";\n","export default {\n  colors: {\n    white: \"#fff\",\n  },\n};\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\n\nconst ElateConf = ({ match }) => {\n  const ElateSlideDeck = React.lazy(() => import(\"./ElateSlideDeck\"));\n  const Intro = React.lazy(() => import(\"./intro/Intro\"));\n  const Hooks = React.lazy(() => import(\"./hooks/Hooks\"));\n  const Lazy = React.lazy(() => import(\"./lazy/Lazy\"));\n  const Memo = React.lazy(() => import(\"./memo/Memo\"));\n  const Profiling = React.lazy(() => import(\"./profiling/Profiling\"));\n  const Immer = React.lazy(() => import(\"./immer/Immer\"));\n  const CustomHooks = React.lazy(() => import(\"./customHooks/CustomHooks\"));\n\n  return (\n    <>\n      <Route exact path={`${match.path}`} render={() => <ElateSlideDeck />} />\n      <Route path={`${match.path}/intro`} render={() => <Intro />} />\n      <Route path={`${match.path}/memo`} render={() => <Memo />} />\n      <Route path={`${match.path}/lazy`} render={() => <Lazy />} />\n      <Route path={`${match.path}/profiling`} render={() => <Profiling />} />\n      <Route path={`${match.path}/hooks`} render={() => <Hooks />} />\n      <Route path={`${match.path}/Immer`} render={() => <Immer />} />\n      <Route\n        path={`${match.path}/custom-hooks`}\n        render={() => <CustomHooks />}\n      />\n    </>\n  );\n};\n\nexport default ElateConf;\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\n\nconst HamarMeetup = ({ match }) => {\n  const HamarMeetupSlideDeck = React.lazy(() =>\n    import(\"./HamarMeetupSlideDeck\")\n  );\n  const Intro = React.lazy(() => import(\"./Intro/Intro\"));\n\n  return (\n    <>\n      <Route\n        exact\n        path={`${match.path}`}\n        render={() => <HamarMeetupSlideDeck />}\n      />\n      <Route path={`${match.path}/intro`} render={() => <Intro />} />\n    </>\n  );\n};\n\nexport default HamarMeetup;\n","import React from \"react\";\nimport { Slide } from \"../components\";\nimport { RouterButton, GridCol, GridRow } from \"../baseComponents\";\n\nconst SlideDeckSelector = () => {\n  return (\n    <Slide withImage heading=\"Slide decks\">\n      <GridRow justify=\"center\">\n        <GridCol>\n          <RouterButton to=\"elate\">Elate</RouterButton>\n          <RouterButton to=\"hamar\">Hamar meetup</RouterButton>\n        </GridCol>\n      </GridRow>\n    </Slide>\n  );\n};\n\nexport default SlideDeckSelector;\n","import React, { Suspense } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { AppContainer } from \"react-hot-loader\";\nimport { ThemeProvider, createGlobalStyle } from \"styled-components\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport { Normalize } from \"styled-normalize\";\nimport theme from \"./utils/theme\";\nimport { FullScreenSpinner } from \"./components\";\nimport ElateConf from \"./slides/ElateConf\";\nimport HamarMeetup from \"./slides/HamarMeetup\";\nimport SlideDeckSelect from \"./slides\";\n\nconst GlobalStyle = createGlobalStyle`\n  html{\n    font-size: 62.5%;\n  }\n  body {\n    font-family: \"Helvetica Neue\", \"Ubuntu Light\", \"sans-serif\";\n    height: 100%;\n    overflow: hidden;\n    background-color: #090909;\n    font-size: 3.2rem;\n  }\n  h1 {\n    font-size: 6rem;\n  }\n  pre {\n    font-size: 2.8rem;\n  }\n`;\n\nconst Routes = () => (\n  <Suspense fallback={<FullScreenSpinner />}>\n    <Route exact path=\"/\" render={() => <SlideDeckSelect />} />\n    <Route path=\"/elate\" component={ElateConf} />\n    <Route path=\"/hamar\" component={HamarMeetup} />\n  </Suspense>\n);\n\nconst Navigation = () => (\n  <HashRouter basename={process.env.PUBLIC_URL}>\n    <Routes />\n  </HashRouter>\n);\n\nconst render = () => {\n  ReactDOM.render(\n    <AppContainer>\n      <>\n        <Normalize />\n        <basefont size=\"32px\" />\n        <ThemeProvider theme={theme}>\n          <>\n            <GlobalStyle />\n            <Navigation />\n          </>\n        </ThemeProvider>\n      </>\n    </AppContainer>,\n    document.getElementById(\"root\")\n  );\n};\n\nrender();\n","import styled, { keyframes } from \"styled-components\";\n\nconst rotate360 = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`;\n\nconst Spinner = styled.div`\n  animation: ${rotate360} 2s linear infinite;\n  transform: translateZ(0);\n\n  border-top: 2px solid yellowgreen;\n  border-right: 2px solid yellowgreen;\n  border-bottom: 2px solid yellowgreen;\n  border-left: 2px solid transparent;\n  background: transparent;\n  width: 44px;\n  height: 44px;\n  border-radius: 50%;\n`;\n\nexport default Spinner;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Spinner from \"./Spinner\";\n\nconst Wrapper = styled.div`\n  height: 100vh;\n  width: 100%;\n  background-color: #090909;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst FullScreenSpinner = () => {\n  return (\n    <Wrapper>\n      <Spinner />\n    </Wrapper>\n  );\n};\n\nexport default FullScreenSpinner;\n","import styled from \"styled-components\";\n\nconst ProgressBar = styled.div`\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  width: ${props => `${props.progress}%`};\n  height: 6px;\n  background-color: yellowgreen;\n  transition: width 1s ease-in-out;\n  opacity: 0.7;\n`;\n\nexport default ProgressBar;\n","import React from \"react\";\nimport { NavButtonGroup, ActionButton, IconButton } from \"../../baseComponents\";\n\nconst PresenterNavigation = ({ updatePresenterMode, presenterMode }) => (\n  <NavButtonGroup>\n    <ActionButton to=\"/\">\n      <span role=\"img\" aria-label=\"home\">\n        🏠\n      </span>\n    </ActionButton>\n    <IconButton onClick={() => updatePresenterMode(!presenterMode)}>\n      <span role=\"img\" aria-label=\"presenter\">\n        📺\n      </span>\n    </IconButton>\n  </NavButtonGroup>\n);\n\nexport default PresenterNavigation;\n","import React, { useEffect } from \"react\";\nimport NewWindow from \"react-new-window\";\nimport styled from \"styled-components\";\nimport PresenterNavigation from \"./PresenterNavigation\";\nimport { GridRow, GridCol } from \"../../baseComponents\";\n\nconst Preview = styled.div`\n  transform: scale(0.5);\n`;\n\nconst PresenterView = ({\n  presenterMode,\n  updatePresenterMode,\n  activeSlide,\n  slides,\n}) => {\n  useEffect(() => () => updatePresenterMode(false));\n\n  return (\n    <NewWindow>\n      <PresenterNavigation\n        presenterMode={presenterMode}\n        updatePresenterMode={updatePresenterMode}\n      />\n      <GridRow>\n        <Preview>\n          {slides.map((child, idx) => (activeSlide === idx ? child : null))}\n        </Preview>\n      </GridRow>\n      <GridRow>\n        <GridCol>\n          <p>Timer: {Date.now()}</p>\n        </GridCol>\n      </GridRow>\n    </NewWindow>\n  );\n};\n\nexport default PresenterView;\n","import React, { useEffect, useReducer, useState } from \"react\";\nimport produce from \"immer\";\nimport { AnimateOnChange } from \"@nearform/react-animation\";\nimport {\n  ActionButtonGroup,\n  ScrollButton,\n  IconButton,\n} from \"../../baseComponents\";\nimport ProgressBar from \"./SlideProgress\";\nimport PresenterNavigation from \"./PresenterNavigation\";\nimport PresenterView from \"./PresenterView\";\n\nconst reducer = produce((draft, action) => {\n  switch (action.type) {\n    case \"increment\":\n      draft.activeSlide =\n        draft.activeSlide + 1 < draft.max\n          ? draft.activeSlide + 1\n          : draft.activeSlide;\n      return;\n    case \"decrement\":\n      draft.activeSlide =\n        draft.activeSlide - 1 >= 0 ? draft.activeSlide - 1 : draft.activeSlide;\n      return;\n    case \"set\":\n      draft.activeSlide = action.slide;\n      return;\n    default:\n      throw new Error();\n  }\n});\n\nconst SlideDeck = ({ namedNav, children }) => {\n  const slides = children.map(child => child.props.name).filter(n => n);\n\n  const [presenterMode, updatePresenterMode] = useState(false);\n  const [state, dispatch] = useReducer(reducer, {\n    activeSlide: 0,\n    max: slides.length,\n  });\n\n  const keyNavigation = ({ key }) => {\n    switch (key) {\n      case \"ArrowRight\":\n        return dispatch({ type: \"increment\" });\n      case \"ArrowLeft\":\n        return dispatch({ type: \"decrement\" });\n      default:\n        break;\n    }\n  };\n\n  useEffect(e => {\n    window.addEventListener(\"keydown\", keyNavigation);\n    return () => window.removeEventListener(\"keydown\", keyNavigation);\n  });\n\n  const NamedNavigation = () =>\n    slides.map((slide, idx) => (\n      <ScrollButton\n        onClick={() => dispatch({ type: \"set\", slide: idx })}\n        smooth={true}\n        duration={500}\n        key={slide}\n      >\n        {slide}\n      </ScrollButton>\n    ));\n\n  const UnnamedNavigation = () => (\n    <>\n      {state.activeSlide !== 0 && (\n        <IconButton\n          onClick={() => dispatch({ type: \"decrement\" })}\n          smooth={true}\n          duration={500}\n        >\n          <span role=\"img\" aria-label=\"back\">\n            👈\n          </span>\n        </IconButton>\n      )}\n      {state.activeSlide !== slides.length - 1 && (\n        <IconButton\n          onClick={() => dispatch({ type: \"increment\" })}\n          smooth={true}\n          duration={500}\n        >\n          <span role=\"img\" aria-label=\"forward\">\n            👉\n          </span>\n        </IconButton>\n      )}\n    </>\n  );\n\n  return (\n    <>\n      {!presenterMode && (\n        <PresenterNavigation\n          presenterMode={presenterMode}\n          updatePresenterMode={updatePresenterMode}\n        />\n      )}\n      {presenterMode && (\n        <PresenterView\n          presenterMode={presenterMode}\n          updatePresenterMode={updatePresenterMode}\n          activeSlide={state.activeSlide}\n          slides={children}\n        />\n      )}\n      <AnimateOnChange animationIn=\"fadeIn\">\n        {children.map((child, idx) =>\n          state.activeSlide === idx ? child : null\n        )}\n      </AnimateOnChange>\n      <ActionButtonGroup>\n        {namedNav && <NamedNavigation />}\n        {!namedNav && <UnnamedNavigation />}\n      </ActionButtonGroup>\n      <ProgressBar\n        progress={Math.round(((state.activeSlide + 1) / slides.length) * 100)}\n      />\n    </>\n  );\n};\n\nexport default SlideDeck;\n","export { default as FullScreenSpinner } from \"./spinner/FullScreenSpinner\";\nexport { default as Spinner } from \"./spinner/Spinner\";\nexport { default as Slide } from \"./slide/Slide\";\nexport { default as SlideDeck } from \"./slide/SlideDeck\";\n"],"sourceRoot":""}