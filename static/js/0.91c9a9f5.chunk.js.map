{"version":3,"sources":["../node_modules/refractor/lang/c.js","../node_modules/property-information/lib/util/create.js","../node_modules/property-information/normalize.js","../node_modules/property-information/lib/util/types.js","../node_modules/refractor/lang/cpp.js","../node_modules/refractor/lang/ruby.js","../node_modules/property-information/lib/util/schema.js","../node_modules/property-information/lib/util/defined-info.js","../node_modules/property-information/lib/util/info.js","../node_modules/property-information/lib/util/case-insensitive-transform.js","../node_modules/trim/index.js","../node_modules/is-decimal/index.js","../node_modules/refractor/lang/basic.js","../node_modules/refractor/lang/java.js","../node_modules/refractor/lang/jsx.js","../node_modules/refractor/lang/php.js","../node_modules/refractor/lang/sql.js","../node_modules/refractor/lang/typescript.js","../node_modules/refractor/index.js","../node_modules/refractor/core.js","../node_modules/hastscript/index.js","../node_modules/hastscript/html.js","../node_modules/property-information/html.js","../node_modules/property-information/lib/util/merge.js","../node_modules/xtend/immutable.js","../node_modules/property-information/lib/xlink.js","../node_modules/property-information/lib/xml.js","../node_modules/property-information/lib/xmlns.js","../node_modules/property-information/lib/util/case-sensitive-transform.js","../node_modules/property-information/lib/aria.js","../node_modules/property-information/lib/html.js","../node_modules/hastscript/factory.js","../node_modules/property-information/find.js","../node_modules/hast-util-parse-selector/index.js","../node_modules/space-separated-tokens/index.js","../node_modules/comma-separated-tokens/index.js","../node_modules/parse-entities/index.js","../node_modules/is-hexadecimal/index.js","../node_modules/is-alphanumerical/index.js","../node_modules/is-alphabetical/index.js","../node_modules/parse-entities/decode-entity.browser.js","../node_modules/prismjs/components/prism-core.js","../node_modules/refractor/lang/markup.js","../node_modules/refractor/lang/css.js","../node_modules/refractor/lang/clike.js","../node_modules/refractor/lang/javascript.js","../node_modules/refractor/lang/abap.js","../node_modules/refractor/lang/actionscript.js","../node_modules/refractor/lang/ada.js","../node_modules/refractor/lang/apacheconf.js","../node_modules/refractor/lang/apl.js","../node_modules/refractor/lang/applescript.js","../node_modules/refractor/lang/arduino.js","../node_modules/refractor/lang/arff.js","../node_modules/refractor/lang/asciidoc.js","../node_modules/refractor/lang/asm6502.js","../node_modules/refractor/lang/aspnet.js","../node_modules/refractor/lang/autohotkey.js","../node_modules/refractor/lang/autoit.js","../node_modules/refractor/lang/bash.js","../node_modules/refractor/lang/batch.js","../node_modules/refractor/lang/bison.js","../node_modules/refractor/lang/brainfuck.js","../node_modules/refractor/lang/bro.js","../node_modules/refractor/lang/clojure.js","../node_modules/refractor/lang/coffeescript.js","../node_modules/refractor/lang/crystal.js","../node_modules/refractor/lang/csharp.js","../node_modules/refractor/lang/csp.js","../node_modules/refractor/lang/css-extras.js","../node_modules/refractor/lang/d.js","../node_modules/refractor/lang/dart.js","../node_modules/refractor/lang/diff.js","../node_modules/refractor/lang/django.js","../node_modules/refractor/lang/docker.js","../node_modules/refractor/lang/eiffel.js","../node_modules/refractor/lang/elixir.js","../node_modules/refractor/lang/elm.js","../node_modules/refractor/lang/erb.js","../node_modules/refractor/lang/erlang.js","../node_modules/refractor/lang/flow.js","../node_modules/refractor/lang/fortran.js","../node_modules/refractor/lang/fsharp.js","../node_modules/refractor/lang/gedcom.js","../node_modules/refractor/lang/gherkin.js","../node_modules/refractor/lang/git.js","../node_modules/refractor/lang/glsl.js","../node_modules/refractor/lang/go.js","../node_modules/refractor/lang/graphql.js","../node_modules/refractor/lang/groovy.js","../node_modules/refractor/lang/haml.js","../node_modules/refractor/lang/handlebars.js","../node_modules/refractor/lang/haskell.js","../node_modules/refractor/lang/haxe.js","../node_modules/refractor/lang/hpkp.js","../node_modules/refractor/lang/hsts.js","../node_modules/refractor/lang/http.js","../node_modules/refractor/lang/ichigojam.js","../node_modules/refractor/lang/icon.js","../node_modules/refractor/lang/inform7.js","../node_modules/refractor/lang/ini.js","../node_modules/refractor/lang/io.js","../node_modules/refractor/lang/j.js","../node_modules/refractor/lang/jolie.js","../node_modules/refractor/lang/json.js","../node_modules/refractor/lang/julia.js","../node_modules/refractor/lang/keyman.js","../node_modules/refractor/lang/kotlin.js","../node_modules/refractor/lang/latex.js","../node_modules/refractor/lang/less.js","../node_modules/refractor/lang/liquid.js","../node_modules/refractor/lang/lisp.js","../node_modules/refractor/lang/livescript.js","../node_modules/refractor/lang/lolcode.js","../node_modules/refractor/lang/lua.js","../node_modules/refractor/lang/makefile.js","../node_modules/refractor/lang/markdown.js","../node_modules/refractor/lang/markup-templating.js","../node_modules/refractor/lang/matlab.js","../node_modules/refractor/lang/mel.js","../node_modules/refractor/lang/mizar.js","../node_modules/refractor/lang/monkey.js","../node_modules/refractor/lang/n4js.js","../node_modules/refractor/lang/nasm.js","../node_modules/refractor/lang/nginx.js","../node_modules/refractor/lang/nim.js","../node_modules/refractor/lang/nix.js","../node_modules/refractor/lang/nsis.js","../node_modules/refractor/lang/objectivec.js","../node_modules/refractor/lang/ocaml.js","../node_modules/refractor/lang/opencl.js","../node_modules/refractor/lang/oz.js","../node_modules/refractor/lang/parigp.js","../node_modules/refractor/lang/parser.js","../node_modules/refractor/lang/pascal.js","../node_modules/refractor/lang/perl.js","../node_modules/refractor/lang/php-extras.js","../node_modules/refractor/lang/plsql.js","../node_modules/refractor/lang/powershell.js","../node_modules/refractor/lang/processing.js","../node_modules/refractor/lang/prolog.js","../node_modules/refractor/lang/properties.js","../node_modules/refractor/lang/protobuf.js","../node_modules/refractor/lang/pug.js","../node_modules/refractor/lang/puppet.js","../node_modules/refractor/lang/pure.js","../node_modules/refractor/lang/python.js","../node_modules/refractor/lang/q.js","../node_modules/refractor/lang/qore.js","../node_modules/refractor/lang/r.js","../node_modules/refractor/lang/reason.js","../node_modules/refractor/lang/renpy.js","../node_modules/refractor/lang/rest.js","../node_modules/refractor/lang/rip.js","../node_modules/refractor/lang/roboconf.js","../node_modules/refractor/lang/rust.js","../node_modules/refractor/lang/sas.js","../node_modules/refractor/lang/sass.js","../node_modules/refractor/lang/scala.js","../node_modules/refractor/lang/scheme.js","../node_modules/refractor/lang/scss.js","../node_modules/refractor/lang/smalltalk.js","../node_modules/refractor/lang/smarty.js","../node_modules/refractor/lang/soy.js","../node_modules/refractor/lang/stylus.js","../node_modules/refractor/lang/swift.js","../node_modules/refractor/lang/tap.js","../node_modules/refractor/lang/tcl.js","../node_modules/refractor/lang/textile.js","../node_modules/refractor/lang/tsx.js","../node_modules/refractor/lang/tt2.js","../node_modules/refractor/lang/twig.js","../node_modules/refractor/lang/vbnet.js","../node_modules/refractor/lang/velocity.js","../node_modules/refractor/lang/verilog.js","../node_modules/refractor/lang/vhdl.js","../node_modules/refractor/lang/vim.js","../node_modules/refractor/lang/visual-basic.js","../node_modules/refractor/lang/wasm.js","../node_modules/refractor/lang/wiki.js","../node_modules/refractor/lang/xeora.js","../node_modules/refractor/lang/xojo.js","../node_modules/refractor/lang/xquery.js","../node_modules/refractor/lang/yaml.js","../node_modules/@babel/runtime/helpers/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js","../node_modules/@babel/runtime/helpers/extends.js","../node_modules/@babel/runtime/helpers/objectSpread.js","../node_modules/@babel/runtime/helpers/defineProperty.js","../node_modules/react-syntax-highlighter/dist/esm/styles/prism/okaidia.js","../node_modules/react-syntax-highlighter/dist/esm/create-element.js","../node_modules/react-syntax-highlighter/dist/esm/highlight.js","../node_modules/react-syntax-highlighter/dist/esm/prism.js","../node_modules/react-syntax-highlighter/dist/esm/styles/prism/prism.js","../node_modules/react-syntax-highlighter/dist/esm/languages/prism/supported-languages.js"],"names":["c","Prism","languages","extend","keyword","operator","number","insertBefore","macro","pattern","lookbehind","alias","inside","string","directive","constant","module","exports","displayName","aliases","normalize","__webpack_require__","Schema","DefinedInfo","definition","prop","info","space","mustUseProperty","attributes","props","properties","transform","property","normal","indexOf","attribute","value","toLowerCase","powers","increment","Math","pow","boolean","booleanish","overloadedBoolean","spaceSeparated","commaSeparated","commaOrSpaceSeparated","refractorC","cpp","register","class-name","raw-string","greedy","ruby","comment","interpolation","delimiter","rest","regex","variable","symbol","builtin","proto","prototype","this","Info","types","mask","mark","call","check","values","key","defined","caseSensitiveTransform","str","replace","left","right","character","code","charCodeAt","basic","function","punctuation","java","annotation","generics","jsx","javascript","util","clone","tag","spread","attr-value","script","script-punctuation","stringifyToken","token","content","map","join","hooks","add","env","language","walkTokens","tokens","openedTags","i","length","notTagNorBrace","type","tagName","pop","push","openedBraces","plainText","splice","Token","php","shell-comment","package","nowdoc-string","heredoc-string","single-quoted-string","double-quoted-string","string_interpolation","test","buildPlaceholders","tokenizePlaceholders","sql","typescript","ts","refractor","global","restore","current","undefined","capture","window","self","manual","disableWorkerMessageHandler","h","decode","markup","css","clike","js","own","hasOwnProperty","Refractor","refract","grammar","Error","highlight","name","sup","registered","encode","stringify","parent","result","index","stringifyAll","classes","concat","run","attrs","schema","html","factory","merge","xlink","xml","xmlns","aria","xtend","definitions","apply","target","arguments","source","Object","create","_","slice","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xmlLang","xmlBase","xmlSpace","caseInsensitiveTransform","xmlnsxlink","xmlnsXLink","ariaActiveDescendant","ariaAtomic","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","ariaCurrent","ariaDescribedBy","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabel","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","role","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","acceptCharset","accessKey","action","allowFullScreen","allowPaymentRequest","allowUserMedia","alt","as","async","autoCapitalize","autoComplete","autoFocus","autoPlay","charSet","checked","cite","className","cols","colSpan","contentEditable","controls","controlsList","coords","crossOrigin","data","dateTime","decoding","default","defer","dir","dirName","disabled","download","draggable","encType","form","formAction","formEncType","formMethod","formNoValidate","formTarget","headers","height","hidden","high","href","hrefLang","htmlFor","httpEquiv","id","inputMode","integrity","is","isMap","itemId","itemProp","itemRef","itemScope","itemType","kind","label","lang","list","loop","low","manifest","max","maxLength","media","method","min","minLength","multiple","muted","nonce","noModule","noValidate","open","optimum","ping","placeholder","playsInline","poster","preload","readOnly","referrerPolicy","rel","required","reversed","rows","rowSpan","sandbox","scope","scoped","seamless","selected","shape","size","sizes","slot","span","spellCheck","src","srcDoc","srcLang","srcSet","start","step","style","tabIndex","title","translate","typeMustMatch","useMap","width","wrap","align","aLink","archive","axis","background","bgColor","border","borderColor","bottomMargin","cellPadding","cellSpacing","char","charOff","classId","clear","codeBase","codeType","color","compact","declare","event","face","frame","frameBorder","hSpace","leftMargin","link","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","object","profile","prompt","rev","rightMargin","rules","scheme","scrolling","standby","summary","text","topMargin","valueType","version","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","prefix","results","security","unselectable","find","parseSelector","spaces","parse","commas","parsePrimitive","positiveNumber","isNaN","Number","defaultTagName","selector","node","children","Array","isNode","isChildren","unshift","addProperty","addChild","nodes","String","parsePrimitives","Type","valid","charAt","dash","camelcase","toUpperCase","datasetToProperty","cap","kebab","datasetToAttribute","$0","subvalue","lastIndex","dot","hash","trim","input","empty","split","whiteSpace","val","comma","end","options","settings","padLeft","padRight","legacy","invalid","decimal","hexadecimal","alphanumerical","decodeEntity","option","defaults","position","indent","entityCharacters","namedEntity","terminated","characters","reference","following","warning","reason","output","entity","begin","prev","next","diff","additional","nonTerminated","handleText","handleReference","handleWarning","textContext","referenceContext","warningContext","pos","lines","column","line","queue","now","offset","MESSAGES","noop","at","flush","NAMED","HEXADECIMAL","DECIMAL","TESTS","NAMED_UNKNOWN","NAMED_NOT_TERMINATED","NAMED_EMPTY","NUMERIC_NOT_TERMINATED","parseInt","BASE","NUMERIC_PROHIBITED","NUMERIC_DISALLOWED","disallowed","fromCharCode","NUMERIC_EMPTY","Function","alphabetical","el","document","createElement","innerHTML","textContent","_self","WorkerGlobalScope","uniqueId","o","toString","match","objId","obj","defineProperty","visited","forEach","v","redef","before","insert","root","newToken","ret","DFS","callback","plugins","highlightAll","highlightAllUnder","container","element","elements","querySelectorAll","highlightElement","parentNode","nodeName","Worker","worker","filename","onmessage","evt","highlightedCode","postMessage","JSON","immediateClose","tokenize","matchGrammar","strarr","startPos","oneshot","patterns","j","lookbehindLength","flags","RegExp","exec","from","to","k","p","len","delNum","after","args","wrapped","all","callbacks","matchedStr","keys","addEventListener","message","close","currentScript","getElementsByTagName","hasAttribute","readyState","requestAnimationFrame","setTimeout","prolog","doctype","cdata","namespace","attr-name","mathml","svg","atrule","rule","url","important","style-attr","function-variable","template-string","interpolation-punctuation","abap","string-template","eol-comment","string-operator","token-operator","actionscript","ada","apacheconf","directive-inline","directive-block","directive-block-parameter","directive-flags","apl","statement","system-function","monadic-operator","dyadic-operator","assignment","dfn","applescript","class","refractorCpp","arduino","arff","asciidoc","quoted","interpreted","comment-block","table","specifiers","passthrough-block","literal-block","other-block","list-punctuation","list-label","indented-block","attribute-entry","hr","page-break","admonition","callout","inline","attribute-ref","italic","bold","replacement","line-continuation","asm6502","opcode","hexnumber","binarynumber","decimalnumber","aspnet","page-directive tag","directive tag","csharp","asp comment","asp script","autohotkey","autoit","bash","insideString","shebang","shell","batch","parameter","command","bison","bison-variable","brainfuck","pointer","decrement","branching","bro","clojure","coffeescript","class-member","multiline-comment","block-regex","inline-javascript","multiline-string","refractorRuby","crystal","expansion","generic-method","preprocessor","dotnet","csp","safe","unsafe","cssExtras","pseudo-element","pseudo-class","hexcode","d","token-string","dart","metadata","coord","deleted","inserted","django","_django_template","jinja2","docker","dockerfile","eiffel","elixir","atom","argument","elm","import_statement","hvariable","erb","erlang","quoted-function","quoted-atom","flow","flow-punctuation","fortran","quoted-number","fsharp","gedcom","line-value","level","gherkin","pystring","feature","scenario","table-body","outline","td","table-head","th","git","commit_sha1","glsl","go","graphql","groovy","spock-block","expression","haml","multiline-code","filter","filter-name","filters","all_filters","l","handlebars","block","brackets","haskell","haxe","reification","hpkp","hsts","http","request-line","response-status","header-name","httpLanguages","application/json","application/xml","text/xml","text/html","contentType","ichigojam","icon","builtin-keyword","inform7","substitution","verb","ini","io","triple-quoted-string","adverb","conjunction","jolie","aggregates","withExtension","redirects","json","null","jsonp","julia","keyman","kotlin","latex","funcPattern","insideEqu","equation-command","equation","headline","less","mixin-usage","liquid","lisp","simple_form","primitive","par","heading","quoted-symbol","lisp-property","interactive","defvar","defun","lambda","car","arg","lisp-marker","varform","forms","arglist","rest-vars","other-marker-vars","sublist","elisp","emacs","livescript","interpolated-string","keyword-operator","identifier","lolcode","lua","makefile","markdown","blockquote","url-reference","markupTemplating","defineProperties","placeholderPattern","replaceFilter","tokenStack","t","s","substring","middle","matlab","mel","flag","mizar","monkey","type-char","n4js","n4jsd","nasm","nginx","nim","ignore","nix","antiquotation","nsis","objectivec","ocaml","opencl","function-opencl-kernel","constant-opencl-kernel","type-opencl-host","boolean-opencl-host","constant-opencl-host","function-opencl-host","oz","parigp","keywords","parser","escape","parser-comment","parser-punctuation","pascal","objectpascal","perl","filehandle","vstring","refractorPhp","phpExtras","refractorSql","plsql","powershell","processing","protobuf","pug","multiline-script","multiline-plain-text","flow-control","each","branch","mixin","plain-text","puppet","heredoc","extended-regex","double-quoted","datatype","short-variable","pure","inline-lang","special","python","q","datetime","qore","r","percent-operator","ellipsis","constructor","renpy","substitution-def","link-target","field","command-line-option","literal-block-punctuation","quoted-literal-block","list-bullet","doctest-block","inline-literal","interpreted-text","rip","date","time","roboconf","component","optional","wildcard","rust","lifetime-annotation","macro-rules","closure-params","sas","datalines","sass","atrule-line","variable-line","property-line","refractorJava","scala","scss","smalltalk","block-arguments","temporary-variables","smarty","smarty-comment","smartyLitteralMode","soy","stringPattern","numberPattern","command-arg","soyLitteralMode","stylus","func","atrule-declaration","variable-declaration","property-declaration","swift","tap","fail","pass","pragma","bailout","plan","subtest","yamlish","yaml","tcl","textile","modifierRegex","modifierTokens","class-id","phrase","block-tag","modifier","link-ref","image","footnote","acronym","nestedPatterns","refractorJsx","refractorTypescript","tsx","tt2","twig","ld","rd","other","refractorBasic","vbnet","velocity","unparsed","velocity-comment","verilog","vhdl","vhdl-vectors","vim","visualBasic","vb","wasm","wiki","block-comment","emphasis","bold italic","table-tag","table-bar","nowiki","xeora","function-inline","function-block","directive-block-open","directive-block-separator","directive-block-close","xeoracube","xojo","xquery","xquery-comment","extension","xquery-element","xquery-attribute","scalar","objectWithoutPropertiesLoose","excluded","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","sourceKeys","_extends","assign","ownKeys","sym","getOwnPropertyDescriptor","enumerable","configurable","writable","__webpack_exports__","code[class*=\"language-\"]","textShadow","fontFamily","textAlign","wordSpacing","wordBreak","wordWrap","lineHeight","MozTabSize","OTabSize","tabSize","WebkitHyphens","MozHyphens","msHyphens","hyphens","pre[class*=\"language-\"]","padding","margin","overflow","borderRadius",":not(pre) > code[class*=\"language-\"]",".namespace","Opacity","cursor",".language-css .token.string",".style .token.string","fontWeight","fontStyle","createStyleObject","classNames","elementStyle","stylesheet","reduce","styleObject","objectSpread_default","_ref","_ref$style","useInlineStyles","TagName","childrenCreator","childrenCount","child","createChildren","nonStylesheetClassNames","react_default","a","extends_default","newLineRegex","LineNumbers","_ref2","codeString","codeStyle","_ref2$containerStyle","containerStyle","float","paddingRight","_ref2$numberStyle","numberStyle","startingLineNumber","getLineNumbers","createLineElement","_ref3","lineNumber","lineProps","_ref3$className","wrapLinesInSpan","codeTree","tree","flattenCodeTree","newTree","lastLineBreakIndex","_loop","splitValue","newChild","_children","newElem","defaultRenderer","_ref4","defaultAstGenerator","defaultStyle","highlighter","pre[class*=\"language-\"]::-moz-selection","pre[class*=\"language-\"] ::-moz-selection","code[class*=\"language-\"]::-moz-selection","code[class*=\"language-\"] ::-moz-selection","pre[class*=\"language-\"]::selection","pre[class*=\"language-\"] ::selection","code[class*=\"language-\"]::selection","code[class*=\"language-\"] ::selection","_ref6","_ref6$style","_ref6$customStyle","customStyle","_ref6$codeTagProps","codeTagProps","_ref6$useInlineStyles","_ref6$showLineNumbers","showLineNumbers","_ref6$startingLineNum","lineNumberContainerStyle","lineNumberStyle","wrapLines","_ref6$lineProps","renderer","_ref6$PreTag","PreTag","_ref6$CodeTag","CodeTag","_ref6$code","isArray","astGenerator","objectWithoutProperties_default","lineNumbers","defaultPreStyle","hljs","backgroundColor","preProps","defaultCodeValue","_ref5","getLanguage","hasLanguage","highlightAuto","e","getCodeTree","supportedLanguages"],"mappings":"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9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,KAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,KAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,KAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,KAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,KAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,KAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,KAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,KAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,KAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,EAAArF,SAAmB9B,EAAQ,MAC3BmH,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","file":"static/js/0.91c9a9f5.chunk.js","sourcesContent":["'use strict';\n\nmodule.exports = c;\nc.displayName = 'c';\nc.aliases = [];\n\nfunction c(Prism) {\n  Prism.languages.c = Prism.languages.extend('clike', {\n    keyword: /\\b(?:_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|asm|typeof|inline|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|void|volatile|while)\\b/,\n    operator: /-[>-]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|\\|?|[~^%?*\\/]/,\n    number: /(?:\\b0x[\\da-f]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ful]*/i\n  });\n  Prism.languages.insertBefore('c', 'string', {\n    macro: {\n      // allow for multiline macro definitions\n      // spaces after the # character compile fine with gcc\n      pattern: /(^\\s*)#\\s*[a-z]+(?:[^\\r\\n\\\\]|\\\\(?:\\r\\n|[\\s\\S]))*/im,\n      lookbehind: true,\n      alias: 'property',\n      inside: {\n        // highlight the path of the include statement as a string\n        string: {\n          pattern: /(#\\s*include\\s*)(?:<.+?>|(\"|')(?:\\\\?.)+?\\2)/,\n          lookbehind: true\n        },\n        // highlight macro directives as keywords\n        directive: {\n          pattern: /(#\\s*)\\b(?:define|defined|elif|else|endif|error|ifdef|ifndef|if|import|include|line|pragma|undef|using)\\b/,\n          lookbehind: true,\n          alias: 'keyword'\n        }\n      }\n    },\n    // highlight predefined macros as constants\n    constant: /\\b(?:__FILE__|__LINE__|__DATE__|__TIME__|__TIMESTAMP__|__func__|EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|stdin|stdout|stderr)\\b/\n  });\n  delete Prism.languages.c['class-name'];\n  delete Prism.languages.c['boolean'];\n}","'use strict';\n\nvar normalize = require('../../normalize');\n\nvar Schema = require('./schema');\n\nvar DefinedInfo = require('./defined-info');\n\nmodule.exports = create;\n\nfunction create(definition) {\n  var space = definition.space;\n  var mustUseProperty = definition.mustUseProperty || [];\n  var attributes = definition.attributes || {};\n  var props = definition.properties;\n  var transform = definition.transform;\n  var property = {};\n  var normal = {};\n  var prop;\n  var info;\n\n  for (prop in props) {\n    info = new DefinedInfo(prop, transform(attributes, prop), props[prop], space);\n\n    if (mustUseProperty.indexOf(prop) !== -1) {\n      info.mustUseProperty = true;\n    }\n\n    property[prop] = info;\n    normal[normalize(prop)] = prop;\n    normal[normalize(info.attribute)] = prop;\n  }\n\n  return new Schema(property, normal, space);\n}","'use strict';\n\nmodule.exports = normalize;\n\nfunction normalize(value) {\n  return value.toLowerCase();\n}","'use strict';\n\nvar powers = 0;\nexports.boolean = increment();\nexports.booleanish = increment();\nexports.overloadedBoolean = increment();\nexports.number = increment();\nexports.spaceSeparated = increment();\nexports.commaSeparated = increment();\nexports.commaOrSpaceSeparated = increment();\n\nfunction increment() {\n  return Math.pow(2, ++powers);\n}","'use strict';\n\nvar refractorC = require('./c.js');\n\nmodule.exports = cpp;\ncpp.displayName = 'cpp';\ncpp.aliases = [];\n\nfunction cpp(Prism) {\n  Prism.register(refractorC);\n  Prism.languages.cpp = Prism.languages.extend('c', {\n    keyword: /\\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char16_t|char32_t|class|compl|const|constexpr|const_cast|continue|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|float|for|friend|goto|if|inline|int|int8_t|int16_t|int32_t|int64_t|uint8_t|uint16_t|uint32_t|uint64_t|long|mutable|namespace|new|noexcept|nullptr|operator|private|protected|public|register|reinterpret_cast|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|union|unsigned|using|virtual|void|volatile|wchar_t|while)\\b/,\n    boolean: /\\b(?:true|false)\\b/,\n    operator: /--?|\\+\\+?|!=?|<{1,2}=?|>{1,2}=?|->|:{1,2}|={1,2}|\\^|~|%|&{1,2}|\\|\\|?|\\?|\\*|\\/|\\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\\b/\n  });\n  Prism.languages.insertBefore('cpp', 'keyword', {\n    'class-name': {\n      pattern: /(class\\s+)\\w+/i,\n      lookbehind: true\n    }\n  });\n  Prism.languages.insertBefore('cpp', 'string', {\n    'raw-string': {\n      pattern: /R\"([^()\\\\ ]{0,16})\\([\\s\\S]*?\\)\\1\"/,\n      alias: 'string',\n      greedy: true\n    }\n  });\n}","'use strict';\n\nmodule.exports = ruby;\nruby.displayName = 'ruby';\nruby.aliases = [];\n\nfunction ruby(Prism) {\n  /**\n   * Original by Samuel Flores\n   *\n   * Adds the following new token classes:\n   *      constant, builtin, variable, symbol, regex\n   */\n  ;\n\n  (function (Prism) {\n    Prism.languages.ruby = Prism.languages.extend('clike', {\n      comment: [/#.*/, {\n        pattern: /^=begin(?:\\r?\\n|\\r)(?:.*(?:\\r?\\n|\\r))*?=end/m,\n        greedy: true\n      }],\n      keyword: /\\b(?:alias|and|BEGIN|begin|break|case|class|def|define_method|defined|do|each|else|elsif|END|end|ensure|false|for|if|in|module|new|next|nil|not|or|protected|private|public|raise|redo|require|rescue|retry|return|self|super|then|throw|true|undef|unless|until|when|while|yield)\\b/\n    });\n    var interpolation = {\n      pattern: /#\\{[^}]+\\}/,\n      inside: {\n        delimiter: {\n          pattern: /^#\\{|\\}$/,\n          alias: 'tag'\n        },\n        rest: Prism.languages.ruby\n      }\n    };\n    Prism.languages.insertBefore('ruby', 'keyword', {\n      regex: [{\n        pattern: /%r([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1[gim]{0,3}/,\n        greedy: true,\n        inside: {\n          interpolation: interpolation\n        }\n      }, {\n        pattern: /%r\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)[gim]{0,3}/,\n        greedy: true,\n        inside: {\n          interpolation: interpolation\n        }\n      }, {\n        // Here we need to specifically allow interpolation\n        pattern: /%r\\{(?:[^#{}\\\\]|#(?:\\{[^}]+\\})?|\\\\[\\s\\S])*\\}[gim]{0,3}/,\n        greedy: true,\n        inside: {\n          interpolation: interpolation\n        }\n      }, {\n        pattern: /%r\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S])*\\][gim]{0,3}/,\n        greedy: true,\n        inside: {\n          interpolation: interpolation\n        }\n      }, {\n        pattern: /%r<(?:[^<>\\\\]|\\\\[\\s\\S])*>[gim]{0,3}/,\n        greedy: true,\n        inside: {\n          interpolation: interpolation\n        }\n      }, {\n        pattern: /(^|[^/])\\/(?!\\/)(\\[.+?]|\\\\.|[^/\\\\\\r\\n])+\\/[gim]{0,3}(?=\\s*($|[\\r\\n,.;})]))/,\n        lookbehind: true,\n        greedy: true\n      }],\n      variable: /[@$]+[a-zA-Z_]\\w*(?:[?!]|\\b)/,\n      symbol: {\n        pattern: /(^|[^:]):[a-zA-Z_]\\w*(?:[?!]|\\b)/,\n        lookbehind: true\n      }\n    });\n    Prism.languages.insertBefore('ruby', 'number', {\n      builtin: /\\b(?:Array|Bignum|Binding|Class|Continuation|Dir|Exception|FalseClass|File|Stat|Fixnum|Float|Hash|Integer|IO|MatchData|Method|Module|NilClass|Numeric|Object|Proc|Range|Regexp|String|Struct|TMS|Symbol|ThreadGroup|Thread|Time|TrueClass)\\b/,\n      constant: /\\b[A-Z]\\w*(?:[?!]|\\b)/\n    });\n    Prism.languages.ruby.string = [{\n      pattern: /%[qQiIwWxs]?([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\n      greedy: true,\n      inside: {\n        interpolation: interpolation\n      }\n    }, {\n      pattern: /%[qQiIwWxs]?\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)/,\n      greedy: true,\n      inside: {\n        interpolation: interpolation\n      }\n    }, {\n      // Here we need to specifically allow interpolation\n      pattern: /%[qQiIwWxs]?\\{(?:[^#{}\\\\]|#(?:\\{[^}]+\\})?|\\\\[\\s\\S])*\\}/,\n      greedy: true,\n      inside: {\n        interpolation: interpolation\n      }\n    }, {\n      pattern: /%[qQiIwWxs]?\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S])*\\]/,\n      greedy: true,\n      inside: {\n        interpolation: interpolation\n      }\n    }, {\n      pattern: /%[qQiIwWxs]?<(?:[^<>\\\\]|\\\\[\\s\\S])*>/,\n      greedy: true,\n      inside: {\n        interpolation: interpolation\n      }\n    }, {\n      pattern: /(\"|')(?:#\\{[^}]+\\}|\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true,\n      inside: {\n        interpolation: interpolation\n      }\n    }];\n  })(Prism);\n}","'use strict';\n\nmodule.exports = Schema;\nvar proto = Schema.prototype;\nproto.space = null;\nproto.normal = {};\nproto.property = {};\n\nfunction Schema(property, normal, space) {\n  this.property = property;\n  this.normal = normal;\n\n  if (space) {\n    this.space = space;\n  }\n}","'use strict';\n\nvar Info = require('./info');\n\nvar types = require('./types');\n\nmodule.exports = DefinedInfo;\nDefinedInfo.prototype = new Info();\nDefinedInfo.prototype.defined = true;\n\nfunction DefinedInfo(property, attribute, mask, space) {\n  mark(this, 'space', space);\n  Info.call(this, property, attribute);\n  mark(this, 'boolean', check(mask, types.boolean));\n  mark(this, 'booleanish', check(mask, types.booleanish));\n  mark(this, 'overloadedBoolean', check(mask, types.overloadedBoolean));\n  mark(this, 'number', check(mask, types.number));\n  mark(this, 'commaSeparated', check(mask, types.commaSeparated));\n  mark(this, 'spaceSeparated', check(mask, types.spaceSeparated));\n  mark(this, 'commaOrSpaceSeparated', check(mask, types.commaOrSpaceSeparated));\n}\n\nfunction mark(values, key, value) {\n  if (value) {\n    values[key] = value;\n  }\n}\n\nfunction check(value, mask) {\n  return (value & mask) === mask;\n}","'use strict';\n\nmodule.exports = Info;\nvar proto = Info.prototype;\nproto.space = null;\nproto.attribute = null;\nproto.property = null;\nproto.boolean = false;\nproto.booleanish = false;\nproto.overloadedBoolean = false;\nproto.number = false;\nproto.commaSeparated = false;\nproto.spaceSeparated = false;\nproto.commaOrSpaceSeparated = false;\nproto.mustUseProperty = false;\nproto.defined = false;\n\nfunction Info(property, attribute) {\n  this.property = property;\n  this.attribute = attribute;\n}","'use strict';\n\nvar caseSensitiveTransform = require('./case-sensitive-transform');\n\nmodule.exports = caseInsensitiveTransform;\n\nfunction caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase());\n}","exports = module.exports = trim;\n\nfunction trim(str) {\n  return str.replace(/^\\s*|\\s*$/g, '');\n}\n\nexports.left = function (str) {\n  return str.replace(/^\\s*/, '');\n};\n\nexports.right = function (str) {\n  return str.replace(/\\s*$/, '');\n};","'use strict';\n\nmodule.exports = decimal;\n/* Check if the given character code, or the character\n * code at the first character, is decimal. */\n\nfunction decimal(character) {\n  var code = typeof character === 'string' ? character.charCodeAt(0) : character;\n  return code >= 48 && code <= 57;\n  /* 0-9 */\n}","'use strict';\n\nmodule.exports = basic;\nbasic.displayName = 'basic';\nbasic.aliases = [];\n\nfunction basic(Prism) {\n  Prism.languages.basic = {\n    comment: {\n      pattern: /(?:!|REM\\b).+/i,\n      inside: {\n        keyword: /^REM/i\n      }\n    },\n    string: {\n      pattern: /\"(?:\"\"|[!#$%&'()*,\\/:;<=>?^_ +\\-.A-Z\\d])*\"/i,\n      greedy: true\n    },\n    number: /(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:E[+-]?\\d+)?/i,\n    keyword: /\\b(?:AS|BEEP|BLOAD|BSAVE|CALL(?: ABSOLUTE)?|CASE|CHAIN|CHDIR|CLEAR|CLOSE|CLS|COM|COMMON|CONST|DATA|DECLARE|DEF(?: FN| SEG|DBL|INT|LNG|SNG|STR)|DIM|DO|DOUBLE|ELSE|ELSEIF|END|ENVIRON|ERASE|ERROR|EXIT|FIELD|FILES|FOR|FUNCTION|GET|GOSUB|GOTO|IF|INPUT|INTEGER|IOCTL|KEY|KILL|LINE INPUT|LOCATE|LOCK|LONG|LOOP|LSET|MKDIR|NAME|NEXT|OFF|ON(?: COM| ERROR| KEY| TIMER)?|OPEN|OPTION BASE|OUT|POKE|PUT|READ|REDIM|REM|RESTORE|RESUME|RETURN|RMDIR|RSET|RUN|SHARED|SINGLE|SELECT CASE|SHELL|SLEEP|STATIC|STEP|STOP|STRING|SUB|SWAP|SYSTEM|THEN|TIMER|TO|TROFF|TRON|TYPE|UNLOCK|UNTIL|USING|VIEW PRINT|WAIT|WEND|WHILE|WRITE)(?:\\$|\\b)/i,\n    function: /\\b(?:ABS|ACCESS|ACOS|ANGLE|AREA|ARITHMETIC|ARRAY|ASIN|ASK|AT|ATN|BASE|BEGIN|BREAK|CAUSE|CEIL|CHR|CLIP|COLLATE|COLOR|CON|COS|COSH|COT|CSC|DATE|DATUM|DEBUG|DECIMAL|DEF|DEG|DEGREES|DELETE|DET|DEVICE|DISPLAY|DOT|ELAPSED|EPS|ERASABLE|EXLINE|EXP|EXTERNAL|EXTYPE|FILETYPE|FIXED|FP|GO|GRAPH|HANDLER|IDN|IMAGE|IN|INT|INTERNAL|IP|IS|KEYED|LBOUND|LCASE|LEFT|LEN|LENGTH|LET|LINE|LINES|LOG|LOG10|LOG2|LTRIM|MARGIN|MAT|MAX|MAXNUM|MID|MIN|MISSING|MOD|NATIVE|NUL|NUMERIC|OF|OPTION|ORD|ORGANIZATION|OUTIN|OUTPUT|PI|POINT|POINTER|POINTS|POS|PRINT|PROGRAM|PROMPT|RAD|RADIANS|RANDOMIZE|RECORD|RECSIZE|RECTYPE|RELATIVE|REMAINDER|REPEAT|REST|RETRY|REWRITE|RIGHT|RND|ROUND|RTRIM|SAME|SEC|SELECT|SEQUENTIAL|SET|SETTER|SGN|SIN|SINH|SIZE|SKIP|SQR|STANDARD|STATUS|STR|STREAM|STYLE|TAB|TAN|TANH|TEMPLATE|TEXT|THERE|TIME|TIMEOUT|TRACE|TRANSFORM|TRUNCATE|UBOUND|UCASE|USE|VAL|VARIABLE|VIEWPORT|WHEN|WINDOW|WITH|ZER|ZONEWIDTH)(?:\\$|\\b)/i,\n    operator: /<[=>]?|>=?|[+\\-*\\/^=&]|\\b(?:AND|EQV|IMP|NOT|OR|XOR)\\b/i,\n    punctuation: /[,;:()]/\n  };\n}","'use strict';\n\nmodule.exports = java;\njava.displayName = 'java';\njava.aliases = [];\n\nfunction java(Prism) {\n  Prism.languages.java = Prism.languages.extend('clike', {\n    keyword: /\\b(?:abstract|continue|for|new|switch|assert|default|goto|package|synchronized|boolean|do|if|private|this|break|double|implements|protected|throw|byte|else|import|public|throws|case|enum|instanceof|return|transient|catch|extends|int|short|try|char|final|interface|static|void|class|finally|long|strictfp|volatile|const|float|native|super|while)\\b/,\n    number: /\\b0b[01]+\\b|\\b0x[\\da-f]*\\.?[\\da-fp-]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?[df]?/i,\n    operator: {\n      pattern: /(^|[^.])(?:\\+[+=]?|-[-=]?|!=?|<<?=?|>>?>?=?|==?|&[&=]?|\\|[|=]?|\\*=?|\\/=?|%=?|\\^=?|[?:~])/m,\n      lookbehind: true\n    }\n  });\n  Prism.languages.insertBefore('java', 'function', {\n    annotation: {\n      alias: 'punctuation',\n      pattern: /(^|[^.])@\\w+/,\n      lookbehind: true\n    }\n  });\n  Prism.languages.insertBefore('java', 'class-name', {\n    generics: {\n      pattern: /<\\s*\\w+(?:\\.\\w+)?(?:\\s*,\\s*\\w+(?:\\.\\w+)?)*>/i,\n      alias: 'function',\n      inside: {\n        keyword: Prism.languages.java.keyword,\n        punctuation: /[<>(),.:]/\n      }\n    }\n  });\n}","'use strict';\n\nmodule.exports = jsx;\njsx.displayName = 'jsx';\njsx.aliases = [];\n\nfunction jsx(Prism) {\n  ;\n\n  (function (Prism) {\n    var javascript = Prism.util.clone(Prism.languages.javascript);\n    Prism.languages.jsx = Prism.languages.extend('markup', javascript);\n    Prism.languages.jsx.tag.pattern = /<\\/?(?:[\\w.:-]+\\s*(?:\\s+(?:[\\w.:-]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s{'\">=]+|\\{(?:\\{(?:\\{[^}]*\\}|[^{}])*\\}|[^{}])+\\}))?|\\{\\.{3}[a-z_$][\\w$]*(?:\\.[a-z_$][\\w$]*)*\\}))*\\s*\\/?)?>/i;\n    Prism.languages.jsx.tag.inside['tag'].pattern = /^<\\/?[^\\s>\\/]*/i;\n    Prism.languages.jsx.tag.inside['attr-value'].pattern = /=(?!\\{)(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">]+)/i;\n    Prism.languages.insertBefore('inside', 'attr-name', {\n      spread: {\n        pattern: /\\{\\.{3}[a-z_$][\\w$]*(?:\\.[a-z_$][\\w$]*)*\\}/,\n        inside: {\n          punctuation: /\\.{3}|[{}.]/,\n          'attr-value': /\\w+/\n        }\n      }\n    }, Prism.languages.jsx.tag);\n    Prism.languages.insertBefore('inside', 'attr-value', {\n      script: {\n        // Allow for two levels of nesting\n        pattern: /=(\\{(?:\\{(?:\\{[^}]*\\}|[^}])*\\}|[^}])+\\})/i,\n        inside: {\n          'script-punctuation': {\n            pattern: /^=(?={)/,\n            alias: 'punctuation'\n          },\n          rest: Prism.languages.jsx\n        },\n        alias: 'language-javascript'\n      }\n    }, Prism.languages.jsx.tag); // The following will handle plain text inside tags\n\n    var stringifyToken = function stringifyToken(token) {\n      if (!token) {\n        return '';\n      }\n\n      if (typeof token === 'string') {\n        return token;\n      }\n\n      if (typeof token.content === 'string') {\n        return token.content;\n      }\n\n      return token.content.map(stringifyToken).join('');\n    };\n\n    var walkTokens = function walkTokens(tokens) {\n      var openedTags = [];\n\n      for (var i = 0; i < tokens.length; i++) {\n        var token = tokens[i];\n        var notTagNorBrace = false;\n\n        if (typeof token !== 'string') {\n          if (token.type === 'tag' && token.content[0] && token.content[0].type === 'tag') {\n            // We found a tag, now find its kind\n            if (token.content[0].content[0].content === '</') {\n              // Closing tag\n              if (openedTags.length > 0 && openedTags[openedTags.length - 1].tagName === stringifyToken(token.content[0].content[1])) {\n                // Pop matching opening tag\n                openedTags.pop();\n              }\n            } else {\n              if (token.content[token.content.length - 1].content === '/>') {// Autoclosed tag, ignore\n              } else {\n                // Opening tag\n                openedTags.push({\n                  tagName: stringifyToken(token.content[0].content[1]),\n                  openedBraces: 0\n                });\n              }\n            }\n          } else if (openedTags.length > 0 && token.type === 'punctuation' && token.content === '{') {\n            // Here we might have entered a JSX context inside a tag\n            openedTags[openedTags.length - 1].openedBraces++;\n          } else if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces > 0 && token.type === 'punctuation' && token.content === '}') {\n            // Here we might have left a JSX context inside a tag\n            openedTags[openedTags.length - 1].openedBraces--;\n          } else {\n            notTagNorBrace = true;\n          }\n        }\n\n        if (notTagNorBrace || typeof token === 'string') {\n          if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces === 0) {\n            // Here we are inside a tag, and not inside a JSX context.\n            // That's plain text: drop any tokens matched.\n            var plainText = stringifyToken(token); // And merge text with adjacent text\n\n            if (i < tokens.length - 1 && (typeof tokens[i + 1] === 'string' || tokens[i + 1].type === 'plain-text')) {\n              plainText += stringifyToken(tokens[i + 1]);\n              tokens.splice(i + 1, 1);\n            }\n\n            if (i > 0 && (typeof tokens[i - 1] === 'string' || tokens[i - 1].type === 'plain-text')) {\n              plainText = stringifyToken(tokens[i - 1]) + plainText;\n              tokens.splice(i - 1, 1);\n              i--;\n            }\n\n            tokens[i] = new Prism.Token('plain-text', plainText, null, plainText);\n          }\n        }\n\n        if (token.content && typeof token.content !== 'string') {\n          walkTokens(token.content);\n        }\n      }\n    };\n\n    Prism.hooks.add('after-tokenize', function (env) {\n      if (env.language !== 'jsx' && env.language !== 'tsx') {\n        return;\n      }\n\n      walkTokens(env.tokens);\n    });\n  })(Prism);\n}","'use strict';\n\nmodule.exports = php;\nphp.displayName = 'php';\nphp.aliases = [];\n\nfunction php(Prism) {\n  /**\n   * Original by Aaron Harun: http://aahacreative.com/2012/07/31/php-syntax-highlighting-prism/\n   * Modified by Miles Johnson: http://milesj.me\n   *\n   * Supports the following:\n   *      - Extends clike syntax\n   *      - Support for PHP 5.3+ (namespaces, traits, generators, etc)\n   *      - Smarter constant and function matching\n   *\n   * Adds the following new token classes:\n   *      constant, delimiter, variable, function, package\n   */\n  ;\n\n  (function (Prism) {\n    Prism.languages.php = Prism.languages.extend('clike', {\n      keyword: /\\b(?:and|or|xor|array|as|break|case|cfunction|class|const|continue|declare|default|die|do|else|elseif|enddeclare|endfor|endforeach|endif|endswitch|endwhile|extends|for|foreach|function|include|include_once|global|if|new|return|static|switch|use|require|require_once|var|while|abstract|interface|public|implements|private|protected|parent|throw|null|echo|print|trait|namespace|final|yield|goto|instanceof|finally|try|catch)\\b/i,\n      constant: /\\b[A-Z0-9_]{2,}\\b/,\n      comment: {\n        pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n        lookbehind: true\n      }\n    });\n    Prism.languages.insertBefore('php', 'string', {\n      'shell-comment': {\n        pattern: /(^|[^\\\\])#.*/,\n        lookbehind: true,\n        alias: 'comment'\n      }\n    });\n    Prism.languages.insertBefore('php', 'keyword', {\n      delimiter: {\n        pattern: /\\?>|<\\?(?:php|=)?/i,\n        alias: 'important'\n      },\n      variable: /\\$+(?:\\w+\\b|(?={))/i,\n      package: {\n        pattern: /(\\\\|namespace\\s+|use\\s+)[\\w\\\\]+/,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\\\/\n        }\n      }\n    }); // Must be defined after the function pattern\n\n    Prism.languages.insertBefore('php', 'operator', {\n      property: {\n        pattern: /(->)[\\w]+/,\n        lookbehind: true\n      }\n    });\n    Prism.languages.insertBefore('php', 'string', {\n      'nowdoc-string': {\n        pattern: /<<<'([^']+)'(?:\\r\\n?|\\n)(?:.*(?:\\r\\n?|\\n))*?\\1;/,\n        greedy: true,\n        alias: 'string',\n        inside: {\n          delimiter: {\n            pattern: /^<<<'[^']+'|[a-z_]\\w*;$/i,\n            alias: 'symbol',\n            inside: {\n              punctuation: /^<<<'?|[';]$/\n            }\n          }\n        }\n      },\n      'heredoc-string': {\n        pattern: /<<<(?:\"([^\"]+)\"(?:\\r\\n?|\\n)(?:.*(?:\\r\\n?|\\n))*?\\1;|([a-z_]\\w*)(?:\\r\\n?|\\n)(?:.*(?:\\r\\n?|\\n))*?\\2;)/i,\n        greedy: true,\n        alias: 'string',\n        inside: {\n          delimiter: {\n            pattern: /^<<<(?:\"[^\"]+\"|[a-z_]\\w*)|[a-z_]\\w*;$/i,\n            alias: 'symbol',\n            inside: {\n              punctuation: /^<<<\"?|[\";]$/\n            }\n          },\n          interpolation: null // See below\n\n        }\n      },\n      'single-quoted-string': {\n        pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n        greedy: true,\n        alias: 'string'\n      },\n      'double-quoted-string': {\n        pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n        greedy: true,\n        alias: 'string',\n        inside: {\n          interpolation: null // See below\n\n        }\n      }\n    }); // The different types of PHP strings \"replace\" the C-like standard string\n\n    delete Prism.languages.php['string'];\n    var string_interpolation = {\n      pattern: /{\\$(?:{(?:{[^{}]+}|[^{}]+)}|[^{}])+}|(^|[^\\\\{])\\$+(?:\\w+(?:\\[.+?]|->\\w+)*)/,\n      lookbehind: true,\n      inside: {\n        rest: Prism.languages.php\n      }\n    };\n    Prism.languages.php['heredoc-string'].inside['interpolation'] = string_interpolation;\n    Prism.languages.php['double-quoted-string'].inside['interpolation'] = string_interpolation;\n    Prism.hooks.add('before-tokenize', function (env) {\n      if (!/(?:<\\?php|<\\?)/gi.test(env.code)) {\n        return;\n      }\n\n      var phpPattern = /(?:<\\?php|<\\?)[\\s\\S]*?(?:\\?>|$)/gi;\n      Prism.languages['markup-templating'].buildPlaceholders(env, 'php', phpPattern);\n    });\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'php');\n    });\n  })(Prism);\n}","'use strict';\n\nmodule.exports = sql;\nsql.displayName = 'sql';\nsql.aliases = [];\n\nfunction sql(Prism) {\n  Prism.languages.sql = {\n    comment: {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:--|\\/\\/|#).*)/,\n      lookbehind: true\n    },\n    string: {\n      pattern: /(^|[^@\\\\])(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\])*\\2/,\n      greedy: true,\n      lookbehind: true\n    },\n    variable: /@[\\w.$]+|@([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1/,\n    function: /\\b(?:AVG|COUNT|FIRST|FORMAT|LAST|LCASE|LEN|MAX|MID|MIN|MOD|NOW|ROUND|SUM|UCASE)(?=\\s*\\()/i,\n    // Should we highlight user defined functions too?\n    keyword: /\\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|AUTO_INCREMENT|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR(?:ACTER|SET)?|CHECK(?:POINT)?|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMNS?|COMMENT|COMMIT(?:TED)?|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS(?:TABLE)?|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|CYCLE|DATA(?:BASES?)?|DATE(?:TIME)?|DAY|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DELIMITERS?|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE|ELSE(?:IF)?|ENABLE|ENCLOSED|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPED?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|HOUR|IDENTITY(?:_INSERT|COL)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTERVAL|INTO|INVOKER|ISOLATION|ITERATE|JOIN|KEYS?|KILL|LANGUAGE|LAST|LEAVE|LEFT|LEVEL|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|LOOP|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MINUTE|MODE|MODIFIES|MODIFY|MONTH|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL|NATURAL|NCHAR|NEXT|NO|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREPARE|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READS?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEAT(?:ABLE)?|REPLACE|REPLICATION|REQUIRE|RESIGNAL|RESTORE|RESTRICT|RETURNS?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SECOND|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|SQL|START(?:ING)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED|TEXT(?:SIZE)?|THEN|TIME(?:STAMP)?|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNLOCK|UNPIVOT|UNSIGNED|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?|YEAR)\\b/i,\n    boolean: /\\b(?:TRUE|FALSE|NULL)\\b/i,\n    number: /\\b0x[\\da-f]+\\b|\\b\\d+\\.?\\d*|\\B\\.\\d+\\b/i,\n    operator: /[-+*\\/=%^~]|&&?|\\|\\|?|!=?|<(?:=>?|<|>)?|>[>=]?|\\b(?:AND|BETWEEN|IN|LIKE|NOT|OR|IS|DIV|REGEXP|RLIKE|SOUNDS LIKE|XOR)\\b/i,\n    punctuation: /[;[\\]()`,.]/\n  };\n}","'use strict';\n\nmodule.exports = typescript;\ntypescript.displayName = 'typescript';\ntypescript.aliases = ['ts'];\n\nfunction typescript(Prism) {\n  Prism.languages.typescript = Prism.languages.extend('javascript', {\n    // From JavaScript Prism keyword list and TypeScript language spec: https://github.com/Microsoft/TypeScript/blob/master/doc/spec.md#221-reserved-words\n    keyword: /\\b(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|var|void|while|with|yield|module|declare|constructor|namespace|abstract|require|type)\\b/,\n    builtin: /\\b(?:string|Function|any|number|boolean|Array|symbol|console)\\b/\n  });\n  Prism.languages.ts = Prism.languages.typescript;\n}","'use strict';\n\nvar refractor = require('./core.js');\n\nmodule.exports = refractor;\nrefractor.register(require('./lang/abap.js'));\nrefractor.register(require('./lang/actionscript.js'));\nrefractor.register(require('./lang/ada.js'));\nrefractor.register(require('./lang/apacheconf.js'));\nrefractor.register(require('./lang/apl.js'));\nrefractor.register(require('./lang/applescript.js'));\nrefractor.register(require('./lang/arduino.js'));\nrefractor.register(require('./lang/arff.js'));\nrefractor.register(require('./lang/asciidoc.js'));\nrefractor.register(require('./lang/asm6502.js'));\nrefractor.register(require('./lang/aspnet.js'));\nrefractor.register(require('./lang/autohotkey.js'));\nrefractor.register(require('./lang/autoit.js'));\nrefractor.register(require('./lang/bash.js'));\nrefractor.register(require('./lang/basic.js'));\nrefractor.register(require('./lang/batch.js'));\nrefractor.register(require('./lang/bison.js'));\nrefractor.register(require('./lang/brainfuck.js'));\nrefractor.register(require('./lang/bro.js'));\nrefractor.register(require('./lang/c.js'));\nrefractor.register(require('./lang/clojure.js'));\nrefractor.register(require('./lang/coffeescript.js'));\nrefractor.register(require('./lang/cpp.js'));\nrefractor.register(require('./lang/crystal.js'));\nrefractor.register(require('./lang/csharp.js'));\nrefractor.register(require('./lang/csp.js'));\nrefractor.register(require('./lang/css-extras.js'));\nrefractor.register(require('./lang/d.js'));\nrefractor.register(require('./lang/dart.js'));\nrefractor.register(require('./lang/diff.js'));\nrefractor.register(require('./lang/django.js'));\nrefractor.register(require('./lang/docker.js'));\nrefractor.register(require('./lang/eiffel.js'));\nrefractor.register(require('./lang/elixir.js'));\nrefractor.register(require('./lang/elm.js'));\nrefractor.register(require('./lang/erb.js'));\nrefractor.register(require('./lang/erlang.js'));\nrefractor.register(require('./lang/flow.js'));\nrefractor.register(require('./lang/fortran.js'));\nrefractor.register(require('./lang/fsharp.js'));\nrefractor.register(require('./lang/gedcom.js'));\nrefractor.register(require('./lang/gherkin.js'));\nrefractor.register(require('./lang/git.js'));\nrefractor.register(require('./lang/glsl.js'));\nrefractor.register(require('./lang/go.js'));\nrefractor.register(require('./lang/graphql.js'));\nrefractor.register(require('./lang/groovy.js'));\nrefractor.register(require('./lang/haml.js'));\nrefractor.register(require('./lang/handlebars.js'));\nrefractor.register(require('./lang/haskell.js'));\nrefractor.register(require('./lang/haxe.js'));\nrefractor.register(require('./lang/hpkp.js'));\nrefractor.register(require('./lang/hsts.js'));\nrefractor.register(require('./lang/http.js'));\nrefractor.register(require('./lang/ichigojam.js'));\nrefractor.register(require('./lang/icon.js'));\nrefractor.register(require('./lang/inform7.js'));\nrefractor.register(require('./lang/ini.js'));\nrefractor.register(require('./lang/io.js'));\nrefractor.register(require('./lang/j.js'));\nrefractor.register(require('./lang/java.js'));\nrefractor.register(require('./lang/jolie.js'));\nrefractor.register(require('./lang/json.js'));\nrefractor.register(require('./lang/jsx.js'));\nrefractor.register(require('./lang/julia.js'));\nrefractor.register(require('./lang/keyman.js'));\nrefractor.register(require('./lang/kotlin.js'));\nrefractor.register(require('./lang/latex.js'));\nrefractor.register(require('./lang/less.js'));\nrefractor.register(require('./lang/liquid.js'));\nrefractor.register(require('./lang/lisp.js'));\nrefractor.register(require('./lang/livescript.js'));\nrefractor.register(require('./lang/lolcode.js'));\nrefractor.register(require('./lang/lua.js'));\nrefractor.register(require('./lang/makefile.js'));\nrefractor.register(require('./lang/markdown.js'));\nrefractor.register(require('./lang/markup-templating.js'));\nrefractor.register(require('./lang/matlab.js'));\nrefractor.register(require('./lang/mel.js'));\nrefractor.register(require('./lang/mizar.js'));\nrefractor.register(require('./lang/monkey.js'));\nrefractor.register(require('./lang/n4js.js'));\nrefractor.register(require('./lang/nasm.js'));\nrefractor.register(require('./lang/nginx.js'));\nrefractor.register(require('./lang/nim.js'));\nrefractor.register(require('./lang/nix.js'));\nrefractor.register(require('./lang/nsis.js'));\nrefractor.register(require('./lang/objectivec.js'));\nrefractor.register(require('./lang/ocaml.js'));\nrefractor.register(require('./lang/opencl.js'));\nrefractor.register(require('./lang/oz.js'));\nrefractor.register(require('./lang/parigp.js'));\nrefractor.register(require('./lang/parser.js'));\nrefractor.register(require('./lang/pascal.js'));\nrefractor.register(require('./lang/perl.js'));\nrefractor.register(require('./lang/php-extras.js'));\nrefractor.register(require('./lang/php.js'));\nrefractor.register(require('./lang/plsql.js'));\nrefractor.register(require('./lang/powershell.js'));\nrefractor.register(require('./lang/processing.js'));\nrefractor.register(require('./lang/prolog.js'));\nrefractor.register(require('./lang/properties.js'));\nrefractor.register(require('./lang/protobuf.js'));\nrefractor.register(require('./lang/pug.js'));\nrefractor.register(require('./lang/puppet.js'));\nrefractor.register(require('./lang/pure.js'));\nrefractor.register(require('./lang/python.js'));\nrefractor.register(require('./lang/q.js'));\nrefractor.register(require('./lang/qore.js'));\nrefractor.register(require('./lang/r.js'));\nrefractor.register(require('./lang/reason.js'));\nrefractor.register(require('./lang/renpy.js'));\nrefractor.register(require('./lang/rest.js'));\nrefractor.register(require('./lang/rip.js'));\nrefractor.register(require('./lang/roboconf.js'));\nrefractor.register(require('./lang/ruby.js'));\nrefractor.register(require('./lang/rust.js'));\nrefractor.register(require('./lang/sas.js'));\nrefractor.register(require('./lang/sass.js'));\nrefractor.register(require('./lang/scala.js'));\nrefractor.register(require('./lang/scheme.js'));\nrefractor.register(require('./lang/scss.js'));\nrefractor.register(require('./lang/smalltalk.js'));\nrefractor.register(require('./lang/smarty.js'));\nrefractor.register(require('./lang/soy.js'));\nrefractor.register(require('./lang/sql.js'));\nrefractor.register(require('./lang/stylus.js'));\nrefractor.register(require('./lang/swift.js'));\nrefractor.register(require('./lang/tap.js'));\nrefractor.register(require('./lang/tcl.js'));\nrefractor.register(require('./lang/textile.js'));\nrefractor.register(require('./lang/tsx.js'));\nrefractor.register(require('./lang/tt2.js'));\nrefractor.register(require('./lang/twig.js'));\nrefractor.register(require('./lang/typescript.js'));\nrefractor.register(require('./lang/vbnet.js'));\nrefractor.register(require('./lang/velocity.js'));\nrefractor.register(require('./lang/verilog.js'));\nrefractor.register(require('./lang/vhdl.js'));\nrefractor.register(require('./lang/vim.js'));\nrefractor.register(require('./lang/visual-basic.js'));\nrefractor.register(require('./lang/wasm.js'));\nrefractor.register(require('./lang/wiki.js'));\nrefractor.register(require('./lang/xeora.js'));\nrefractor.register(require('./lang/xojo.js'));\nrefractor.register(require('./lang/xquery.js'));\nrefractor.register(require('./lang/yaml.js'));","'use strict';\n/* global window, self */\n\nvar restore = capture(); // istanbul ignore next - Don't allow Prism to run on page load in browser or\n// to start messaging from workers.\n\nvar ctx = typeof window === 'undefined' ? typeof self === 'undefined' ? {} : self : window;\nctx.Prism = {\n  manual: true,\n  disableWorkerMessageHandler: true\n  /* Load all stuff in `prism.js` itself, except for\n   * `prism-file-highlight.js`.\n   * The wrapped non-leaky grammars are loaded instead of\n   * Prism’s originals. */\n\n};\n\nvar h = require('hastscript');\n\nvar decode = require('parse-entities');\n\nvar Prism = require('prismjs/components/prism-core');\n\nvar markup = require('./lang/markup');\n\nvar css = require('./lang/css');\n\nvar clike = require('./lang/clike');\n\nvar js = require('./lang/javascript');\n\nrestore();\nvar own = {}.hasOwnProperty;\n/* Inherit. */\n\nfunction Refractor() {}\n\nRefractor.prototype = Prism;\n/* Construct. */\n\nvar refract = new Refractor();\n/* Expose. */\n\nmodule.exports = refract;\n/* Create. */\n\nrefract.highlight = highlight;\nrefract.register = register;\nrefract.registered = registered;\n/* Register bundled grammars. */\n\nregister(markup);\nregister(css);\nregister(clike);\nregister(js);\nrefract.util.encode = encode;\nrefract.Token.stringify = stringify;\n\nfunction register(grammar) {\n  if (typeof grammar !== 'function' || !grammar.displayName) {\n    throw new Error('Expected `function` for `grammar`, got `' + grammar + '`');\n  }\n  /* Do not duplicate registrations. */\n\n\n  if (refract.languages[grammar.displayName] === undefined) {\n    grammar(refract);\n  }\n}\n\nfunction highlight(value, name) {\n  var sup = Prism.highlight;\n  var grammar;\n\n  if (typeof value !== 'string') {\n    throw new Error('Expected `string` for `value`, got `' + value + '`');\n  }\n  /* `name` is a grammar object */\n\n\n  if (refract.util.type(name) === 'Object') {\n    grammar = name;\n    name = null;\n  } else {\n    if (typeof name !== 'string') {\n      throw new Error('Expected `string` for `name`, got `' + name + '`');\n    }\n\n    if (own.call(refract.languages, name)) {\n      grammar = refract.languages[name];\n    } else {\n      throw new Error('Unknown language: `' + name + '` is not registered');\n    }\n  }\n\n  return sup.call(this, value, grammar, name);\n}\n\nfunction registered(language) {\n  if (typeof language !== 'string') {\n    throw new Error('Expected `string` for `language`, got `' + language + '`');\n  }\n\n  return own.call(refract.languages, language);\n}\n\nfunction stringify(value, language, parent) {\n  var env;\n\n  if (typeof value === 'string') {\n    return {\n      type: 'text',\n      value: value\n    };\n  }\n\n  if (refract.util.type(value) === 'Array') {\n    return stringifyAll(value, language);\n  }\n\n  env = {\n    type: value.type,\n    content: refract.Token.stringify(value.content, language, parent),\n    tag: 'span',\n    classes: ['token', value.type],\n    attributes: {},\n    language: language,\n    parent: parent\n  };\n\n  if (value.alias) {\n    env.classes = env.classes.concat(value.alias);\n  }\n\n  refract.hooks.run('wrap', env);\n  return h(env.tag + '.' + env.classes.join('.'), attributes(env.attributes), env.content);\n}\n\nfunction stringifyAll(values, language) {\n  var result = [];\n  var length = values.length;\n  var index = -1;\n  var value;\n\n  while (++index < length) {\n    value = values[index];\n\n    if (value !== '' && value !== null && value !== undefined) {\n      result.push(value);\n    }\n  }\n\n  index = -1;\n  length = result.length;\n\n  while (++index < length) {\n    value = result[index];\n    result[index] = refract.Token.stringify(value, language, result);\n  }\n\n  return result;\n}\n\nfunction encode(tokens) {\n  return tokens;\n}\n\nfunction attributes(attrs) {\n  var key;\n\n  for (key in attrs) {\n    attrs[key] = decode(attrs[key]);\n  }\n\n  return attrs;\n}\n\nfunction capture() {\n  var defined = 'Prism' in global;\n  /* istanbul ignore next */\n\n  var current = defined ? global.Prism : undefined;\n  return restore;\n\n  function restore() {\n    /* istanbul ignore else - Clean leaks after Prism. */\n    if (defined) {\n      global.Prism = current;\n    } else {\n      delete global.Prism;\n    }\n\n    defined = undefined;\n    current = undefined;\n  }\n}","'use strict';\n\nmodule.exports = require('./html');","'use strict';\n\nvar schema = require('property-information/html');\n\nvar factory = require('./factory');\n\nvar html = factory(schema, 'div');\nhtml.displayName = 'html';\nmodule.exports = html;","'use strict';\n\nvar merge = require('./lib/util/merge');\n\nvar xlink = require('./lib/xlink');\n\nvar xml = require('./lib/xml');\n\nvar xmlns = require('./lib/xmlns');\n\nvar aria = require('./lib/aria');\n\nvar html = require('./lib/html');\n\nmodule.exports = merge([xml, xlink, xmlns, aria, html]);","'use strict';\n\nvar xtend = require('xtend');\n\nvar Schema = require('./schema');\n\nmodule.exports = merge;\n\nfunction merge(definitions) {\n  var length = definitions.length;\n  var property = [];\n  var normal = [];\n  var index = -1;\n  var info;\n  var space;\n\n  while (++index < length) {\n    info = definitions[index];\n    property.push(info.property);\n    normal.push(info.normal);\n    space = info.space;\n  }\n\n  return new Schema(xtend.apply(null, property), xtend.apply(null, normal), space);\n}","module.exports = extend;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n  var target = {};\n\n  for (var i = 0; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n}","'use strict';\n\nvar create = require('./util/create');\n\nmodule.exports = create({\n  space: 'xlink',\n  transform: xlinkTransform,\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n});\n\nfunction xlinkTransform(_, prop) {\n  return 'xlink:' + prop.slice(5).toLowerCase();\n}","'use strict';\n\nvar create = require('./util/create');\n\nmodule.exports = create({\n  space: 'xml',\n  transform: xmlTransform,\n  properties: {\n    xmlLang: null,\n    xmlBase: null,\n    xmlSpace: null\n  }\n});\n\nfunction xmlTransform(_, prop) {\n  return 'xml:' + prop.slice(3).toLowerCase();\n}","'use strict';\n\nvar create = require('./util/create');\n\nvar caseInsensitiveTransform = require('./util/case-insensitive-transform');\n\nmodule.exports = create({\n  space: 'xmlns',\n  attributes: {\n    xmlnsxlink: 'xmlns:xlink'\n  },\n  transform: caseInsensitiveTransform,\n  properties: {\n    xmlns: null,\n    xmlnsXLink: null\n  }\n});","'use strict';\n\nmodule.exports = caseSensitiveTransform;\n\nfunction caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute;\n}","'use strict';\n\nvar types = require('./util/types');\n\nvar create = require('./util/create');\n\nvar booleanish = types.booleanish;\nvar number = types.number;\nvar spaceSeparated = types.spaceSeparated;\nmodule.exports = create({\n  transform: ariaTransform,\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n});\n\nfunction ariaTransform(_, prop) {\n  return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase();\n}","'use strict';\n\nvar types = require('./util/types');\n\nvar create = require('./util/create');\n\nvar caseInsensitiveTransform = require('./util/case-insensitive-transform');\n\nvar boolean = types.boolean;\nvar overloadedBoolean = types.overloadedBoolean;\nvar booleanish = types.booleanish;\nvar number = types.number;\nvar spaceSeparated = types.spaceSeparated;\nvar commaSeparated = types.commaSeparated;\nmodule.exports = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    capture: boolean,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: commaSeparated,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null,\n    // Several. Use CSS `text-align` instead,\n    aLink: null,\n    // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated,\n    // `<object>`. List of URIs to archives\n    axis: null,\n    // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null,\n    // `<body>`. Use CSS `background-image` instead\n    bgColor: null,\n    // `<body>` and table elements. Use CSS `background-color` instead\n    border: number,\n    // `<table>`. Use CSS `border-width` instead,\n    borderColor: null,\n    // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number,\n    // `<body>`\n    cellPadding: null,\n    // `<table>`\n    cellSpacing: null,\n    // `<table>`\n    char: null,\n    // Several table elements. When `align=char`, sets the character to align on\n    charOff: null,\n    // Several table elements. When `char`, offsets the alignment\n    classId: null,\n    // `<object>`\n    clear: null,\n    // `<br>`. Use CSS `clear` instead\n    code: null,\n    // `<object>`\n    codeBase: null,\n    // `<object>`\n    codeType: null,\n    // `<object>`\n    color: null,\n    // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean,\n    // Lists. Use CSS to reduce space between items instead\n    declare: boolean,\n    // `<object>`\n    event: null,\n    // `<script>`\n    face: null,\n    // `<font>`. Use CSS instead\n    frame: null,\n    // `<table>`\n    frameBorder: null,\n    // `<iframe>`. Use CSS `border` instead\n    hSpace: number,\n    // `<img>` and `<object>`\n    leftMargin: number,\n    // `<body>`\n    link: null,\n    // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null,\n    // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null,\n    // `<img>`. Use a `<picture>`\n    marginHeight: number,\n    // `<body>`\n    marginWidth: number,\n    // `<body>`\n    noResize: boolean,\n    // `<frame>`\n    noHref: boolean,\n    // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean,\n    // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean,\n    // `<td>` and `<th>`\n    object: null,\n    // `<applet>`\n    profile: null,\n    // `<head>`\n    prompt: null,\n    // `<isindex>`\n    rev: null,\n    // `<link>`\n    rightMargin: number,\n    // `<body>`\n    rules: null,\n    // `<table>`\n    scheme: null,\n    // `<meta>`\n    scrolling: booleanish,\n    // `<frame>`. Use overflow in the child context\n    standby: null,\n    // `<object>`\n    summary: null,\n    // `<table>`\n    text: null,\n    // `<body>`. Use CSS `color` instead\n    topMargin: number,\n    // `<body>`\n    valueType: null,\n    // `<param>`\n    version: null,\n    // `<html>`. Use a doctype.\n    vAlign: null,\n    // Several. Use CSS `vertical-align` instead\n    vLink: null,\n    // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number,\n    // `<img>` and `<object>`\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n});","'use strict';\n\nvar find = require('property-information/find');\n\nvar normalize = require('property-information/normalize');\n\nvar parseSelector = require('hast-util-parse-selector');\n\nvar spaces = require('space-separated-tokens').parse;\n\nvar commas = require('comma-separated-tokens').parse;\n\nmodule.exports = factory;\n\nfunction factory(schema, defaultTagName) {\n  return h;\n  /* Hyperscript compatible DSL for creating virtual HAST trees. */\n\n  function h(selector, properties) {\n    var node = parseSelector(selector, defaultTagName);\n    var children = Array.prototype.slice.call(arguments, 2);\n    var property;\n\n    if (properties && isChildren(properties, node)) {\n      children.unshift(properties);\n      properties = null;\n    }\n\n    if (properties) {\n      for (property in properties) {\n        addProperty(node.properties, property, properties[property]);\n      }\n    }\n\n    addChild(node.children, children);\n\n    if (node.tagName === 'template') {\n      node.content = {\n        type: 'root',\n        children: node.children\n      };\n      node.children = [];\n    }\n\n    return node;\n  }\n\n  function addProperty(properties, key, value) {\n    var info;\n    var property;\n    var result;\n    /* Ignore nully and NaN values. */\n\n    if (value === null || value === undefined || value !== value) {\n      return;\n    }\n\n    info = find(schema, key);\n    property = info.property;\n    result = value;\n    /* Handle list values. */\n\n    if (typeof result === 'string') {\n      if (info.spaceSeparated) {\n        result = spaces(result);\n      } else if (info.commaSeparated) {\n        result = commas(result);\n      } else if (info.commaOrSpaceSeparated) {\n        result = spaces(commas(result).join(' '));\n      }\n    }\n    /* Accept `object` on style. */\n\n\n    if (property === 'style' && typeof value !== 'string') {\n      result = style(result);\n    }\n    /* Class-names (which can be added both on the `selector` and here). */\n\n\n    if (property === 'className' && properties.className) {\n      result = properties.className.concat(result);\n    }\n\n    properties[property] = parsePrimitives(info, property, result);\n  }\n}\n\nfunction isChildren(value, node) {\n  return typeof value === 'string' || 'length' in value || isNode(node.tagName, value);\n}\n\nfunction isNode(tagName, value) {\n  var type = value.type;\n\n  if (tagName === 'input' || !type || typeof type !== 'string') {\n    return false;\n  }\n\n  if (typeof value.children === 'object' && 'length' in value.children) {\n    return true;\n  }\n\n  type = type.toLowerCase();\n\n  if (tagName === 'button') {\n    return type !== 'menu' && type !== 'submit' && type !== 'reset' && type !== 'button';\n  }\n\n  return 'value' in value;\n}\n\nfunction addChild(nodes, value) {\n  var index;\n  var length;\n\n  if (typeof value === 'string' || typeof value === 'number') {\n    nodes.push({\n      type: 'text',\n      value: String(value)\n    });\n    return;\n  }\n\n  if (typeof value === 'object' && 'length' in value) {\n    index = -1;\n    length = value.length;\n\n    while (++index < length) {\n      addChild(nodes, value[index]);\n    }\n\n    return;\n  }\n\n  if (typeof value !== 'object' || !('type' in value)) {\n    throw new Error('Expected node, nodes, or string, got `' + value + '`');\n  }\n\n  nodes.push(value);\n}\n/* Parse a (list of) primitives. */\n\n\nfunction parsePrimitives(info, name, value) {\n  var index;\n  var length;\n  var result;\n\n  if (typeof value !== 'object' || !('length' in value)) {\n    return parsePrimitive(info, name, value);\n  }\n\n  length = value.length;\n  index = -1;\n  result = [];\n\n  while (++index < length) {\n    result[index] = parsePrimitive(info, name, value[index]);\n  }\n\n  return result;\n}\n/* Parse a single primitives. */\n\n\nfunction parsePrimitive(info, name, value) {\n  var result = value;\n\n  if (info.number || info.positiveNumber) {\n    if (!isNaN(result) && result !== '') {\n      result = Number(result);\n    }\n  } else if (info.boolean || info.overloadedBoolean) {\n    /* Accept `boolean` and `string`. */\n    if (typeof result === 'string' && (result === '' || normalize(value) === normalize(name))) {\n      result = true;\n    }\n  }\n\n  return result;\n}\n\nfunction style(value) {\n  var result = [];\n  var key;\n\n  for (key in value) {\n    result.push([key, value[key]].join(': '));\n  }\n\n  return result.join('; ');\n}","'use strict';\n\nvar normalize = require('./normalize');\n\nvar DefinedInfo = require('./lib/util/defined-info');\n\nvar Info = require('./lib/util/info');\n\nvar data = 'data';\nmodule.exports = find;\nvar valid = /^data[-a-z0-9.:_]+$/i;\nvar dash = /-[a-z]/g;\nvar cap = /[A-Z]/g;\n\nfunction find(schema, value) {\n  var normal = normalize(value);\n  var prop = value;\n  var Type = Info;\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]];\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === data && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      prop = datasetToProperty(value);\n    } else {\n      value = datasetToAttribute(value);\n    }\n\n    Type = DefinedInfo;\n  }\n\n  return new Type(prop, value);\n}\n\nfunction datasetToProperty(attribute) {\n  var value = attribute.slice(5).replace(dash, camelcase);\n  return data + value.charAt(0).toUpperCase() + value.slice(1);\n}\n\nfunction datasetToAttribute(property) {\n  var value = property.slice(4);\n\n  if (dash.test(value)) {\n    return property;\n  }\n\n  value = value.replace(cap, kebab);\n\n  if (value.charAt(0) !== '-') {\n    value = '-' + value;\n  }\n\n  return data + value;\n}\n\nfunction kebab($0) {\n  return '-' + $0.toLowerCase();\n}\n\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase();\n}","'use strict';\n\nmodule.exports = parse;\nvar dot = '.'.charCodeAt(0);\nvar hash = '#'.charCodeAt(0);\n/* Parse a simple CSS selector into a HAST node. */\n\nfunction parse(selector, defaultTagName) {\n  var value = selector || '';\n  var name = defaultTagName || 'div';\n  var props = {};\n  var index = -1;\n  var length = value.length;\n  var className;\n  var type;\n  var code;\n  var subvalue;\n  var lastIndex;\n\n  while (++index <= length) {\n    code = value.charCodeAt(index);\n\n    if (!code || code === dot || code === hash) {\n      subvalue = value.slice(lastIndex, index);\n\n      if (subvalue) {\n        if (type === dot) {\n          if (className) {\n            className.push(subvalue);\n          } else {\n            className = [subvalue];\n            props.className = className;\n          }\n        } else if (type === hash) {\n          props.id = subvalue;\n        } else {\n          name = subvalue;\n        }\n      }\n\n      lastIndex = index + 1;\n      type = code;\n    }\n  }\n\n  return {\n    type: 'element',\n    tagName: name,\n    properties: props,\n    children: []\n  };\n}","'use strict';\n\nvar trim = require('trim');\n\nexports.parse = parse;\nexports.stringify = stringify;\nvar empty = '';\nvar space = ' ';\nvar whiteSpace = /[ \\t\\n\\r\\f]+/g;\n\nfunction parse(value) {\n  var input = trim(String(value || empty));\n  return input === empty ? [] : input.split(whiteSpace);\n}\n\nfunction stringify(values) {\n  return trim(values.join(space));\n}","'use strict';\n\nexports.parse = parse;\nexports.stringify = stringify;\n\nvar trim = require('trim');\n\nvar comma = ',';\nvar space = ' ';\nvar empty = '';\n/* Parse comma-separated tokens to an array. */\n\nfunction parse(value) {\n  var values = [];\n  var input = String(value || empty);\n  var index = input.indexOf(comma);\n  var lastIndex = 0;\n  var end = false;\n  var val;\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length;\n      end = true;\n    }\n\n    val = trim(input.slice(lastIndex, index));\n\n    if (val || !end) {\n      values.push(val);\n    }\n\n    lastIndex = index + 1;\n    index = input.indexOf(comma, lastIndex);\n  }\n\n  return values;\n}\n/* Compile an array to comma-separated tokens.\n * `options.padLeft` (default: `true`) pads a space left of each\n * token, and `options.padRight` (default: `false`) pads a space\n * to the right of each token. */\n\n\nfunction stringify(values, options) {\n  var settings = options || {};\n  var left = settings.padLeft === false ? empty : space;\n  var right = settings.padRight ? space : empty;\n  /* Ensure the last empty entry is seen. */\n\n  if (values[values.length - 1] === empty) {\n    values = values.concat(empty);\n  }\n\n  return trim(values.join(right + comma + left));\n}","'use strict';\n\nvar legacy = require('character-entities-legacy');\n\nvar invalid = require('character-reference-invalid');\n\nvar decimal = require('is-decimal');\n\nvar hexadecimal = require('is-hexadecimal');\n\nvar alphanumerical = require('is-alphanumerical');\n\nvar decodeEntity = require('./decode-entity');\n\nmodule.exports = parseEntities;\nvar own = {}.hasOwnProperty;\nvar fromCharCode = String.fromCharCode;\nvar noop = Function.prototype;\n/* Default settings. */\n\nvar defaults = {\n  warning: null,\n  reference: null,\n  text: null,\n  warningContext: null,\n  referenceContext: null,\n  textContext: null,\n  position: {},\n  additional: null,\n  attribute: false,\n  nonTerminated: true\n  /* Reference types. */\n\n};\nvar NAMED = 'named';\nvar HEXADECIMAL = 'hexadecimal';\nvar DECIMAL = 'decimal';\n/* Map of bases. */\n\nvar BASE = {};\nBASE[HEXADECIMAL] = 16;\nBASE[DECIMAL] = 10;\n/* Map of types to tests. Each type of character reference\n * accepts different characters. This test is used to\n * detect whether a reference has ended (as the semicolon\n * is not strictly needed). */\n\nvar TESTS = {};\nTESTS[NAMED] = alphanumerical;\nTESTS[DECIMAL] = decimal;\nTESTS[HEXADECIMAL] = hexadecimal;\n/* Warning messages. */\n\nvar NAMED_NOT_TERMINATED = 1;\nvar NUMERIC_NOT_TERMINATED = 2;\nvar NAMED_EMPTY = 3;\nvar NUMERIC_EMPTY = 4;\nvar NAMED_UNKNOWN = 5;\nvar NUMERIC_DISALLOWED = 6;\nvar NUMERIC_PROHIBITED = 7;\nvar MESSAGES = {};\nMESSAGES[NAMED_NOT_TERMINATED] = 'Named character references must be terminated by a semicolon';\nMESSAGES[NUMERIC_NOT_TERMINATED] = 'Numeric character references must be terminated by a semicolon';\nMESSAGES[NAMED_EMPTY] = 'Named character references cannot be empty';\nMESSAGES[NUMERIC_EMPTY] = 'Numeric character references cannot be empty';\nMESSAGES[NAMED_UNKNOWN] = 'Named character references must be known';\nMESSAGES[NUMERIC_DISALLOWED] = 'Numeric character references cannot be disallowed';\nMESSAGES[NUMERIC_PROHIBITED] = 'Numeric character references cannot be outside the permissible Unicode range';\n/* Wrap to ensure clean parameters are given to `parse`. */\n\nfunction parseEntities(value, options) {\n  var settings = {};\n  var option;\n  var key;\n\n  if (!options) {\n    options = {};\n  }\n\n  for (key in defaults) {\n    option = options[key];\n    settings[key] = option === null || option === undefined ? defaults[key] : option;\n  }\n\n  if (settings.position.indent || settings.position.start) {\n    settings.indent = settings.position.indent || [];\n    settings.position = settings.position.start;\n  }\n\n  return parse(value, settings);\n}\n/* Parse entities. */\n\n\nfunction parse(value, settings) {\n  var additional = settings.additional;\n  var nonTerminated = settings.nonTerminated;\n  var handleText = settings.text;\n  var handleReference = settings.reference;\n  var handleWarning = settings.warning;\n  var textContext = settings.textContext;\n  var referenceContext = settings.referenceContext;\n  var warningContext = settings.warningContext;\n  var pos = settings.position;\n  var indent = settings.indent || [];\n  var length = value.length;\n  var index = 0;\n  var lines = -1;\n  var column = pos.column || 1;\n  var line = pos.line || 1;\n  var queue = '';\n  var result = [];\n  var entityCharacters;\n  var namedEntity;\n  var terminated;\n  var characters;\n  var character;\n  var reference;\n  var following;\n  var warning;\n  var reason;\n  var output;\n  var entity;\n  var begin;\n  var start;\n  var type;\n  var test;\n  var prev;\n  var next;\n  var diff;\n  var end;\n  /* Cache the current point. */\n\n  prev = now();\n  /* Wrap `handleWarning`. */\n\n  warning = handleWarning ? parseError : noop;\n  /* Ensure the algorithm walks over the first character\n   * and the end (inclusive). */\n\n  index--;\n  length++;\n\n  while (++index < length) {\n    /* If the previous character was a newline. */\n    if (character === '\\n') {\n      column = indent[lines] || 1;\n    }\n\n    character = at(index);\n    /* Handle anything other than an ampersand,\n     * including newlines and EOF. */\n\n    if (character !== '&') {\n      if (character === '\\n') {\n        line++;\n        lines++;\n        column = 0;\n      }\n\n      if (character) {\n        queue += character;\n        column++;\n      } else {\n        flush();\n      }\n    } else {\n      following = at(index + 1);\n      /* The behaviour depends on the identity of the next\n       * character. */\n\n      if (following === '\\t'\n      /* Tab */\n      || following === '\\n'\n      /* Newline */\n      || following === '\\f'\n      /* Form feed */\n      || following === ' '\n      /* Space */\n      || following === '<'\n      /* Less-than */\n      || following === '&'\n      /* Ampersand */\n      || following === '' || additional && following === additional) {\n        /* Not a character reference. No characters\n         * are consumed, and nothing is returned.\n         * This is not an error, either. */\n        queue += character;\n        column++;\n        continue;\n      }\n\n      start = index + 1;\n      begin = start;\n      end = start;\n      /* Numerical entity. */\n\n      if (following !== '#') {\n        type = NAMED;\n      } else {\n        end = ++begin;\n        /* The behaviour further depends on the\n         * character after the U+0023 NUMBER SIGN. */\n\n        following = at(end);\n\n        if (following === 'x' || following === 'X') {\n          /* ASCII hex digits. */\n          type = HEXADECIMAL;\n          end = ++begin;\n        } else {\n          /* ASCII digits. */\n          type = DECIMAL;\n        }\n      }\n\n      entityCharacters = '';\n      entity = '';\n      characters = '';\n      test = TESTS[type];\n      end--;\n\n      while (++end < length) {\n        following = at(end);\n\n        if (!test(following)) {\n          break;\n        }\n\n        characters += following;\n        /* Check if we can match a legacy named\n         * reference.  If so, we cache that as the\n         * last viable named reference.  This\n         * ensures we do not need to walk backwards\n         * later. */\n\n        if (type === NAMED && own.call(legacy, characters)) {\n          entityCharacters = characters;\n          entity = legacy[characters];\n        }\n      }\n\n      terminated = at(end) === ';';\n\n      if (terminated) {\n        end++;\n        namedEntity = type === NAMED ? decodeEntity(characters) : false;\n\n        if (namedEntity) {\n          entityCharacters = characters;\n          entity = namedEntity;\n        }\n      }\n\n      diff = 1 + end - start;\n\n      if (!terminated && !nonTerminated) {\n        /* Empty. */\n      } else if (!characters) {\n        /* An empty (possible) entity is valid, unless\n         * its numeric (thus an ampersand followed by\n         * an octothorp). */\n        if (type !== NAMED) {\n          warning(NUMERIC_EMPTY, diff);\n        }\n      } else if (type === NAMED) {\n        /* An ampersand followed by anything\n         * unknown, and not terminated, is invalid. */\n        if (terminated && !entity) {\n          warning(NAMED_UNKNOWN, 1);\n        } else {\n          /* If theres something after an entity\n           * name which is not known, cap the\n           * reference. */\n          if (entityCharacters !== characters) {\n            end = begin + entityCharacters.length;\n            diff = 1 + end - begin;\n            terminated = false;\n          }\n          /* If the reference is not terminated,\n           * warn. */\n\n\n          if (!terminated) {\n            reason = entityCharacters ? NAMED_NOT_TERMINATED : NAMED_EMPTY;\n\n            if (!settings.attribute) {\n              warning(reason, diff);\n            } else {\n              following = at(end);\n\n              if (following === '=') {\n                warning(reason, diff);\n                entity = null;\n              } else if (alphanumerical(following)) {\n                entity = null;\n              } else {\n                warning(reason, diff);\n              }\n            }\n          }\n        }\n\n        reference = entity;\n      } else {\n        if (!terminated) {\n          /* All non-terminated numeric entities are\n           * not rendered, and trigger a warning. */\n          warning(NUMERIC_NOT_TERMINATED, diff);\n        }\n        /* When terminated and number, parse as\n         * either hexadecimal or decimal. */\n\n\n        reference = parseInt(characters, BASE[type]);\n        /* Trigger a warning when the parsed number\n         * is prohibited, and replace with\n         * replacement character. */\n\n        if (prohibited(reference)) {\n          warning(NUMERIC_PROHIBITED, diff);\n          reference = \"\\uFFFD\";\n        } else if (reference in invalid) {\n          /* Trigger a warning when the parsed number\n           * is disallowed, and replace by an\n           * alternative. */\n          warning(NUMERIC_DISALLOWED, diff);\n          reference = invalid[reference];\n        } else {\n          /* Parse the number. */\n          output = '';\n          /* Trigger a warning when the parsed\n           * number should not be used. */\n\n          if (disallowed(reference)) {\n            warning(NUMERIC_DISALLOWED, diff);\n          }\n          /* Stringify the number. */\n\n\n          if (reference > 0xffff) {\n            reference -= 0x10000;\n            output += fromCharCode(reference >>> (10 & 0x3ff) | 0xd800);\n            reference = 0xdc00 | reference & 0x3ff;\n          }\n\n          reference = output + fromCharCode(reference);\n        }\n      }\n      /* If we could not find a reference, queue the\n       * checked characters (as normal characters),\n       * and move the pointer to their end. This is\n       * possible because we can be certain neither\n       * newlines nor ampersands are included. */\n\n\n      if (!reference) {\n        characters = value.slice(start - 1, end);\n        queue += characters;\n        column += characters.length;\n        index = end - 1;\n      } else {\n        /* Found it! First eat the queued\n         * characters as normal text, then eat\n         * an entity. */\n        flush();\n        prev = now();\n        index = end - 1;\n        column += end - start + 1;\n        result.push(reference);\n        next = now();\n        next.offset++;\n\n        if (handleReference) {\n          handleReference.call(referenceContext, reference, {\n            start: prev,\n            end: next\n          }, value.slice(start - 1, end));\n        }\n\n        prev = next;\n      }\n    }\n  }\n  /* Return the reduced nodes, and any possible warnings. */\n\n\n  return result.join('');\n  /* Get current position. */\n\n  function now() {\n    return {\n      line: line,\n      column: column,\n      offset: index + (pos.offset || 0)\n    };\n  }\n  /* “Throw” a parse-error: a warning. */\n\n\n  function parseError(code, offset) {\n    var position = now();\n    position.column += offset;\n    position.offset += offset;\n    handleWarning.call(warningContext, MESSAGES[code], position, code);\n  }\n  /* Get character at position. */\n\n\n  function at(position) {\n    return value.charAt(position);\n  }\n  /* Flush `queue` (normal text). Macro invoked before\n   * each entity and at the end of `value`.\n   * Does nothing when `queue` is empty. */\n\n\n  function flush() {\n    if (queue) {\n      result.push(queue);\n\n      if (handleText) {\n        handleText.call(textContext, queue, {\n          start: prev,\n          end: now()\n        });\n      }\n\n      queue = '';\n    }\n  }\n}\n/* Check if `character` is outside the permissible unicode range. */\n\n\nfunction prohibited(code) {\n  return code >= 0xd800 && code <= 0xdfff || code > 0x10ffff;\n}\n/* Check if `character` is disallowed. */\n\n\nfunction disallowed(code) {\n  return code >= 0x0001 && code <= 0x0008 || code === 0x000b || code >= 0x000d && code <= 0x001f || code >= 0x007f && code <= 0x009f || code >= 0xfdd0 && code <= 0xfdef || (code & 0xffff) === 0xffff || (code & 0xffff) === 0xfffe;\n}","'use strict';\n\nmodule.exports = hexadecimal;\n/* Check if the given character code, or the character\n * code at the first character, is hexadecimal. */\n\nfunction hexadecimal(character) {\n  var code = typeof character === 'string' ? character.charCodeAt(0) : character;\n  return code >= 97\n  /* a */\n  && code <= 102 ||\n  /* z */\n  code >= 65\n  /* A */\n  && code <= 70\n  /* Z */\n  || code >= 48\n  /* A */\n  && code <= 57\n  /* Z */\n  ;\n}","'use strict';\n\nvar alphabetical = require('is-alphabetical');\n\nvar decimal = require('is-decimal');\n\nmodule.exports = alphanumerical;\n/* Check if the given character code, or the character\n * code at the first character, is alphanumerical. */\n\nfunction alphanumerical(character) {\n  return alphabetical(character) || decimal(character);\n}","'use strict';\n\nmodule.exports = alphabetical;\n/* Check if the given character code, or the character\n * code at the first character, is alphabetical. */\n\nfunction alphabetical(character) {\n  var code = typeof character === 'string' ? character.charCodeAt(0) : character;\n  return code >= 97 && code <= 122 ||\n  /* a-z */\n  code >= 65 && code <= 90\n  /* A-Z */\n  ;\n}","'use strict';\n/* eslint-env browser */\n\nvar el;\nmodule.exports = decodeEntity;\n\nfunction decodeEntity(characters) {\n  var entity = '&' + characters + ';';\n  var char;\n  el = el || document.createElement('i');\n  el.innerHTML = entity;\n  char = el.textContent; // Some entities do not require the closing semicolon (&not - for instance),\n  // which leads to situations where parsing the assumed entity of &notit; will\n  // result in the string `¬it;`.  When we encounter a trailing semicolon after\n  // parsing and the entity to decode was not a semicolon (&semi;), we can\n  // assume that the matching was incomplete\n\n  if (char.slice(-1) === ';' && characters !== 'semi') {\n    return false;\n  } // If the decoded string is equal to the input, the entity was not valid\n\n\n  return char === entity ? false : char;\n}","var _self = typeof window !== 'undefined' ? window // if in browser\n: typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope ? self // if in worker\n: {} // if in node js\n;\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n * MIT license http://www.opensource.org/licenses/mit-license.php/\n * @author Lea Verou http://lea.verou.me\n */\n\n\nvar Prism = function () {\n  // Private helper vars\n  var lang = /\\blang(?:uage)?-([\\w-]+)\\b/i;\n  var uniqueId = 0;\n\n  var _ = _self.Prism = {\n    manual: _self.Prism && _self.Prism.manual,\n    disableWorkerMessageHandler: _self.Prism && _self.Prism.disableWorkerMessageHandler,\n    util: {\n      encode: function encode(tokens) {\n        if (tokens instanceof Token) {\n          return new Token(tokens.type, _.util.encode(tokens.content), tokens.alias);\n        } else if (_.util.type(tokens) === 'Array') {\n          return tokens.map(_.util.encode);\n        } else {\n          return tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n        }\n      },\n      type: function type(o) {\n        return Object.prototype.toString.call(o).match(/\\[object (\\w+)\\]/)[1];\n      },\n      objId: function objId(obj) {\n        if (!obj['__id']) {\n          Object.defineProperty(obj, '__id', {\n            value: ++uniqueId\n          });\n        }\n\n        return obj['__id'];\n      },\n      // Deep clone a language definition (e.g. to extend it)\n      clone: function clone(o, visited) {\n        var type = _.util.type(o);\n\n        visited = visited || {};\n\n        switch (type) {\n          case 'Object':\n            if (visited[_.util.objId(o)]) {\n              return visited[_.util.objId(o)];\n            }\n\n            var clone = {};\n            visited[_.util.objId(o)] = clone;\n\n            for (var key in o) {\n              if (o.hasOwnProperty(key)) {\n                clone[key] = _.util.clone(o[key], visited);\n              }\n            }\n\n            return clone;\n\n          case 'Array':\n            if (visited[_.util.objId(o)]) {\n              return visited[_.util.objId(o)];\n            }\n\n            var clone = [];\n            visited[_.util.objId(o)] = clone;\n            o.forEach(function (v, i) {\n              clone[i] = _.util.clone(v, visited);\n            });\n            return clone;\n        }\n\n        return o;\n      }\n    },\n    languages: {\n      extend: function extend(id, redef) {\n        var lang = _.util.clone(_.languages[id]);\n\n        for (var key in redef) {\n          lang[key] = redef[key];\n        }\n\n        return lang;\n      },\n\n      /**\n       * Insert a token before another token in a language literal\n       * As this needs to recreate the object (we cannot actually insert before keys in object literals),\n       * we cannot just provide an object, we need anobject and a key.\n       * @param inside The key (or language id) of the parent\n       * @param before The key to insert before. If not provided, the function appends instead.\n       * @param insert Object with the key/value pairs to insert\n       * @param root The object that contains `inside`. If equal to Prism.languages, it can be omitted.\n       */\n      insertBefore: function insertBefore(inside, before, insert, root) {\n        root = root || _.languages;\n        var grammar = root[inside];\n\n        if (arguments.length == 2) {\n          insert = arguments[1];\n\n          for (var newToken in insert) {\n            if (insert.hasOwnProperty(newToken)) {\n              grammar[newToken] = insert[newToken];\n            }\n          }\n\n          return grammar;\n        }\n\n        var ret = {};\n\n        for (var token in grammar) {\n          if (grammar.hasOwnProperty(token)) {\n            if (token == before) {\n              for (var newToken in insert) {\n                if (insert.hasOwnProperty(newToken)) {\n                  ret[newToken] = insert[newToken];\n                }\n              }\n            }\n\n            ret[token] = grammar[token];\n          }\n        } // Update references in other language definitions\n\n\n        _.languages.DFS(_.languages, function (key, value) {\n          if (value === root[inside] && key != inside) {\n            this[key] = ret;\n          }\n        });\n\n        return root[inside] = ret;\n      },\n      // Traverse a language definition with Depth First Search\n      DFS: function DFS(o, callback, type, visited) {\n        visited = visited || {};\n\n        for (var i in o) {\n          if (o.hasOwnProperty(i)) {\n            callback.call(o, i, o[i], type || i);\n\n            if (_.util.type(o[i]) === 'Object' && !visited[_.util.objId(o[i])]) {\n              visited[_.util.objId(o[i])] = true;\n\n              _.languages.DFS(o[i], callback, null, visited);\n            } else if (_.util.type(o[i]) === 'Array' && !visited[_.util.objId(o[i])]) {\n              visited[_.util.objId(o[i])] = true;\n\n              _.languages.DFS(o[i], callback, i, visited);\n            }\n          }\n        }\n      }\n    },\n    plugins: {},\n    highlightAll: function highlightAll(async, callback) {\n      _.highlightAllUnder(document, async, callback);\n    },\n    highlightAllUnder: function highlightAllUnder(container, async, callback) {\n      var env = {\n        callback: callback,\n        selector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\n      };\n\n      _.hooks.run(\"before-highlightall\", env);\n\n      var elements = env.elements || container.querySelectorAll(env.selector);\n\n      for (var i = 0, element; element = elements[i++];) {\n        _.highlightElement(element, async === true, env.callback);\n      }\n    },\n    highlightElement: function highlightElement(element, async, callback) {\n      // Find language\n      var language,\n          grammar,\n          parent = element;\n\n      while (parent && !lang.test(parent.className)) {\n        parent = parent.parentNode;\n      }\n\n      if (parent) {\n        language = (parent.className.match(lang) || [, ''])[1].toLowerCase();\n        grammar = _.languages[language];\n      } // Set language on the element, if not present\n\n\n      element.className = element.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n\n      if (element.parentNode) {\n        // Set language on the parent, for styling\n        parent = element.parentNode;\n\n        if (/pre/i.test(parent.nodeName)) {\n          parent.className = parent.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n        }\n      }\n\n      var code = element.textContent;\n      var env = {\n        element: element,\n        language: language,\n        grammar: grammar,\n        code: code\n      };\n\n      _.hooks.run('before-sanity-check', env);\n\n      if (!env.code || !env.grammar) {\n        if (env.code) {\n          _.hooks.run('before-highlight', env);\n\n          env.element.textContent = env.code;\n\n          _.hooks.run('after-highlight', env);\n        }\n\n        _.hooks.run('complete', env);\n\n        return;\n      }\n\n      _.hooks.run('before-highlight', env);\n\n      if (async && _self.Worker) {\n        var worker = new Worker(_.filename);\n\n        worker.onmessage = function (evt) {\n          env.highlightedCode = evt.data;\n\n          _.hooks.run('before-insert', env);\n\n          env.element.innerHTML = env.highlightedCode;\n          callback && callback.call(env.element);\n\n          _.hooks.run('after-highlight', env);\n\n          _.hooks.run('complete', env);\n        };\n\n        worker.postMessage(JSON.stringify({\n          language: env.language,\n          code: env.code,\n          immediateClose: true\n        }));\n      } else {\n        env.highlightedCode = _.highlight(env.code, env.grammar, env.language);\n\n        _.hooks.run('before-insert', env);\n\n        env.element.innerHTML = env.highlightedCode;\n        callback && callback.call(element);\n\n        _.hooks.run('after-highlight', env);\n\n        _.hooks.run('complete', env);\n      }\n    },\n    highlight: function highlight(text, grammar, language) {\n      var env = {\n        code: text,\n        grammar: grammar,\n        language: language\n      };\n\n      _.hooks.run('before-tokenize', env);\n\n      env.tokens = _.tokenize(env.code, env.grammar);\n\n      _.hooks.run('after-tokenize', env);\n\n      return Token.stringify(_.util.encode(env.tokens), env.language);\n    },\n    matchGrammar: function matchGrammar(text, strarr, grammar, index, startPos, oneshot, target) {\n      var Token = _.Token;\n\n      for (var token in grammar) {\n        if (!grammar.hasOwnProperty(token) || !grammar[token]) {\n          continue;\n        }\n\n        if (token == target) {\n          return;\n        }\n\n        var patterns = grammar[token];\n        patterns = _.util.type(patterns) === \"Array\" ? patterns : [patterns];\n\n        for (var j = 0; j < patterns.length; ++j) {\n          var pattern = patterns[j],\n              inside = pattern.inside,\n              lookbehind = !!pattern.lookbehind,\n              greedy = !!pattern.greedy,\n              lookbehindLength = 0,\n              alias = pattern.alias;\n\n          if (greedy && !pattern.pattern.global) {\n            // Without the global flag, lastIndex won't work\n            var flags = pattern.pattern.toString().match(/[imuy]*$/)[0];\n            pattern.pattern = RegExp(pattern.pattern.source, flags + \"g\");\n          }\n\n          pattern = pattern.pattern || pattern; // Don’t cache length as it changes during the loop\n\n          for (var i = index, pos = startPos; i < strarr.length; pos += strarr[i].length, ++i) {\n            var str = strarr[i];\n\n            if (strarr.length > text.length) {\n              // Something went terribly wrong, ABORT, ABORT!\n              return;\n            }\n\n            if (str instanceof Token) {\n              continue;\n            }\n\n            if (greedy && i != strarr.length - 1) {\n              pattern.lastIndex = pos;\n              var match = pattern.exec(text);\n\n              if (!match) {\n                break;\n              }\n\n              var from = match.index + (lookbehind ? match[1].length : 0),\n                  to = match.index + match[0].length,\n                  k = i,\n                  p = pos;\n\n              for (var len = strarr.length; k < len && (p < to || !strarr[k].type && !strarr[k - 1].greedy); ++k) {\n                p += strarr[k].length; // Move the index i to the element in strarr that is closest to from\n\n                if (from >= p) {\n                  ++i;\n                  pos = p;\n                }\n              } // If strarr[i] is a Token, then the match starts inside another Token, which is invalid\n\n\n              if (strarr[i] instanceof Token) {\n                continue;\n              } // Number of tokens to delete and replace with the new match\n\n\n              delNum = k - i;\n              str = text.slice(pos, p);\n              match.index -= pos;\n            } else {\n              pattern.lastIndex = 0;\n              var match = pattern.exec(str),\n                  delNum = 1;\n            }\n\n            if (!match) {\n              if (oneshot) {\n                break;\n              }\n\n              continue;\n            }\n\n            if (lookbehind) {\n              lookbehindLength = match[1] ? match[1].length : 0;\n            }\n\n            var from = match.index + lookbehindLength,\n                match = match[0].slice(lookbehindLength),\n                to = from + match.length,\n                before = str.slice(0, from),\n                after = str.slice(to);\n            var args = [i, delNum];\n\n            if (before) {\n              ++i;\n              pos += before.length;\n              args.push(before);\n            }\n\n            var wrapped = new Token(token, inside ? _.tokenize(match, inside) : match, alias, match, greedy);\n            args.push(wrapped);\n\n            if (after) {\n              args.push(after);\n            }\n\n            Array.prototype.splice.apply(strarr, args);\n            if (delNum != 1) _.matchGrammar(text, strarr, grammar, i, pos, true, token);\n            if (oneshot) break;\n          }\n        }\n      }\n    },\n    tokenize: function tokenize(text, grammar, language) {\n      var strarr = [text];\n      var rest = grammar.rest;\n\n      if (rest) {\n        for (var token in rest) {\n          grammar[token] = rest[token];\n        }\n\n        delete grammar.rest;\n      }\n\n      _.matchGrammar(text, strarr, grammar, 0, 0, false);\n\n      return strarr;\n    },\n    hooks: {\n      all: {},\n      add: function add(name, callback) {\n        var hooks = _.hooks.all;\n        hooks[name] = hooks[name] || [];\n        hooks[name].push(callback);\n      },\n      run: function run(name, env) {\n        var callbacks = _.hooks.all[name];\n\n        if (!callbacks || !callbacks.length) {\n          return;\n        }\n\n        for (var i = 0, callback; callback = callbacks[i++];) {\n          callback(env);\n        }\n      }\n    }\n  };\n\n  var Token = _.Token = function (type, content, alias, matchedStr, greedy) {\n    this.type = type;\n    this.content = content;\n    this.alias = alias; // Copy of the full string this token was created from\n\n    this.length = (matchedStr || \"\").length | 0;\n    this.greedy = !!greedy;\n  };\n\n  Token.stringify = function (o, language, parent) {\n    if (typeof o == 'string') {\n      return o;\n    }\n\n    if (_.util.type(o) === 'Array') {\n      return o.map(function (element) {\n        return Token.stringify(element, language, o);\n      }).join('');\n    }\n\n    var env = {\n      type: o.type,\n      content: Token.stringify(o.content, language, parent),\n      tag: 'span',\n      classes: ['token', o.type],\n      attributes: {},\n      language: language,\n      parent: parent\n    };\n\n    if (o.alias) {\n      var aliases = _.util.type(o.alias) === 'Array' ? o.alias : [o.alias];\n      Array.prototype.push.apply(env.classes, aliases);\n    }\n\n    _.hooks.run('wrap', env);\n\n    var attributes = Object.keys(env.attributes).map(function (name) {\n      return name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n    }).join(' ');\n    return '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + (attributes ? ' ' + attributes : '') + '>' + env.content + '</' + env.tag + '>';\n  };\n\n  if (!_self.document) {\n    if (!_self.addEventListener) {\n      // in Node.js\n      return _self.Prism;\n    }\n\n    if (!_.disableWorkerMessageHandler) {\n      // In worker\n      _self.addEventListener('message', function (evt) {\n        var message = JSON.parse(evt.data),\n            lang = message.language,\n            code = message.code,\n            immediateClose = message.immediateClose;\n\n        _self.postMessage(_.highlight(code, _.languages[lang], lang));\n\n        if (immediateClose) {\n          _self.close();\n        }\n      }, false);\n    }\n\n    return _self.Prism;\n  } //Get current script and highlight\n\n\n  var script = document.currentScript || [].slice.call(document.getElementsByTagName(\"script\")).pop();\n\n  if (script) {\n    _.filename = script.src;\n\n    if (!_.manual && !script.hasAttribute('data-manual')) {\n      if (document.readyState !== \"loading\") {\n        if (window.requestAnimationFrame) {\n          window.requestAnimationFrame(_.highlightAll);\n        } else {\n          window.setTimeout(_.highlightAll, 16);\n        }\n      } else {\n        document.addEventListener('DOMContentLoaded', _.highlightAll);\n      }\n    }\n  }\n\n  return _self.Prism;\n}();\n\nif (typeof module !== 'undefined' && module.exports) {\n  module.exports = Prism;\n} // hack for components to work correctly in node.js\n\n\nif (typeof global !== 'undefined') {\n  global.Prism = Prism;\n}","'use strict';\n\nmodule.exports = markup;\nmarkup.displayName = 'markup';\nmarkup.aliases = ['xml', 'html', 'mathml', 'svg'];\n\nfunction markup(Prism) {\n  Prism.languages.markup = {\n    comment: /<!--[\\s\\S]*?-->/,\n    prolog: /<\\?[\\s\\S]+?\\?>/,\n    doctype: /<!DOCTYPE[\\s\\S]+?>/i,\n    cdata: /<!\\[CDATA\\[[\\s\\S]*?]]>/i,\n    tag: {\n      pattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i,\n      greedy: true,\n      inside: {\n        tag: {\n          pattern: /^<\\/?[^\\s>\\/]+/i,\n          inside: {\n            punctuation: /^<\\/?/,\n            namespace: /^[^\\s>\\/:]+:/\n          }\n        },\n        'attr-value': {\n          pattern: /=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+)/i,\n          inside: {\n            punctuation: [/^=/, {\n              pattern: /(^|[^\\\\])[\"']/,\n              lookbehind: true\n            }]\n          }\n        },\n        punctuation: /\\/?>/,\n        'attr-name': {\n          pattern: /[^\\s>\\/]+/,\n          inside: {\n            namespace: /^[^\\s>\\/:]+:/\n          }\n        }\n      }\n    },\n    entity: /&#?[\\da-z]{1,8};/i\n  };\n  Prism.languages.markup['tag'].inside['attr-value'].inside['entity'] = Prism.languages.markup['entity']; // Plugin to make entity title show the real entity, idea by Roman Komarov\n\n  Prism.hooks.add('wrap', function (env) {\n    if (env.type === 'entity') {\n      env.attributes['title'] = env.content.value.replace(/&amp;/, '&');\n    }\n  });\n  Prism.languages.xml = Prism.languages.markup;\n  Prism.languages.html = Prism.languages.markup;\n  Prism.languages.mathml = Prism.languages.markup;\n  Prism.languages.svg = Prism.languages.markup;\n}","'use strict';\n\nmodule.exports = css;\ncss.displayName = 'css';\ncss.aliases = [];\n\nfunction css(Prism) {\n  Prism.languages.css = {\n    comment: /\\/\\*[\\s\\S]*?\\*\\//,\n    atrule: {\n      pattern: /@[\\w-]+?.*?(?:;|(?=\\s*\\{))/i,\n      inside: {\n        rule: /@[\\w-]+/ // See rest below\n\n      }\n    },\n    url: /url\\((?:([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1|.*?)\\)/i,\n    selector: /[^{}\\s][^{};]*?(?=\\s*\\{)/,\n    string: {\n      pattern: /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    property: /[-_a-z\\xA0-\\uFFFF][-\\w\\xA0-\\uFFFF]*(?=\\s*:)/i,\n    important: /\\B!important\\b/i,\n    function: /[-a-z0-9]+(?=\\()/i,\n    punctuation: /[(){};:]/\n  };\n  Prism.languages.css['atrule'].inside.rest = Prism.languages.css;\n\n  if (Prism.languages.markup) {\n    Prism.languages.insertBefore('markup', 'tag', {\n      style: {\n        pattern: /(<style[\\s\\S]*?>)[\\s\\S]*?(?=<\\/style>)/i,\n        lookbehind: true,\n        inside: Prism.languages.css,\n        alias: 'language-css',\n        greedy: true\n      }\n    });\n    Prism.languages.insertBefore('inside', 'attr-value', {\n      'style-attr': {\n        pattern: /\\s*style=(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/i,\n        inside: {\n          'attr-name': {\n            pattern: /^\\s*style/i,\n            inside: Prism.languages.markup.tag.inside\n          },\n          punctuation: /^\\s*=\\s*['\"]|['\"]\\s*$/,\n          'attr-value': {\n            pattern: /.+/i,\n            inside: Prism.languages.css\n          }\n        },\n        alias: 'language-css'\n      }\n    }, Prism.languages.markup.tag);\n  }\n}","'use strict';\n\nmodule.exports = clike;\nclike.displayName = 'clike';\nclike.aliases = [];\n\nfunction clike(Prism) {\n  Prism.languages.clike = {\n    comment: [{\n      pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n      lookbehind: true\n    }, {\n      pattern: /(^|[^\\\\:])\\/\\/.*/,\n      lookbehind: true,\n      greedy: true\n    }],\n    string: {\n      pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    'class-name': {\n      pattern: /((?:\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+)|(?:catch\\s+\\())[\\w.\\\\]+/i,\n      lookbehind: true,\n      inside: {\n        punctuation: /[.\\\\]/\n      }\n    },\n    keyword: /\\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,\n    boolean: /\\b(?:true|false)\\b/,\n    function: /[a-z0-9_]+(?=\\()/i,\n    number: /\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n    operator: /--?|\\+\\+?|!=?=?|<=?|>=?|==?=?|&&?|\\|\\|?|\\?|\\*|\\/|~|\\^|%/,\n    punctuation: /[{}[\\];(),.:]/\n  };\n}","'use strict';\n\nmodule.exports = javascript;\njavascript.displayName = 'javascript';\njavascript.aliases = ['js'];\n\nfunction javascript(Prism) {\n  Prism.languages.javascript = Prism.languages.extend('clike', {\n    keyword: /\\b(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|var|void|while|with|yield)\\b/,\n    number: /\\b(?:0[xX][\\dA-Fa-f]+|0[bB][01]+|0[oO][0-7]+|NaN|Infinity)\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee][+-]?\\d+)?/,\n    // Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n    function: /[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*\\()/i,\n    operator: /-[-=]?|\\+[+=]?|!=?=?|<<?=?|>>?>?=?|=(?:==?|>)?|&[&=]?|\\|[|=]?|\\*\\*?=?|\\/=?|~|\\^=?|%=?|\\?|\\.{3}/\n  });\n  Prism.languages.insertBefore('javascript', 'keyword', {\n    regex: {\n      pattern: /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s])\\s*)\\/(\\[[^\\]\\r\\n]+]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[gimyu]{0,5}(?=\\s*($|[\\r\\n,.;})\\]]))/,\n      lookbehind: true,\n      greedy: true\n    },\n    // This must be declared before keyword because we use \"function\" inside the look-forward\n    'function-variable': {\n      pattern: /[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*=\\s*(?:function\\b|(?:\\([^()]*\\)|[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)\\s*=>))/i,\n      alias: 'function'\n    },\n    constant: /\\b[A-Z][A-Z\\d_]*\\b/\n  });\n  Prism.languages.insertBefore('javascript', 'string', {\n    'template-string': {\n      pattern: /`(?:\\\\[\\s\\S]|\\${[^}]+}|[^\\\\`])*`/,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern: /\\${[^}]+}/,\n          inside: {\n            'interpolation-punctuation': {\n              pattern: /^\\${|}$/,\n              alias: 'punctuation'\n            },\n            rest: null // See below\n\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    }\n  });\n  Prism.languages.javascript['template-string'].inside['interpolation'].inside.rest = Prism.languages.javascript;\n\n  if (Prism.languages.markup) {\n    Prism.languages.insertBefore('markup', 'tag', {\n      script: {\n        pattern: /(<script[\\s\\S]*?>)[\\s\\S]*?(?=<\\/script>)/i,\n        lookbehind: true,\n        inside: Prism.languages.javascript,\n        alias: 'language-javascript',\n        greedy: true\n      }\n    });\n  }\n\n  Prism.languages.js = Prism.languages.javascript;\n}","'use strict';\n\nmodule.exports = abap;\nabap.displayName = 'abap';\nabap.aliases = [];\n\nfunction abap(Prism) {\n  Prism.languages.abap = {\n    comment: /^\\*.*/m,\n    string: /(`|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/m,\n    'string-template': {\n      pattern: /([|}])(?:\\\\.|[^\\\\|{\\r\\n])*(?=[|{])/,\n      lookbehind: true,\n      alias: 'string'\n    },\n\n    /* End Of Line comments should not interfere with strings when the\n    quote character occurs within them. We assume a string being highlighted\n    inside an EOL comment is more acceptable than the opposite.\n    */\n    'eol-comment': {\n      pattern: /(^|\\s)\".*/m,\n      lookbehind: true,\n      alias: 'comment'\n    },\n    keyword: {\n      pattern: /(\\s|\\.|^)(?:SCIENTIFIC_WITH_LEADING_ZERO|SCALE_PRESERVING_SCIENTIFIC|RMC_COMMUNICATION_FAILURE|END-ENHANCEMENT-SECTION|MULTIPLY-CORRESPONDING|SUBTRACT-CORRESPONDING|VERIFICATION-MESSAGE|DIVIDE-CORRESPONDING|ENHANCEMENT-SECTION|CURRENCY_CONVERSION|RMC_SYSTEM_FAILURE|START-OF-SELECTION|MOVE-CORRESPONDING|RMC_INVALID_STATUS|CUSTOMER-FUNCTION|END-OF-DEFINITION|ENHANCEMENT-POINT|SYSTEM-EXCEPTIONS|ADD-CORRESPONDING|SCALE_PRESERVING|SELECTION-SCREEN|CURSOR-SELECTION|END-OF-SELECTION|LOAD-OF-PROGRAM|SCROLL-BOUNDARY|SELECTION-TABLE|EXCEPTION-TABLE|IMPLEMENTATIONS|PARAMETER-TABLE|RIGHT-JUSTIFIED|UNIT_CONVERSION|AUTHORITY-CHECK|LIST-PROCESSING|SIGN_AS_POSTFIX|COL_BACKGROUND|IMPLEMENTATION|INTERFACE-POOL|TRANSFORMATION|IDENTIFICATION|ENDENHANCEMENT|LINE-SELECTION|INITIALIZATION|LEFT-JUSTIFIED|SELECT-OPTIONS|SELECTION-SETS|COMMUNICATION|CORRESPONDING|DECIMAL_SHIFT|PRINT-CONTROL|VALUE-REQUEST|CHAIN-REQUEST|FUNCTION-POOL|FIELD-SYMBOLS|FUNCTIONALITY|INVERTED-DATE|SELECTION-SET|CLASS-METHODS|OUTPUT-LENGTH|CLASS-CODING|COL_NEGATIVE|ERRORMESSAGE|FIELD-GROUPS|HELP-REQUEST|NO-EXTENSION|NO-TOPOFPAGE|REDEFINITION|DISPLAY-MODE|ENDINTERFACE|EXIT-COMMAND|FIELD-SYMBOL|NO-SCROLLING|SHORTDUMP-ID|ACCESSPOLICY|CLASS-EVENTS|COL_POSITIVE|DECLARATIONS|ENHANCEMENTS|FILTER-TABLE|SWITCHSTATES|SYNTAX-CHECK|TRANSPORTING|ASYNCHRONOUS|SYNTAX-TRACE|TOKENIZATION|USER-COMMAND|WITH-HEADING|ABAP-SOURCE|BREAK-POINT|CHAIN-INPUT|COMPRESSION|FIXED-POINT|NEW-SECTION|NON-UNICODE|OCCURRENCES|RESPONSIBLE|SYSTEM-CALL|TRACE-TABLE|ABBREVIATED|CHAR-TO-HEX|END-OF-FILE|ENDFUNCTION|ENVIRONMENT|ASSOCIATION|COL_HEADING|EDITOR-CALL|END-OF-PAGE|ENGINEERING|IMPLEMENTED|INTENSIFIED|RADIOBUTTON|SYSTEM-EXIT|TOP-OF-PAGE|TRANSACTION|APPLICATION|CONCATENATE|DESTINATION|ENHANCEMENT|IMMEDIATELY|NO-GROUPING|PRECOMPILED|REPLACEMENT|TITLE-LINES|ACTIVATION|BYTE-ORDER|CLASS-POOL|CONNECTION|CONVERSION|DEFINITION|DEPARTMENT|EXPIRATION|INHERITING|MESSAGE-ID|NO-HEADING|PERFORMING|QUEUE-ONLY|RIGHTSPACE|SCIENTIFIC|STATUSINFO|STRUCTURES|SYNCPOINTS|WITH-TITLE|ATTRIBUTES|BOUNDARIES|CLASS-DATA|COL_NORMAL|DD\\/MM\\/YYYY|DESCENDING|INTERFACES|LINE-COUNT|MM\\/DD\\/YYYY|NON-UNIQUE|PRESERVING|SELECTIONS|STATEMENTS|SUBROUTINE|TRUNCATION|TYPE-POOLS|ARITHMETIC|BACKGROUND|ENDPROVIDE|EXCEPTIONS|IDENTIFIER|INDEX-LINE|OBLIGATORY|PARAMETERS|PERCENTAGE|PUSHBUTTON|RESOLUTION|COMPONENTS|DEALLOCATE|DISCONNECT|DUPLICATES|FIRST-LINE|HEAD-LINES|NO-DISPLAY|OCCURRENCE|RESPECTING|RETURNCODE|SUBMATCHES|TRACE-FILE|ASCENDING|BYPASSING|ENDMODULE|EXCEPTION|EXCLUDING|EXPORTING|INCREMENT|MATCHCODE|PARAMETER|PARTIALLY|PREFERRED|REFERENCE|REPLACING|RETURNING|SELECTION|SEPARATED|SPECIFIED|STATEMENT|TIMESTAMP|TYPE-POOL|ACCEPTING|APPENDAGE|ASSIGNING|COL_GROUP|COMPARING|CONSTANTS|DANGEROUS|IMPORTING|INSTANCES|LEFTSPACE|LOG-POINT|QUICKINFO|READ-ONLY|SCROLLING|SQLSCRIPT|STEP-LOOP|TOP-LINES|TRANSLATE|APPENDING|AUTHORITY|CHARACTER|COMPONENT|CONDITION|DIRECTORY|DUPLICATE|MESSAGING|RECEIVING|SUBSCREEN|ACCORDING|COL_TOTAL|END-LINES|ENDMETHOD|ENDSELECT|EXPANDING|EXTENSION|INCLUDING|INFOTYPES|INTERFACE|INTERVALS|LINE-SIZE|PF-STATUS|PROCEDURE|PROTECTED|REQUESTED|RESUMABLE|RIGHTPLUS|SAP-SPOOL|SECONDARY|STRUCTURE|SUBSTRING|TABLEVIEW|NUMOFCHAR|ADJACENT|ANALYSIS|ASSIGNED|BACKWARD|CHANNELS|CHECKBOX|CONTINUE|CRITICAL|DATAINFO|DD\\/MM\\/YY|DURATION|ENCODING|ENDCLASS|FUNCTION|LEFTPLUS|LINEFEED|MM\\/DD\\/YY|OVERFLOW|RECEIVED|SKIPPING|SORTABLE|STANDARD|SUBTRACT|SUPPRESS|TABSTRIP|TITLEBAR|TRUNCATE|UNASSIGN|WHENEVER|ANALYZER|COALESCE|COMMENTS|CONDENSE|DECIMALS|DEFERRED|ENDWHILE|EXPLICIT|KEYWORDS|MESSAGES|POSITION|PRIORITY|RECEIVER|RENAMING|TIMEZONE|TRAILING|ALLOCATE|CENTERED|CIRCULAR|CONTROLS|CURRENCY|DELETING|DESCRIBE|DISTANCE|ENDCATCH|EXPONENT|EXTENDED|GENERATE|IGNORING|INCLUDES|INTERNAL|MAJOR-ID|MODIFIER|NEW-LINE|OPTIONAL|PROPERTY|ROLLBACK|STARTING|SUPPLIED|ABSTRACT|CHANGING|CONTEXTS|CREATING|CUSTOMER|DATABASE|DAYLIGHT|DEFINING|DISTINCT|DIVISION|ENABLING|ENDCHAIN|ESCAPING|HARMLESS|IMPLICIT|INACTIVE|LANGUAGE|MINOR-ID|MULTIPLY|NEW-PAGE|NO-TITLE|POS_HIGH|SEPARATE|TEXTPOOL|TRANSFER|SELECTOR|DBMAXLEN|ITERATOR|SELECTOR|ARCHIVE|BIT-XOR|BYTE-CO|COLLECT|COMMENT|CURRENT|DEFAULT|DISPLAY|ENDFORM|EXTRACT|LEADING|LISTBOX|LOCATOR|MEMBERS|METHODS|NESTING|POS_LOW|PROCESS|PROVIDE|RAISING|RESERVE|SECONDS|SUMMARY|VISIBLE|BETWEEN|BIT-AND|BYTE-CS|CLEANUP|COMPUTE|CONTROL|CONVERT|DATASET|ENDCASE|FORWARD|HEADERS|HOTSPOT|INCLUDE|INVERSE|KEEPING|NO-ZERO|OBJECTS|OVERLAY|PADDING|PATTERN|PROGRAM|REFRESH|SECTION|SUMMING|TESTING|VERSION|WINDOWS|WITHOUT|BIT-NOT|BYTE-CA|BYTE-NA|CASTING|CONTEXT|COUNTRY|DYNAMIC|ENABLED|ENDLOOP|EXECUTE|FRIENDS|HANDLER|HEADING|INITIAL|\\*-INPUT|LOGFILE|MAXIMUM|MINIMUM|NO-GAPS|NO-SIGN|PRAGMAS|PRIMARY|PRIVATE|REDUCED|REPLACE|REQUEST|RESULTS|UNICODE|WARNING|ALIASES|BYTE-CN|BYTE-NS|CALLING|COL_KEY|COLUMNS|CONNECT|ENDEXEC|ENTRIES|EXCLUDE|FILTERS|FURTHER|HELP-ID|LOGICAL|MAPPING|MESSAGE|NAMETAB|OPTIONS|PACKAGE|PERFORM|RECEIVE|STATICS|VARYING|BINDING|CHARLEN|GREATER|XSTRLEN|ACCEPT|APPEND|DETAIL|ELSEIF|ENDING|ENDTRY|FORMAT|FRAMES|GIVING|HASHED|HEADER|IMPORT|INSERT|MARGIN|MODULE|NATIVE|OBJECT|OFFSET|REMOTE|RESUME|SAVING|SIMPLE|SUBMIT|TABBED|TOKENS|UNIQUE|UNPACK|UPDATE|WINDOW|YELLOW|ACTUAL|ASPECT|CENTER|CURSOR|DELETE|DIALOG|DIVIDE|DURING|ERRORS|EVENTS|EXTEND|FILTER|HANDLE|HAVING|IGNORE|LITTLE|MEMORY|NO-GAP|OCCURS|OPTION|PERSON|PLACES|PUBLIC|REDUCE|REPORT|RESULT|SINGLE|SORTED|SWITCH|SYNTAX|TARGET|VALUES|WRITER|ASSERT|BLOCKS|BOUNDS|BUFFER|CHANGE|COLUMN|COMMIT|CONCAT|COPIES|CREATE|DDMMYY|DEFINE|ENDIAN|ESCAPE|EXPAND|KERNEL|LAYOUT|LEGACY|LEVELS|MMDDYY|NUMBER|OUTPUT|RANGES|READER|RETURN|SCREEN|SEARCH|SELECT|SHARED|SOURCE|STABLE|STATIC|SUBKEY|SUFFIX|TABLES|UNWIND|YYMMDD|ASSIGN|BACKUP|BEFORE|BINARY|BIT-OR|BLANKS|CLIENT|CODING|COMMON|DEMAND|DYNPRO|EXCEPT|EXISTS|EXPORT|FIELDS|GLOBAL|GROUPS|LENGTH|LOCALE|MEDIUM|METHOD|MODIFY|NESTED|OTHERS|REJECT|SCROLL|SUPPLY|SYMBOL|ENDFOR|STRLEN|ALIGN|BEGIN|BOUND|ENDAT|ENTRY|EVENT|FINAL|FLUSH|GRANT|INNER|SHORT|USING|WRITE|AFTER|BLACK|BLOCK|CLOCK|COLOR|COUNT|DUMMY|EMPTY|ENDDO|ENDON|GREEN|INDEX|INOUT|LEAVE|LEVEL|LINES|MODIF|ORDER|OUTER|RANGE|RESET|RETRY|RIGHT|SMART|SPLIT|STYLE|TABLE|THROW|UNDER|UNTIL|UPPER|UTF-8|WHERE|ALIAS|BLANK|CLEAR|CLOSE|EXACT|FETCH|FIRST|FOUND|GROUP|LLANG|LOCAL|OTHER|REGEX|SPOOL|TITLE|TYPES|VALID|WHILE|ALPHA|BOXED|CATCH|CHAIN|CHECK|CLASS|COVER|ENDIF|EQUIV|FIELD|FLOOR|FRAME|INPUT|LOWER|MATCH|NODES|PAGES|PRINT|RAISE|ROUND|SHIFT|SPACE|SPOTS|STAMP|STATE|TASKS|TIMES|TRMAC|ULINE|UNION|VALUE|WIDTH|EQUAL|LOG10|TRUNC|BLOB|CASE|CEIL|CLOB|COND|EXIT|FILE|GAPS|HOLD|INCL|INTO|KEEP|KEYS|LAST|LINE|LONG|LPAD|MAIL|MODE|OPEN|PINK|READ|ROWS|TEST|THEN|ZERO|AREA|BACK|BADI|BYTE|CAST|EDIT|EXEC|FAIL|FIND|FKEQ|FONT|FREE|GKEQ|HIDE|INIT|ITNO|LATE|LOOP|MAIN|MARK|MOVE|NEXT|NULL|RISK|ROLE|UNIT|WAIT|ZONE|BASE|CALL|CODE|DATA|DATE|FKGE|GKGE|HIGH|KIND|LEFT|LIST|MASK|MESH|NAME|NODE|PACK|PAGE|POOL|SEND|SIGN|SIZE|SOME|STOP|TASK|TEXT|TIME|USER|VARY|WITH|WORD|BLUE|CONV|COPY|DEEP|ELSE|FORM|FROM|HINT|ICON|JOIN|LIKE|LOAD|ONLY|PART|SCAN|SKIP|SORT|TYPE|UNIX|VIEW|WHEN|WORK|ACOS|ASIN|ATAN|COSH|EACH|FRAC|LESS|RTTI|SINH|SQRT|TANH|AVG|BIT|DIV|ISO|LET|OUT|PAD|SQL|ALL|CI_|CPI|END|LOB|LPI|MAX|MIN|NEW|OLE|RUN|SET|\\?TO|YES|ABS|ADD|AND|BIG|FOR|HDB|JOB|LOW|NOT|SAP|TRY|VIA|XML|ANY|GET|IDS|KEY|MOD|OFF|PUT|RAW|RED|REF|SUM|TAB|XSD|CNT|COS|EXP|LOG|SIN|TAN|XOR|AT|CO|CP|DO|GT|ID|IF|NS|OR|BT|CA|CS|GE|NA|NB|EQ|IN|LT|NE|NO|OF|ON|PF|TO|AS|BY|CN|IS|LE|NP|UP|E|I|M|O|Z|C|X)\\b/i,\n      lookbehind: true\n    },\n\n    /* Numbers can be only integers. Decimal or Hex appear only as strings */\n    number: /\\b\\d+\\b/,\n\n    /* Operators must always be surrounded by whitespace, they cannot be put\n    adjacent to operands.\n    */\n    operator: {\n      pattern: /(\\s)(?:\\*\\*?|<[=>]?|>=?|\\?=|[-+\\/=])(?=\\s)/,\n      lookbehind: true\n    },\n    'string-operator': {\n      pattern: /(\\s)&&?(?=\\s)/,\n      lookbehind: true,\n\n      /* The official editor highlights */\n      alias: 'keyword'\n    },\n    'token-operator': [{\n      /* Special operators used to access structure components, class methods/attributes, etc. */\n      pattern: /(\\w)(?:->?|=>|[~|{}])(?=\\w)/,\n      lookbehind: true,\n      alias: 'punctuation'\n    }, {\n      /* Special tokens used do delimit string templates */\n      pattern: /[|{}]/,\n      alias: 'punctuation'\n    }],\n    punctuation: /[,.:()]/\n  };\n}","'use strict';\n\nmodule.exports = actionscript;\nactionscript.displayName = 'actionscript';\nactionscript.aliases = [];\n\nfunction actionscript(Prism) {\n  Prism.languages.actionscript = Prism.languages.extend('javascript', {\n    keyword: /\\b(?:as|break|case|catch|class|const|default|delete|do|else|extends|finally|for|function|if|implements|import|in|instanceof|interface|internal|is|native|new|null|package|private|protected|public|return|super|switch|this|throw|try|typeof|use|var|void|while|with|dynamic|each|final|get|include|namespace|native|override|set|static)\\b/,\n    operator: /\\+\\+|--|(?:[+\\-*\\/%^]|&&?|\\|\\|?|<<?|>>?>?|[!=]=?)=?|[~?@]/\n  });\n  Prism.languages.actionscript['class-name'].alias = 'function';\n\n  if (Prism.languages.markup) {\n    Prism.languages.insertBefore('actionscript', 'string', {\n      xml: {\n        pattern: /(^|[^.])<\\/?\\w+(?:\\s+[^\\s>\\/=]+=(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\])*\\2)*\\s*\\/?>/,\n        lookbehind: true,\n        inside: {\n          rest: Prism.languages.markup\n        }\n      }\n    });\n  }\n}","'use strict';\n\nmodule.exports = ada;\nada.displayName = 'ada';\nada.aliases = [];\n\nfunction ada(Prism) {\n  Prism.languages.ada = {\n    comment: /--.*/,\n    string: /\"(?:\"\"|[^\"\\r\\f\\n])*\"/i,\n    number: [{\n      pattern: /\\b\\d(?:_?\\d)*#[\\dA-F](?:_?[\\dA-F])*(?:\\.[\\dA-F](?:_?[\\dA-F])*)?#(?:E[+-]?\\d(?:_?\\d)*)?/i\n    }, {\n      pattern: /\\b\\d(?:_?\\d)*(?:\\.\\d(?:_?\\d)*)?(?:E[+-]?\\d(?:_?\\d)*)?\\b/i\n    }],\n    'attr-name': /\\b'\\w+/i,\n    keyword: /\\b(?:abort|abs|abstract|accept|access|aliased|all|and|array|at|begin|body|case|constant|declare|delay|delta|digits|do|else|new|return|elsif|end|entry|exception|exit|for|function|generic|goto|if|in|interface|is|limited|loop|mod|not|null|of|others|out|overriding|package|pragma|private|procedure|protected|raise|range|record|rem|renames|requeue|reverse|select|separate|some|subtype|synchronized|tagged|task|terminate|then|type|until|use|when|while|with|xor)\\b/i,\n    boolean: /\\b(?:true|false)\\b/i,\n    operator: /<[=>]?|>=?|=>?|:=|\\/=?|\\*\\*?|[&+-]/,\n    punctuation: /\\.\\.?|[,;():]/,\n    char: /'.'/,\n    variable: /\\b[a-z](?:[_a-z\\d])*\\b/i\n  };\n}","'use strict';\n\nmodule.exports = apacheconf;\napacheconf.displayName = 'apacheconf';\napacheconf.aliases = [];\n\nfunction apacheconf(Prism) {\n  Prism.languages.apacheconf = {\n    comment: /#.*/,\n    'directive-inline': {\n      pattern: /^(\\s*)\\b(?:AcceptFilter|AcceptPathInfo|AccessFileName|Action|AddAlt|AddAltByEncoding|AddAltByType|AddCharset|AddDefaultCharset|AddDescription|AddEncoding|AddHandler|AddIcon|AddIconByEncoding|AddIconByType|AddInputFilter|AddLanguage|AddModuleInfo|AddOutputFilter|AddOutputFilterByType|AddType|Alias|AliasMatch|Allow|AllowCONNECT|AllowEncodedSlashes|AllowMethods|AllowOverride|AllowOverrideList|Anonymous|Anonymous_LogEmail|Anonymous_MustGiveEmail|Anonymous_NoUserID|Anonymous_VerifyEmail|AsyncRequestWorkerFactor|AuthBasicAuthoritative|AuthBasicFake|AuthBasicProvider|AuthBasicUseDigestAlgorithm|AuthDBDUserPWQuery|AuthDBDUserRealmQuery|AuthDBMGroupFile|AuthDBMType|AuthDBMUserFile|AuthDigestAlgorithm|AuthDigestDomain|AuthDigestNonceLifetime|AuthDigestProvider|AuthDigestQop|AuthDigestShmemSize|AuthFormAuthoritative|AuthFormBody|AuthFormDisableNoStore|AuthFormFakeBasicAuth|AuthFormLocation|AuthFormLoginRequiredLocation|AuthFormLoginSuccessLocation|AuthFormLogoutLocation|AuthFormMethod|AuthFormMimetype|AuthFormPassword|AuthFormProvider|AuthFormSitePassphrase|AuthFormSize|AuthFormUsername|AuthGroupFile|AuthLDAPAuthorizePrefix|AuthLDAPBindAuthoritative|AuthLDAPBindDN|AuthLDAPBindPassword|AuthLDAPCharsetConfig|AuthLDAPCompareAsUser|AuthLDAPCompareDNOnServer|AuthLDAPDereferenceAliases|AuthLDAPGroupAttribute|AuthLDAPGroupAttributeIsDN|AuthLDAPInitialBindAsUser|AuthLDAPInitialBindPattern|AuthLDAPMaxSubGroupDepth|AuthLDAPRemoteUserAttribute|AuthLDAPRemoteUserIsDN|AuthLDAPSearchAsUser|AuthLDAPSubGroupAttribute|AuthLDAPSubGroupClass|AuthLDAPUrl|AuthMerging|AuthName|AuthnCacheContext|AuthnCacheEnable|AuthnCacheProvideFor|AuthnCacheSOCache|AuthnCacheTimeout|AuthnzFcgiCheckAuthnProvider|AuthnzFcgiDefineProvider|AuthType|AuthUserFile|AuthzDBDLoginToReferer|AuthzDBDQuery|AuthzDBDRedirectQuery|AuthzDBMType|AuthzSendForbiddenOnFailure|BalancerGrowth|BalancerInherit|BalancerMember|BalancerPersist|BrowserMatch|BrowserMatchNoCase|BufferedLogs|BufferSize|CacheDefaultExpire|CacheDetailHeader|CacheDirLength|CacheDirLevels|CacheDisable|CacheEnable|CacheFile|CacheHeader|CacheIgnoreCacheControl|CacheIgnoreHeaders|CacheIgnoreNoLastMod|CacheIgnoreQueryString|CacheIgnoreURLSessionIdentifiers|CacheKeyBaseURL|CacheLastModifiedFactor|CacheLock|CacheLockMaxAge|CacheLockPath|CacheMaxExpire|CacheMaxFileSize|CacheMinExpire|CacheMinFileSize|CacheNegotiatedDocs|CacheQuickHandler|CacheReadSize|CacheReadTime|CacheRoot|CacheSocache|CacheSocacheMaxSize|CacheSocacheMaxTime|CacheSocacheMinTime|CacheSocacheReadSize|CacheSocacheReadTime|CacheStaleOnError|CacheStoreExpired|CacheStoreNoStore|CacheStorePrivate|CGIDScriptTimeout|CGIMapExtension|CharsetDefault|CharsetOptions|CharsetSourceEnc|CheckCaseOnly|CheckSpelling|ChrootDir|ContentDigest|CookieDomain|CookieExpires|CookieName|CookieStyle|CookieTracking|CoreDumpDirectory|CustomLog|Dav|DavDepthInfinity|DavGenericLockDB|DavLockDB|DavMinTimeout|DBDExptime|DBDInitSQL|DBDKeep|DBDMax|DBDMin|DBDParams|DBDPersist|DBDPrepareSQL|DBDriver|DefaultIcon|DefaultLanguage|DefaultRuntimeDir|DefaultType|Define|DeflateBufferSize|DeflateCompressionLevel|DeflateFilterNote|DeflateInflateLimitRequestBody|DeflateInflateRatioBurst|DeflateInflateRatioLimit|DeflateMemLevel|DeflateWindowSize|Deny|DirectoryCheckHandler|DirectoryIndex|DirectoryIndexRedirect|DirectorySlash|DocumentRoot|DTracePrivileges|DumpIOInput|DumpIOOutput|EnableExceptionHook|EnableMMAP|EnableSendfile|Error|ErrorDocument|ErrorLog|ErrorLogFormat|Example|ExpiresActive|ExpiresByType|ExpiresDefault|ExtendedStatus|ExtFilterDefine|ExtFilterOptions|FallbackResource|FileETag|FilterChain|FilterDeclare|FilterProtocol|FilterProvider|FilterTrace|ForceLanguagePriority|ForceType|ForensicLog|GprofDir|GracefulShutdownTimeout|Group|Header|HeaderName|HeartbeatAddress|HeartbeatListen|HeartbeatMaxServers|HeartbeatStorage|HeartbeatStorage|HostnameLookups|IdentityCheck|IdentityCheckTimeout|ImapBase|ImapDefault|ImapMenu|Include|IncludeOptional|IndexHeadInsert|IndexIgnore|IndexIgnoreReset|IndexOptions|IndexOrderDefault|IndexStyleSheet|InputSed|ISAPIAppendLogToErrors|ISAPIAppendLogToQuery|ISAPICacheFile|ISAPIFakeAsync|ISAPILogNotSupported|ISAPIReadAheadBuffer|KeepAlive|KeepAliveTimeout|KeptBodySize|LanguagePriority|LDAPCacheEntries|LDAPCacheTTL|LDAPConnectionPoolTTL|LDAPConnectionTimeout|LDAPLibraryDebug|LDAPOpCacheEntries|LDAPOpCacheTTL|LDAPReferralHopLimit|LDAPReferrals|LDAPRetries|LDAPRetryDelay|LDAPSharedCacheFile|LDAPSharedCacheSize|LDAPTimeout|LDAPTrustedClientCert|LDAPTrustedGlobalCert|LDAPTrustedMode|LDAPVerifyServerCert|LimitInternalRecursion|LimitRequestBody|LimitRequestFields|LimitRequestFieldSize|LimitRequestLine|LimitXMLRequestBody|Listen|ListenBackLog|LoadFile|LoadModule|LogFormat|LogLevel|LogMessage|LuaAuthzProvider|LuaCodeCache|LuaHookAccessChecker|LuaHookAuthChecker|LuaHookCheckUserID|LuaHookFixups|LuaHookInsertFilter|LuaHookLog|LuaHookMapToStorage|LuaHookTranslateName|LuaHookTypeChecker|LuaInherit|LuaInputFilter|LuaMapHandler|LuaOutputFilter|LuaPackageCPath|LuaPackagePath|LuaQuickHandler|LuaRoot|LuaScope|MaxConnectionsPerChild|MaxKeepAliveRequests|MaxMemFree|MaxRangeOverlaps|MaxRangeReversals|MaxRanges|MaxRequestWorkers|MaxSpareServers|MaxSpareThreads|MaxThreads|MergeTrailers|MetaDir|MetaFiles|MetaSuffix|MimeMagicFile|MinSpareServers|MinSpareThreads|MMapFile|ModemStandard|ModMimeUsePathInfo|MultiviewsMatch|Mutex|NameVirtualHost|NoProxy|NWSSLTrustedCerts|NWSSLUpgradeable|Options|Order|OutputSed|PassEnv|PidFile|PrivilegesMode|Protocol|ProtocolEcho|ProxyAddHeaders|ProxyBadHeader|ProxyBlock|ProxyDomain|ProxyErrorOverride|ProxyExpressDBMFile|ProxyExpressDBMType|ProxyExpressEnable|ProxyFtpDirCharset|ProxyFtpEscapeWildcards|ProxyFtpListOnWildcard|ProxyHTMLBufSize|ProxyHTMLCharsetOut|ProxyHTMLDocType|ProxyHTMLEnable|ProxyHTMLEvents|ProxyHTMLExtended|ProxyHTMLFixups|ProxyHTMLInterp|ProxyHTMLLinks|ProxyHTMLMeta|ProxyHTMLStripComments|ProxyHTMLURLMap|ProxyIOBufferSize|ProxyMaxForwards|ProxyPass|ProxyPassInherit|ProxyPassInterpolateEnv|ProxyPassMatch|ProxyPassReverse|ProxyPassReverseCookieDomain|ProxyPassReverseCookiePath|ProxyPreserveHost|ProxyReceiveBufferSize|ProxyRemote|ProxyRemoteMatch|ProxyRequests|ProxySCGIInternalRedirect|ProxySCGISendfile|ProxySet|ProxySourceAddress|ProxyStatus|ProxyTimeout|ProxyVia|ReadmeName|ReceiveBufferSize|Redirect|RedirectMatch|RedirectPermanent|RedirectTemp|ReflectorHeader|RemoteIPHeader|RemoteIPInternalProxy|RemoteIPInternalProxyList|RemoteIPProxiesHeader|RemoteIPTrustedProxy|RemoteIPTrustedProxyList|RemoveCharset|RemoveEncoding|RemoveHandler|RemoveInputFilter|RemoveLanguage|RemoveOutputFilter|RemoveType|RequestHeader|RequestReadTimeout|Require|RewriteBase|RewriteCond|RewriteEngine|RewriteMap|RewriteOptions|RewriteRule|RLimitCPU|RLimitMEM|RLimitNPROC|Satisfy|ScoreBoardFile|Script|ScriptAlias|ScriptAliasMatch|ScriptInterpreterSource|ScriptLog|ScriptLogBuffer|ScriptLogLength|ScriptSock|SecureListen|SeeRequestTail|SendBufferSize|ServerAdmin|ServerAlias|ServerLimit|ServerName|ServerPath|ServerRoot|ServerSignature|ServerTokens|Session|SessionCookieName|SessionCookieName2|SessionCookieRemove|SessionCryptoCipher|SessionCryptoDriver|SessionCryptoPassphrase|SessionCryptoPassphraseFile|SessionDBDCookieName|SessionDBDCookieName2|SessionDBDCookieRemove|SessionDBDDeleteLabel|SessionDBDInsertLabel|SessionDBDPerUser|SessionDBDSelectLabel|SessionDBDUpdateLabel|SessionEnv|SessionExclude|SessionHeader|SessionInclude|SessionMaxAge|SetEnv|SetEnvIf|SetEnvIfExpr|SetEnvIfNoCase|SetHandler|SetInputFilter|SetOutputFilter|SSIEndTag|SSIErrorMsg|SSIETag|SSILastModified|SSILegacyExprParser|SSIStartTag|SSITimeFormat|SSIUndefinedEcho|SSLCACertificateFile|SSLCACertificatePath|SSLCADNRequestFile|SSLCADNRequestPath|SSLCARevocationCheck|SSLCARevocationFile|SSLCARevocationPath|SSLCertificateChainFile|SSLCertificateFile|SSLCertificateKeyFile|SSLCipherSuite|SSLCompression|SSLCryptoDevice|SSLEngine|SSLFIPS|SSLHonorCipherOrder|SSLInsecureRenegotiation|SSLOCSPDefaultResponder|SSLOCSPEnable|SSLOCSPOverrideResponder|SSLOCSPResponderTimeout|SSLOCSPResponseMaxAge|SSLOCSPResponseTimeSkew|SSLOCSPUseRequestNonce|SSLOpenSSLConfCmd|SSLOptions|SSLPassPhraseDialog|SSLProtocol|SSLProxyCACertificateFile|SSLProxyCACertificatePath|SSLProxyCARevocationCheck|SSLProxyCARevocationFile|SSLProxyCARevocationPath|SSLProxyCheckPeerCN|SSLProxyCheckPeerExpire|SSLProxyCheckPeerName|SSLProxyCipherSuite|SSLProxyEngine|SSLProxyMachineCertificateChainFile|SSLProxyMachineCertificateFile|SSLProxyMachineCertificatePath|SSLProxyProtocol|SSLProxyVerify|SSLProxyVerifyDepth|SSLRandomSeed|SSLRenegBufferSize|SSLRequire|SSLRequireSSL|SSLSessionCache|SSLSessionCacheTimeout|SSLSessionTicketKeyFile|SSLSRPUnknownUserSeed|SSLSRPVerifierFile|SSLStaplingCache|SSLStaplingErrorCacheTimeout|SSLStaplingFakeTryLater|SSLStaplingForceURL|SSLStaplingResponderTimeout|SSLStaplingResponseMaxAge|SSLStaplingResponseTimeSkew|SSLStaplingReturnResponderErrors|SSLStaplingStandardCacheTimeout|SSLStrictSNIVHostCheck|SSLUserName|SSLUseStapling|SSLVerifyClient|SSLVerifyDepth|StartServers|StartThreads|Substitute|Suexec|SuexecUserGroup|ThreadLimit|ThreadsPerChild|ThreadStackSize|TimeOut|TraceEnable|TransferLog|TypesConfig|UnDefine|UndefMacro|UnsetEnv|Use|UseCanonicalName|UseCanonicalPhysicalPort|User|UserDir|VHostCGIMode|VHostCGIPrivs|VHostGroup|VHostPrivs|VHostSecure|VHostUser|VirtualDocumentRoot|VirtualDocumentRootIP|VirtualScriptAlias|VirtualScriptAliasIP|WatchdogInterval|XBitHack|xml2EncAlias|xml2EncDefault|xml2StartParse)\\b/im,\n      lookbehind: true,\n      alias: 'property'\n    },\n    'directive-block': {\n      pattern: /<\\/?\\b(?:AuthnProviderAlias|AuthzProviderAlias|Directory|DirectoryMatch|Else|ElseIf|Files|FilesMatch|If|IfDefine|IfModule|IfVersion|Limit|LimitExcept|Location|LocationMatch|Macro|Proxy|RequireAll|RequireAny|RequireNone|VirtualHost)\\b *.*>/i,\n      inside: {\n        'directive-block': {\n          pattern: /^<\\/?\\w+/,\n          inside: {\n            punctuation: /^<\\/?/\n          },\n          alias: 'tag'\n        },\n        'directive-block-parameter': {\n          pattern: /.*[^>]/,\n          inside: {\n            punctuation: /:/,\n            string: {\n              pattern: /(\"|').*\\1/,\n              inside: {\n                variable: /[$%]\\{?(?:\\w\\.?[-+:]?)+\\}?/\n              }\n            }\n          },\n          alias: 'attr-value'\n        },\n        punctuation: />/\n      },\n      alias: 'tag'\n    },\n    'directive-flags': {\n      pattern: /\\[(?:\\w,?)+\\]/,\n      alias: 'keyword'\n    },\n    string: {\n      pattern: /(\"|').*\\1/,\n      inside: {\n        variable: /[$%]\\{?(?:\\w\\.?[-+:]?)+\\}?/\n      }\n    },\n    variable: /[$%]\\{?(?:\\w\\.?[-+:]?)+\\}?/,\n    regex: /\\^?.*\\$|\\^.*\\$?/\n  };\n}","'use strict';\n\nmodule.exports = apl;\napl.displayName = 'apl';\napl.aliases = [];\n\nfunction apl(Prism) {\n  Prism.languages.apl = {\n    comment: /(?:⍝|#[! ]).*$/m,\n    string: {\n      pattern: /'(?:[^'\\r\\n]|'')*'/,\n      greedy: true\n    },\n    number: /¯?(?:\\d*\\.?\\d+(?:e[+¯]?\\d+)?|¯|∞)(?:j¯?(?:\\d*\\.?\\d+(?:e[+¯]?\\d+)?|¯|∞))?/i,\n    statement: /:[A-Z][a-z][A-Za-z]*\\b/,\n    'system-function': {\n      pattern: /⎕[A-Z]+/i,\n      alias: 'function'\n    },\n    constant: /[⍬⌾#⎕⍞]/,\n    function: /[-+×÷⌈⌊∣|⍳⍸?*⍟○!⌹<≤=>≥≠≡≢∊⍷∪∩~∨∧⍱⍲⍴,⍪⌽⊖⍉↑↓⊂⊃⊆⊇⌷⍋⍒⊤⊥⍕⍎⊣⊢⍁⍂≈⍯↗¤→]/,\n    'monadic-operator': {\n      pattern: /[\\\\\\/⌿⍀¨⍨⌶&∥]/,\n      alias: 'operator'\n    },\n    'dyadic-operator': {\n      pattern: /[.⍣⍠⍤∘⌸@⌺]/,\n      alias: 'operator'\n    },\n    assignment: {\n      pattern: /←/,\n      alias: 'keyword'\n    },\n    punctuation: /[\\[;\\]()◇⋄]/,\n    dfn: {\n      pattern: /[{}⍺⍵⍶⍹∇⍫:]/,\n      alias: 'builtin'\n    }\n  };\n}","'use strict';\n\nmodule.exports = applescript;\napplescript.displayName = 'applescript';\napplescript.aliases = [];\n\nfunction applescript(Prism) {\n  Prism.languages.applescript = {\n    comment: [// Allow one level of nesting\n    /\\(\\*(?:\\(\\*[\\s\\S]*?\\*\\)|[\\s\\S])*?\\*\\)/, /--.+/, /#.+/],\n    string: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n    number: /(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e-?\\d+)?\\b/i,\n    operator: [/[&=≠≤≥*+\\-\\/÷^]|[<>]=?/, /\\b(?:(?:start|begin|end)s? with|(?:(?:does not|doesn't) contain|contains?)|(?:is|isn't|is not) (?:in|contained by)|(?:(?:is|isn't|is not) )?(?:greater|less) than(?: or equal)?(?: to)?|(?:(?:does not|doesn't) come|comes) (?:before|after)|(?:is|isn't|is not) equal(?: to)?|(?:(?:does not|doesn't) equal|equals|equal to|isn't|is not)|(?:a )?(?:ref(?: to)?|reference to)|(?:and|or|div|mod|as|not))\\b/],\n    keyword: /\\b(?:about|above|after|against|apart from|around|aside from|at|back|before|beginning|behind|below|beneath|beside|between|but|by|considering|continue|copy|does|eighth|else|end|equal|error|every|exit|false|fifth|first|for|fourth|from|front|get|given|global|if|ignoring|in|instead of|into|is|it|its|last|local|me|middle|my|ninth|of|on|onto|out of|over|prop|property|put|repeat|return|returning|second|set|seventh|since|sixth|some|tell|tenth|that|the|then|third|through|thru|timeout|times|to|transaction|true|try|until|where|while|whose|with|without)\\b/,\n    class: {\n      pattern: /\\b(?:alias|application|boolean|class|constant|date|file|integer|list|number|POSIX file|real|record|reference|RGB color|script|text|centimetres|centimeters|feet|inches|kilometres|kilometers|metres|meters|miles|yards|square feet|square kilometres|square kilometers|square metres|square meters|square miles|square yards|cubic centimetres|cubic centimeters|cubic feet|cubic inches|cubic metres|cubic meters|cubic yards|gallons|litres|liters|quarts|grams|kilograms|ounces|pounds|degrees Celsius|degrees Fahrenheit|degrees Kelvin)\\b/,\n      alias: 'builtin'\n    },\n    punctuation: /[{}():,¬«»《》]/\n  };\n}","'use strict';\n\nvar refractorCpp = require('./cpp.js');\n\nmodule.exports = arduino;\narduino.displayName = 'arduino';\narduino.aliases = [];\n\nfunction arduino(Prism) {\n  Prism.register(refractorCpp);\n  Prism.languages.arduino = Prism.languages.extend('cpp', {\n    keyword: /\\b(?:setup|if|else|while|do|for|return|in|instanceof|default|function|loop|goto|switch|case|new|try|throw|catch|finally|null|break|continue|boolean|bool|void|byte|word|string|String|array|int|long|integer|double)\\b/,\n    builtin: /\\b(?:KeyboardController|MouseController|SoftwareSerial|EthernetServer|EthernetClient|LiquidCrystal|LiquidCrystal_I2C|RobotControl|GSMVoiceCall|EthernetUDP|EsploraTFT|HttpClient|RobotMotor|WiFiClient|GSMScanner|FileSystem|Scheduler|GSMServer|YunClient|YunServer|IPAddress|GSMClient|GSMModem|Keyboard|Ethernet|Console|GSMBand|Esplora|Stepper|Process|WiFiUDP|GSM_SMS|Mailbox|USBHost|Firmata|PImage|Client|Server|GSMPIN|FileIO|Bridge|Serial|EEPROM|Stream|Mouse|Audio|Servo|File|Task|GPRS|WiFi|Wire|TFT|GSM|SPI|SD|runShellCommandAsynchronously|analogWriteResolution|retrieveCallingNumber|printFirmwareVersion|analogReadResolution|sendDigitalPortPair|noListenOnLocalhost|readJoystickButton|setFirmwareVersion|readJoystickSwitch|scrollDisplayRight|getVoiceCallStatus|scrollDisplayLeft|writeMicroseconds|delayMicroseconds|beginTransmission|getSignalStrength|runAsynchronously|getAsynchronously|listenOnLocalhost|getCurrentCarrier|readAccelerometer|messageAvailable|sendDigitalPorts|lineFollowConfig|countryNameWrite|runShellCommand|readStringUntil|rewindDirectory|readTemperature|setClockDivider|readLightSensor|endTransmission|analogReference|detachInterrupt|countryNameRead|attachInterrupt|encryptionType|readBytesUntil|robotNameWrite|readMicrophone|robotNameRead|cityNameWrite|userNameWrite|readJoystickY|readJoystickX|mouseReleased|openNextFile|scanNetworks|noInterrupts|digitalWrite|beginSpeaker|mousePressed|isActionDone|mouseDragged|displayLogos|noAutoscroll|addParameter|remoteNumber|getModifiers|keyboardRead|userNameRead|waitContinue|processInput|parseCommand|printVersion|readNetworks|writeMessage|blinkVersion|cityNameRead|readMessage|setDataMode|parsePacket|isListening|setBitOrder|beginPacket|isDirectory|motorsWrite|drawCompass|digitalRead|clearScreen|serialEvent|rightToLeft|setTextSize|leftToRight|requestFrom|keyReleased|compassRead|analogWrite|interrupts|WiFiServer|disconnect|playMelody|parseFloat|autoscroll|getPINUsed|setPINUsed|setTimeout|sendAnalog|readSlider|analogRead|beginWrite|createChar|motorsStop|keyPressed|tempoWrite|readButton|subnetMask|debugPrint|macAddress|writeGreen|randomSeed|attachGPRS|readString|sendString|remotePort|releaseAll|mouseMoved|background|getXChange|getYChange|answerCall|getResult|voiceCall|endPacket|constrain|getSocket|writeJSON|getButton|available|connected|findUntil|readBytes|exitValue|readGreen|writeBlue|startLoop|IPAddress|isPressed|sendSysex|pauseMode|gatewayIP|setCursor|getOemKey|tuneWrite|noDisplay|loadImage|switchPIN|onRequest|onReceive|changePIN|playFile|noBuffer|parseInt|overflow|checkPIN|knobRead|beginTFT|bitClear|updateIR|bitWrite|position|writeRGB|highByte|writeRed|setSpeed|readBlue|noStroke|remoteIP|transfer|shutdown|hangCall|beginSMS|endWrite|attached|maintain|noCursor|checkReg|checkPUK|shiftOut|isValid|shiftIn|pulseIn|connect|println|localIP|pinMode|getIMEI|display|noBlink|process|getBand|running|beginSD|drawBMP|lowByte|setBand|release|bitRead|prepare|pointTo|readRed|setMode|noFill|remove|listen|stroke|detach|attach|noTone|exists|buffer|height|bitSet|circle|config|cursor|random|IRread|setDNS|endSMS|getKey|micros|millis|begin|print|write|ready|flush|width|isPIN|blink|clear|press|mkdir|rmdir|close|point|yield|image|BSSID|click|delay|read|text|move|peek|beep|rect|line|open|seek|fill|size|turn|stop|home|find|step|tone|sqrt|RSSI|SSID|end|bit|tan|cos|sin|pow|map|abs|max|min|get|run|put)\\b/,\n    constant: /\\b(?:DIGITAL_MESSAGE|FIRMATA_STRING|ANALOG_MESSAGE|REPORT_DIGITAL|REPORT_ANALOG|INPUT_PULLUP|SET_PIN_MODE|INTERNAL2V56|SYSTEM_RESET|LED_BUILTIN|INTERNAL1V1|SYSEX_START|INTERNAL|EXTERNAL|DEFAULT|OUTPUT|INPUT|HIGH|LOW)\\b/\n  });\n}","'use strict';\n\nmodule.exports = arff;\narff.displayName = 'arff';\narff.aliases = [];\n\nfunction arff(Prism) {\n  Prism.languages.arff = {\n    comment: /%.*/,\n    string: {\n      pattern: /([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    keyword: /@(?:attribute|data|end|relation)\\b/i,\n    number: /\\b\\d+(?:\\.\\d+)?\\b/,\n    punctuation: /[{},]/\n  };\n}","'use strict';\n\nmodule.exports = asciidoc;\nasciidoc.displayName = 'asciidoc';\nasciidoc.aliases = [];\n\nfunction asciidoc(Prism) {\n  ;\n\n  (function (Prism) {\n    var attributes = {\n      pattern: /(^[ \\t]*)\\[(?!\\[)(?:([\"'$`])(?:(?!\\2)[^\\\\]|\\\\.)*\\2|\\[(?:[^\\]\\\\]|\\\\.)*\\]|[^\\]\\\\]|\\\\.)*\\]/m,\n      lookbehind: true,\n      inside: {\n        quoted: {\n          pattern: /([$`])(?:(?!\\1)[^\\\\]|\\\\.)*\\1/,\n          inside: {\n            punctuation: /^[$`]|[$`]$/\n          }\n        },\n        interpreted: {\n          pattern: /'(?:[^'\\\\]|\\\\.)*'/,\n          inside: {\n            punctuation: /^'|'$/ // See rest below\n\n          }\n        },\n        string: /\"(?:[^\"\\\\]|\\\\.)*\"/,\n        variable: /\\w+(?==)/,\n        punctuation: /^\\[|\\]$|,/,\n        operator: /=/,\n        // The negative look-ahead prevents blank matches\n        'attr-value': /(?!^\\s+$).+/\n      }\n    };\n    Prism.languages.asciidoc = {\n      'comment-block': {\n        pattern: /^(\\/{4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1/m,\n        alias: 'comment'\n      },\n      table: {\n        pattern: /^\\|={3,}(?:(?:\\r?\\n|\\r).*)*?(?:\\r?\\n|\\r)\\|={3,}$/m,\n        inside: {\n          specifiers: {\n            pattern: /(?!\\|)(?:(?:(?:\\d+(?:\\.\\d+)?|\\.\\d+)[+*])?(?:[<^>](?:\\.[<^>])?|\\.[<^>])?[a-z]*)(?=\\|)/,\n            alias: 'attr-value'\n          },\n          punctuation: {\n            pattern: /(^|[^\\\\])[|!]=*/,\n            lookbehind: true // See rest below\n\n          }\n        }\n      },\n      'passthrough-block': {\n        pattern: /^(\\+{4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1$/m,\n        inside: {\n          punctuation: /^\\++|\\++$/ // See rest below\n\n        }\n      },\n      // Literal blocks and listing blocks\n      'literal-block': {\n        pattern: /^(-{4,}|\\.{4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1$/m,\n        inside: {\n          punctuation: /^(?:-+|\\.+)|(?:-+|\\.+)$/ // See rest below\n\n        }\n      },\n      // Sidebar blocks, quote blocks, example blocks and open blocks\n      'other-block': {\n        pattern: /^(--|\\*{4,}|_{4,}|={4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1$/m,\n        inside: {\n          punctuation: /^(?:-+|\\*+|_+|=+)|(?:-+|\\*+|_+|=+)$/ // See rest below\n\n        }\n      },\n      // list-punctuation and list-label must appear before indented-block\n      'list-punctuation': {\n        pattern: /(^[ \\t]*)(?:-|\\*{1,5}|\\.{1,5}|(?:[a-z]|\\d+)\\.|[xvi]+\\))(?= )/im,\n        lookbehind: true,\n        alias: 'punctuation'\n      },\n      'list-label': {\n        pattern: /(^[ \\t]*)[a-z\\d].+(?::{2,4}|;;)(?=\\s)/im,\n        lookbehind: true,\n        alias: 'symbol'\n      },\n      'indented-block': {\n        pattern: /((\\r?\\n|\\r)\\2)([ \\t]+)\\S.*(?:(?:\\r?\\n|\\r)\\3.+)*(?=\\2{2}|$)/,\n        lookbehind: true\n      },\n      comment: /^\\/\\/.*/m,\n      title: {\n        pattern: /^.+(?:\\r?\\n|\\r)(?:={3,}|-{3,}|~{3,}|\\^{3,}|\\+{3,})$|^={1,5} +.+|^\\.(?![\\s.]).*/m,\n        alias: 'important',\n        inside: {\n          punctuation: /^(?:\\.|=+)|(?:=+|-+|~+|\\^+|\\++)$/ // See rest below\n\n        }\n      },\n      'attribute-entry': {\n        pattern: /^:[^:\\r\\n]+:(?: .*?(?: \\+(?:\\r?\\n|\\r).*?)*)?$/m,\n        alias: 'tag'\n      },\n      attributes: attributes,\n      hr: {\n        pattern: /^'{3,}$/m,\n        alias: 'punctuation'\n      },\n      'page-break': {\n        pattern: /^<{3,}$/m,\n        alias: 'punctuation'\n      },\n      admonition: {\n        pattern: /^(?:TIP|NOTE|IMPORTANT|WARNING|CAUTION):/m,\n        alias: 'keyword'\n      },\n      callout: [{\n        pattern: /(^[ \\t]*)<?\\d*>/m,\n        lookbehind: true,\n        alias: 'symbol'\n      }, {\n        pattern: /<\\d+>/,\n        alias: 'symbol'\n      }],\n      macro: {\n        pattern: /\\b[a-z\\d][a-z\\d-]*::?(?:(?:\\S+)??\\[(?:[^\\]\\\\\"]|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*\\1|\\\\.)*\\])/,\n        inside: {\n          function: /^[a-z\\d-]+(?=:)/,\n          punctuation: /^::?/,\n          attributes: {\n            pattern: /(?:\\[(?:[^\\]\\\\\"]|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*\\1|\\\\.)*\\])/,\n            inside: attributes.inside\n          }\n        }\n      },\n      inline: {\n        /*\n        The initial look-behind prevents the highlighting of escaped quoted text.\n        Quoted text can be multi-line but cannot span an empty line.\n        All quoted text can have attributes before [foobar, 'foobar', baz=\"bar\"].\n        First, we handle the constrained quotes.\n        Those must be bounded by non-word chars and cannot have spaces between the delimiter and the first char.\n        They are, in order: _emphasis_, ``double quotes'', `single quotes', `monospace`, 'emphasis', *strong*, +monospace+ and #unquoted#\n        Then we handle the unconstrained quotes.\n        Those do not have the restrictions of the constrained quotes.\n        They are, in order: __emphasis__, **strong**, ++monospace++, +++passthrough+++, ##unquoted##, $$passthrough$$, ~subscript~, ^superscript^, {attribute-reference}, [[anchor]], [[[bibliography anchor]]], <<xref>>, (((indexes))) and ((indexes))\n        */\n        pattern: /(^|[^\\\\])(?:(?:\\B\\[(?:[^\\]\\\\\"]|([\"'])(?:(?!\\2)[^\\\\]|\\\\.)*\\2|\\\\.)*\\])?(?:\\b_(?!\\s)(?: _|[^_\\\\\\r\\n]|\\\\.)+(?:(?:\\r?\\n|\\r)(?: _|[^_\\\\\\r\\n]|\\\\.)+)*_\\b|\\B``(?!\\s).+?(?:(?:\\r?\\n|\\r).+?)*''\\B|\\B`(?!\\s)(?: ['`]|.)+?(?:(?:\\r?\\n|\\r)(?: ['`]|.)+?)*['`]\\B|\\B(['*+#])(?!\\s)(?: \\3|(?!\\3)[^\\\\\\r\\n]|\\\\.)+(?:(?:\\r?\\n|\\r)(?: \\3|(?!\\3)[^\\\\\\r\\n]|\\\\.)+)*\\3\\B)|(?:\\[(?:[^\\]\\\\\"]|([\"'])(?:(?!\\4)[^\\\\]|\\\\.)*\\4|\\\\.)*\\])?(?:(__|\\*\\*|\\+\\+\\+?|##|\\$\\$|[~^]).+?(?:(?:\\r?\\n|\\r).+?)*\\5|\\{[^}\\r\\n]+\\}|\\[\\[\\[?.+?(?:(?:\\r?\\n|\\r).+?)*\\]?\\]\\]|<<.+?(?:(?:\\r?\\n|\\r).+?)*>>|\\(\\(\\(?.+?(?:(?:\\r?\\n|\\r).+?)*\\)?\\)\\)))/m,\n        lookbehind: true,\n        inside: {\n          attributes: attributes,\n          url: {\n            pattern: /^(?:\\[\\[\\[?.+?\\]?\\]\\]|<<.+?>>)$/,\n            inside: {\n              punctuation: /^(?:\\[\\[\\[?|<<)|(?:\\]\\]\\]?|>>)$/\n            }\n          },\n          'attribute-ref': {\n            pattern: /^\\{.+\\}$/,\n            inside: {\n              variable: {\n                pattern: /(^\\{)[a-z\\d,+_-]+/,\n                lookbehind: true\n              },\n              operator: /^[=?!#%@$]|!(?=[:}])/,\n              punctuation: /^\\{|\\}$|::?/\n            }\n          },\n          italic: {\n            pattern: /^(['_])[\\s\\S]+\\1$/,\n            inside: {\n              punctuation: /^(?:''?|__?)|(?:''?|__?)$/\n            }\n          },\n          bold: {\n            pattern: /^\\*[\\s\\S]+\\*$/,\n            inside: {\n              punctuation: /^\\*\\*?|\\*\\*?$/\n            }\n          },\n          punctuation: /^(?:``?|\\+{1,3}|##?|\\$\\$|[~^]|\\(\\(\\(?)|(?:''?|\\+{1,3}|##?|\\$\\$|[~^`]|\\)?\\)\\))$/\n        }\n      },\n      replacement: {\n        pattern: /\\((?:C|TM|R)\\)/,\n        alias: 'builtin'\n      },\n      entity: /&#?[\\da-z]{1,8};/i,\n      'line-continuation': {\n        pattern: /(^| )\\+$/m,\n        lookbehind: true,\n        alias: 'punctuation'\n      } // Allow some nesting. There is no recursion though, so cloning should not be needed.\n\n    };\n    attributes.inside['interpreted'].inside.rest = {\n      macro: Prism.languages.asciidoc['macro'],\n      inline: Prism.languages.asciidoc['inline'],\n      replacement: Prism.languages.asciidoc['replacement'],\n      entity: Prism.languages.asciidoc['entity']\n    };\n    Prism.languages.asciidoc['passthrough-block'].inside.rest = {\n      macro: Prism.languages.asciidoc['macro']\n    };\n    Prism.languages.asciidoc['literal-block'].inside.rest = {\n      callout: Prism.languages.asciidoc['callout']\n    };\n    Prism.languages.asciidoc['table'].inside.rest = {\n      'comment-block': Prism.languages.asciidoc['comment-block'],\n      'passthrough-block': Prism.languages.asciidoc['passthrough-block'],\n      'literal-block': Prism.languages.asciidoc['literal-block'],\n      'other-block': Prism.languages.asciidoc['other-block'],\n      'list-punctuation': Prism.languages.asciidoc['list-punctuation'],\n      'indented-block': Prism.languages.asciidoc['indented-block'],\n      comment: Prism.languages.asciidoc['comment'],\n      title: Prism.languages.asciidoc['title'],\n      'attribute-entry': Prism.languages.asciidoc['attribute-entry'],\n      attributes: Prism.languages.asciidoc['attributes'],\n      hr: Prism.languages.asciidoc['hr'],\n      'page-break': Prism.languages.asciidoc['page-break'],\n      admonition: Prism.languages.asciidoc['admonition'],\n      'list-label': Prism.languages.asciidoc['list-label'],\n      callout: Prism.languages.asciidoc['callout'],\n      macro: Prism.languages.asciidoc['macro'],\n      inline: Prism.languages.asciidoc['inline'],\n      replacement: Prism.languages.asciidoc['replacement'],\n      entity: Prism.languages.asciidoc['entity'],\n      'line-continuation': Prism.languages.asciidoc['line-continuation']\n    };\n    Prism.languages.asciidoc['other-block'].inside.rest = {\n      table: Prism.languages.asciidoc['table'],\n      'list-punctuation': Prism.languages.asciidoc['list-punctuation'],\n      'indented-block': Prism.languages.asciidoc['indented-block'],\n      comment: Prism.languages.asciidoc['comment'],\n      'attribute-entry': Prism.languages.asciidoc['attribute-entry'],\n      attributes: Prism.languages.asciidoc['attributes'],\n      hr: Prism.languages.asciidoc['hr'],\n      'page-break': Prism.languages.asciidoc['page-break'],\n      admonition: Prism.languages.asciidoc['admonition'],\n      'list-label': Prism.languages.asciidoc['list-label'],\n      macro: Prism.languages.asciidoc['macro'],\n      inline: Prism.languages.asciidoc['inline'],\n      replacement: Prism.languages.asciidoc['replacement'],\n      entity: Prism.languages.asciidoc['entity'],\n      'line-continuation': Prism.languages.asciidoc['line-continuation']\n    };\n    Prism.languages.asciidoc['title'].inside.rest = {\n      macro: Prism.languages.asciidoc['macro'],\n      inline: Prism.languages.asciidoc['inline'],\n      replacement: Prism.languages.asciidoc['replacement'],\n      entity: Prism.languages.asciidoc['entity'] // Plugin to make entity title show the real entity, idea by Roman Komarov\n\n    };\n    Prism.hooks.add('wrap', function (env) {\n      if (env.type === 'entity') {\n        env.attributes['title'] = env.content.value.replace(/&amp;/, '&');\n      }\n    });\n  })(Prism);\n}","'use strict';\n\nmodule.exports = asm6502;\nasm6502.displayName = 'asm6502';\nasm6502.aliases = [];\n\nfunction asm6502(Prism) {\n  Prism.languages.asm6502 = {\n    comment: /;.*/,\n    directive: {\n      pattern: /\\.\\w+(?= )/,\n      alias: 'keyword'\n    },\n    string: /([\"'`])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    opcode: {\n      pattern: /\\b(?:adc|and|asl|bcc|bcs|beq|bit|bmi|bne|bpl|brk|bvc|bvs|clc|cld|cli|clv|cmp|cpx|cpy|dec|dex|dey|eor|inc|inx|iny|jmp|jsr|lda|ldx|ldy|lsr|nop|ora|pha|php|pla|plp|rol|ror|rti|rts|sbc|sec|sed|sei|sta|stx|sty|tax|tay|tsx|txa|txs|tya|ADC|AND|ASL|BCC|BCS|BEQ|BIT|BMI|BNE|BPL|BRK|BVC|BVS|CLC|CLD|CLI|CLV|CMP|CPX|CPY|DEC|DEX|DEY|EOR|INC|INX|INY|JMP|JSR|LDA|LDX|LDY|LSR|NOP|ORA|PHA|PHP|PLA|PLP|ROL|ROR|RTI|RTS|SBC|SEC|SED|SEI|STA|STX|STY|TAX|TAY|TSX|TXA|TXS|TYA)\\b/,\n      alias: 'property'\n    },\n    hexnumber: {\n      pattern: /#?\\$[\\da-f]{2,4}/i,\n      alias: 'string'\n    },\n    binarynumber: {\n      pattern: /#?%[01]+/,\n      alias: 'string'\n    },\n    decimalnumber: {\n      pattern: /#?\\d+/,\n      alias: 'string'\n    },\n    register: {\n      pattern: /\\b[xya]\\b/i,\n      alias: 'variable'\n    }\n  };\n}","'use strict';\n\nmodule.exports = aspnet;\naspnet.displayName = 'aspnet';\naspnet.aliases = [];\n\nfunction aspnet(Prism) {\n  Prism.languages.aspnet = Prism.languages.extend('markup', {\n    'page-directive tag': {\n      pattern: /<%\\s*@.*%>/i,\n      inside: {\n        'page-directive tag': /<%\\s*@\\s*(?:Assembly|Control|Implements|Import|Master(?:Type)?|OutputCache|Page|PreviousPageType|Reference|Register)?|%>/i,\n        rest: Prism.languages.markup.tag.inside\n      }\n    },\n    'directive tag': {\n      pattern: /<%.*%>/i,\n      inside: {\n        'directive tag': /<%\\s*?[$=%#:]{0,2}|%>/i,\n        rest: Prism.languages.csharp\n      }\n    }\n  }); // Regexp copied from prism-markup, with a negative look-ahead added\n\n  Prism.languages.aspnet.tag.pattern = /<(?!%)\\/?[^\\s>\\/]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i; // match directives of attribute value foo=\"<% Bar %>\"\n\n  Prism.languages.insertBefore('inside', 'punctuation', {\n    'directive tag': Prism.languages.aspnet['directive tag']\n  }, Prism.languages.aspnet.tag.inside['attr-value']);\n  Prism.languages.insertBefore('aspnet', 'comment', {\n    'asp comment': /<%--[\\s\\S]*?--%>/\n  }); // script runat=\"server\" contains csharp, not javascript\n\n  Prism.languages.insertBefore('aspnet', Prism.languages.javascript ? 'script' : 'tag', {\n    'asp script': {\n      pattern: /(<script(?=.*runat=['\"]?server['\"]?)[\\s\\S]*?>)[\\s\\S]*?(?=<\\/script>)/i,\n      lookbehind: true,\n      inside: Prism.languages.csharp || {}\n    }\n  });\n}","'use strict';\n\nmodule.exports = autohotkey;\nautohotkey.displayName = 'autohotkey';\nautohotkey.aliases = [];\n\nfunction autohotkey(Prism) {\n  // NOTES - follows first-first highlight method, block is locked after highlight, different from SyntaxHl\n  Prism.languages.autohotkey = {\n    comment: {\n      pattern: /(^[^\";\\n]*(\"[^\"\\n]*?\"[^\"\\n]*?)*)(?:;.*$|^\\s*\\/\\*[\\s\\S]*\\n\\*\\/)/m,\n      lookbehind: true\n    },\n    string: /\"(?:[^\"\\n\\r]|\"\")*\"/m,\n    function: /[^(); \\t,\\n+*\\-=?>:\\\\\\/<&%\\[\\]]+?(?=\\()/m,\n    //function - don't use .*\\) in the end bcoz string locks it\n    tag: /^[ \\t]*[^\\s:]+?(?=:(?:[^:]|$))/m,\n    //labels\n    variable: /%\\w+%/,\n    number: /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n    operator: /\\?|\\/\\/?=?|:=|\\|[=|]?|&[=&]?|\\+[=+]?|-[=-]?|\\*[=*]?|<(?:<=?|>|=)?|>>?=?|[.^!=~]=?|\\b(?:AND|NOT|OR)\\b/,\n    punctuation: /[{}[\\]():,]/,\n    boolean: /\\b(?:true|false)\\b/,\n    selector: /\\b(?:AutoTrim|BlockInput|Break|Click|ClipWait|Continue|Control|ControlClick|ControlFocus|ControlGet|ControlGetFocus|ControlGetPos|ControlGetText|ControlMove|ControlSend|ControlSendRaw|ControlSetText|CoordMode|Critical|DetectHiddenText|DetectHiddenWindows|Drive|DriveGet|DriveSpaceFree|EnvAdd|EnvDiv|EnvGet|EnvMult|EnvSet|EnvSub|EnvUpdate|Exit|ExitApp|FileAppend|FileCopy|FileCopyDir|FileCreateDir|FileCreateShortcut|FileDelete|FileEncoding|FileGetAttrib|FileGetShortcut|FileGetSize|FileGetTime|FileGetVersion|FileInstall|FileMove|FileMoveDir|FileRead|FileReadLine|FileRecycle|FileRecycleEmpty|FileRemoveDir|FileSelectFile|FileSelectFolder|FileSetAttrib|FileSetTime|FormatTime|GetKeyState|Gosub|Goto|GroupActivate|GroupAdd|GroupClose|GroupDeactivate|Gui|GuiControl|GuiControlGet|Hotkey|ImageSearch|IniDelete|IniRead|IniWrite|Input|InputBox|KeyWait|ListHotkeys|ListLines|ListVars|Loop|Menu|MouseClick|MouseClickDrag|MouseGetPos|MouseMove|MsgBox|OnExit|OutputDebug|Pause|PixelGetColor|PixelSearch|PostMessage|Process|Progress|Random|RegDelete|RegRead|RegWrite|Reload|Repeat|Return|Run|RunAs|RunWait|Send|SendEvent|SendInput|SendMessage|SendMode|SendPlay|SendRaw|SetBatchLines|SetCapslockState|SetControlDelay|SetDefaultMouseSpeed|SetEnv|SetFormat|SetKeyDelay|SetMouseDelay|SetNumlockState|SetScrollLockState|SetStoreCapslockMode|SetTimer|SetTitleMatchMode|SetWinDelay|SetWorkingDir|Shutdown|Sleep|Sort|SoundBeep|SoundGet|SoundGetWaveVolume|SoundPlay|SoundSet|SoundSetWaveVolume|SplashImage|SplashTextOff|SplashTextOn|SplitPath|StatusBarGetText|StatusBarWait|StringCaseSense|StringGetPos|StringLeft|StringLen|StringLower|StringMid|StringReplace|StringRight|StringSplit|StringTrimLeft|StringTrimRight|StringUpper|Suspend|SysGet|Thread|ToolTip|Transform|TrayTip|URLDownloadToFile|WinActivate|WinActivateBottom|WinClose|WinGet|WinGetActiveStats|WinGetActiveTitle|WinGetClass|WinGetPos|WinGetText|WinGetTitle|WinHide|WinKill|WinMaximize|WinMenuSelectItem|WinMinimize|WinMinimizeAll|WinMinimizeAllUndo|WinMove|WinRestore|WinSet|WinSetTitle|WinShow|WinWait|WinWaitActive|WinWaitClose|WinWaitNotActive)\\b/i,\n    constant: /\\b(?:a_ahkpath|a_ahkversion|a_appdata|a_appdatacommon|a_autotrim|a_batchlines|a_caretx|a_carety|a_computername|a_controldelay|a_cursor|a_dd|a_ddd|a_dddd|a_defaultmousespeed|a_desktop|a_desktopcommon|a_detecthiddentext|a_detecthiddenwindows|a_endchar|a_eventinfo|a_exitreason|a_formatfloat|a_formatinteger|a_gui|a_guievent|a_guicontrol|a_guicontrolevent|a_guiheight|a_guiwidth|a_guix|a_guiy|a_hour|a_iconfile|a_iconhidden|a_iconnumber|a_icontip|a_index|a_ipaddress1|a_ipaddress2|a_ipaddress3|a_ipaddress4|a_isadmin|a_iscompiled|a_iscritical|a_ispaused|a_issuspended|a_isunicode|a_keydelay|a_language|a_lasterror|a_linefile|a_linenumber|a_loopfield|a_loopfileattrib|a_loopfiledir|a_loopfileext|a_loopfilefullpath|a_loopfilelongpath|a_loopfilename|a_loopfileshortname|a_loopfileshortpath|a_loopfilesize|a_loopfilesizekb|a_loopfilesizemb|a_loopfiletimeaccessed|a_loopfiletimecreated|a_loopfiletimemodified|a_loopreadline|a_loopregkey|a_loopregname|a_loopregsubkey|a_loopregtimemodified|a_loopregtype|a_mday|a_min|a_mm|a_mmm|a_mmmm|a_mon|a_mousedelay|a_msec|a_mydocuments|a_now|a_nowutc|a_numbatchlines|a_ostype|a_osversion|a_priorhotkey|programfiles|a_programfiles|a_programs|a_programscommon|a_screenheight|a_screenwidth|a_scriptdir|a_scriptfullpath|a_scriptname|a_sec|a_space|a_startmenu|a_startmenucommon|a_startup|a_startupcommon|a_stringcasesense|a_tab|a_temp|a_thisfunc|a_thishotkey|a_thislabel|a_thismenu|a_thismenuitem|a_thismenuitempos|a_tickcount|a_timeidle|a_timeidlephysical|a_timesincepriorhotkey|a_timesincethishotkey|a_titlematchmode|a_titlematchmodespeed|a_username|a_wday|a_windelay|a_windir|a_workingdir|a_yday|a_year|a_yweek|a_yyyy|clipboard|clipboardall|comspec|errorlevel)\\b/i,\n    builtin: /\\b(?:abs|acos|asc|asin|atan|ceil|chr|class|cos|dllcall|exp|fileexist|Fileopen|floor|il_add|il_create|il_destroy|instr|substr|isfunc|islabel|IsObject|ln|log|lv_add|lv_delete|lv_deletecol|lv_getcount|lv_getnext|lv_gettext|lv_insert|lv_insertcol|lv_modify|lv_modifycol|lv_setimagelist|mod|onmessage|numget|numput|registercallback|regexmatch|regexreplace|round|sin|tan|sqrt|strlen|sb_seticon|sb_setparts|sb_settext|strsplit|tv_add|tv_delete|tv_getchild|tv_getcount|tv_getnext|tv_get|tv_getparent|tv_getprev|tv_getselection|tv_gettext|tv_modify|varsetcapacity|winactive|winexist|__New|__Call|__Get|__Set)\\b/i,\n    symbol: /\\b(?:alt|altdown|altup|appskey|backspace|browser_back|browser_favorites|browser_forward|browser_home|browser_refresh|browser_search|browser_stop|bs|capslock|ctrl|ctrlbreak|ctrldown|ctrlup|del|delete|down|end|enter|esc|escape|f1|f10|f11|f12|f13|f14|f15|f16|f17|f18|f19|f2|f20|f21|f22|f23|f24|f3|f4|f5|f6|f7|f8|f9|home|ins|insert|joy1|joy10|joy11|joy12|joy13|joy14|joy15|joy16|joy17|joy18|joy19|joy2|joy20|joy21|joy22|joy23|joy24|joy25|joy26|joy27|joy28|joy29|joy3|joy30|joy31|joy32|joy4|joy5|joy6|joy7|joy8|joy9|joyaxes|joybuttons|joyinfo|joyname|joypov|joyr|joyu|joyv|joyx|joyy|joyz|lalt|launch_app1|launch_app2|launch_mail|launch_media|lbutton|lcontrol|lctrl|left|lshift|lwin|lwindown|lwinup|mbutton|media_next|media_play_pause|media_prev|media_stop|numlock|numpad0|numpad1|numpad2|numpad3|numpad4|numpad5|numpad6|numpad7|numpad8|numpad9|numpadadd|numpadclear|numpaddel|numpaddiv|numpaddot|numpaddown|numpadend|numpadenter|numpadhome|numpadins|numpadleft|numpadmult|numpadpgdn|numpadpgup|numpadright|numpadsub|numpadup|pgdn|pgup|printscreen|ralt|rbutton|rcontrol|rctrl|right|rshift|rwin|rwindown|rwinup|scrolllock|shift|shiftdown|shiftup|space|tab|up|volume_down|volume_mute|volume_up|wheeldown|wheelleft|wheelright|wheelup|xbutton1|xbutton2)\\b/i,\n    important: /#\\b(?:AllowSameLineComments|ClipboardTimeout|CommentFlag|ErrorStdOut|EscapeChar|HotkeyInterval|HotkeyModifierTimeout|Hotstring|IfWinActive|IfWinExist|IfWinNotActive|IfWinNotExist|Include|IncludeAgain|InstallKeybdHook|InstallMouseHook|KeyHistory|LTrim|MaxHotkeysPerInterval|MaxMem|MaxThreads|MaxThreadsBuffer|MaxThreadsPerHotkey|NoEnv|NoTrayIcon|Persistent|SingleInstance|UseHook|WinActivateForce)\\b/i,\n    keyword: /\\b(?:Abort|AboveNormal|Add|ahk_class|ahk_group|ahk_id|ahk_pid|All|Alnum|Alpha|AltSubmit|AltTab|AltTabAndMenu|AltTabMenu|AltTabMenuDismiss|AlwaysOnTop|AutoSize|Background|BackgroundTrans|BelowNormal|between|BitAnd|BitNot|BitOr|BitShiftLeft|BitShiftRight|BitXOr|Bold|Border|Button|ByRef|Checkbox|Checked|CheckedGray|Choose|ChooseString|Close|Color|ComboBox|Contains|ControlList|Count|Date|DateTime|Days|DDL|Default|DeleteAll|Delimiter|Deref|Destroy|Digit|Disable|Disabled|DropDownList|Edit|Eject|Else|Enable|Enabled|Error|Exist|Expand|ExStyle|FileSystem|First|Flash|Float|FloatFast|Focus|Font|for|global|Grid|Group|GroupBox|GuiClose|GuiContextMenu|GuiDropFiles|GuiEscape|GuiSize|Hdr|Hidden|Hide|High|HKCC|HKCR|HKCU|HKEY_CLASSES_ROOT|HKEY_CURRENT_CONFIG|HKEY_CURRENT_USER|HKEY_LOCAL_MACHINE|HKEY_USERS|HKLM|HKU|Hours|HScroll|Icon|IconSmall|ID|IDLast|If|IfEqual|IfExist|IfGreater|IfGreaterOrEqual|IfInString|IfLess|IfLessOrEqual|IfMsgBox|IfNotEqual|IfNotExist|IfNotInString|IfWinActive|IfWinExist|IfWinNotActive|IfWinNotExist|Ignore|ImageList|in|Integer|IntegerFast|Interrupt|is|italic|Join|Label|LastFound|LastFoundExist|Limit|Lines|List|ListBox|ListView|local|Lock|Logoff|Low|Lower|Lowercase|MainWindow|Margin|Maximize|MaximizeBox|MaxSize|Minimize|MinimizeBox|MinMax|MinSize|Minutes|MonthCal|Mouse|Move|Multi|NA|No|NoActivate|NoDefault|NoHide|NoIcon|NoMainWindow|norm|Normal|NoSort|NoSortHdr|NoStandard|Not|NoTab|NoTimers|Number|Off|Ok|On|OwnDialogs|Owner|Parse|Password|Picture|Pixel|Pos|Pow|Priority|ProcessName|Radio|Range|Read|ReadOnly|Realtime|Redraw|REG_BINARY|REG_DWORD|REG_EXPAND_SZ|REG_MULTI_SZ|REG_SZ|Region|Relative|Rename|Report|Resize|Restore|Retry|RGB|Screen|Seconds|Section|Serial|SetLabel|ShiftAltTab|Show|Single|Slider|SortDesc|Standard|static|Status|StatusBar|StatusCD|strike|Style|Submit|SysMenu|Tab2|TabStop|Text|Theme|Tile|ToggleCheck|ToggleEnable|ToolWindow|Top|Topmost|TransColor|Transparent|Tray|TreeView|TryAgain|Type|UnCheck|underline|Unicode|Unlock|UpDown|Upper|Uppercase|UseErrorLevel|Vis|VisFirst|Visible|VScroll|Wait|WaitClose|WantCtrlA|WantF2|WantReturn|While|Wrap|Xdigit|xm|xp|xs|Yes|ym|yp|ys)\\b/i\n  };\n}","'use strict';\n\nmodule.exports = autoit;\nautoit.displayName = 'autoit';\nautoit.aliases = [];\n\nfunction autoit(Prism) {\n  Prism.languages.autoit = {\n    comment: [/;.*/, {\n      // The multi-line comments delimiters can actually be commented out with \";\"\n      pattern: /(^\\s*)#(?:comments-start|cs)[\\s\\S]*?^\\s*#(?:comments-end|ce)/m,\n      lookbehind: true\n    }],\n    url: {\n      pattern: /(^\\s*#include\\s+)(?:<[^\\r\\n>]+>|\"[^\\r\\n\"]+\")/m,\n      lookbehind: true\n    },\n    string: {\n      pattern: /([\"'])(?:\\1\\1|(?!\\1)[^\\r\\n])*\\1/,\n      greedy: true,\n      inside: {\n        variable: /([%$@])\\w+\\1/\n      }\n    },\n    directive: {\n      pattern: /(^\\s*)#\\w+/m,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    function: /\\b\\w+(?=\\()/,\n    // Variables and macros\n    variable: /[$@]\\w+/,\n    keyword: /\\b(?:Case|Const|Continue(?:Case|Loop)|Default|Dim|Do|Else(?:If)?|End(?:Func|If|Select|Switch|With)|Enum|Exit(?:Loop)?|For|Func|Global|If|In|Local|Next|Null|ReDim|Select|Static|Step|Switch|Then|To|Until|Volatile|WEnd|While|With)\\b/i,\n    number: /\\b(?:0x[\\da-f]+|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b/i,\n    boolean: /\\b(?:True|False)\\b/i,\n    operator: /<[=>]?|[-+*\\/=&>]=?|[?^]|\\b(?:And|Or|Not)\\b/i,\n    punctuation: /[\\[\\]().,:]/\n  };\n}","'use strict';\n\nmodule.exports = bash;\nbash.displayName = 'bash';\nbash.aliases = ['shell'];\n\nfunction bash(Prism) {\n  ;\n\n  (function (Prism) {\n    var insideString = {\n      variable: [// Arithmetic Environment\n      {\n        pattern: /\\$?\\(\\([\\s\\S]+?\\)\\)/,\n        inside: {\n          // If there is a $ sign at the beginning highlight $(( and )) as variable\n          variable: [{\n            pattern: /(^\\$\\(\\([\\s\\S]+)\\)\\)/,\n            lookbehind: true\n          }, /^\\$\\(\\(/],\n          number: /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n          // Operators according to https://www.gnu.org/software/bash/manual/bashref.html#Shell-Arithmetic\n          operator: /--?|-=|\\+\\+?|\\+=|!=?|~|\\*\\*?|\\*=|\\/=?|%=?|<<=?|>>=?|<=?|>=?|==?|&&?|&=|\\^=?|\\|\\|?|\\|=|\\?|:/,\n          // If there is no $ sign at the beginning highlight (( and )) as punctuation\n          punctuation: /\\(\\(?|\\)\\)?|,|;/\n        }\n      }, // Command Substitution\n      {\n        pattern: /\\$\\([^)]+\\)|`[^`]+`/,\n        greedy: true,\n        inside: {\n          variable: /^\\$\\(|^`|\\)$|`$/\n        }\n      }, /\\$(?:[\\w#?*!@]+|\\{[^}]+\\})/i]\n    };\n    Prism.languages.bash = {\n      shebang: {\n        pattern: /^#!\\s*\\/bin\\/bash|^#!\\s*\\/bin\\/sh/,\n        alias: 'important'\n      },\n      comment: {\n        pattern: /(^|[^\"{\\\\])#.*/,\n        lookbehind: true\n      },\n      string: [//Support for Here-Documents https://en.wikipedia.org/wiki/Here_document\n      {\n        pattern: /((?:^|[^<])<<\\s*)[\"']?(\\w+?)[\"']?\\s*\\r?\\n(?:[\\s\\S])*?\\r?\\n\\2/,\n        lookbehind: true,\n        greedy: true,\n        inside: insideString\n      }, {\n        pattern: /([\"'])(?:\\\\[\\s\\S]|\\$\\([^)]+\\)|`[^`]+`|(?!\\1)[^\\\\])*\\1/,\n        greedy: true,\n        inside: insideString\n      }],\n      variable: insideString.variable,\n      // Originally based on http://ss64.com/bash/\n      function: {\n        pattern: /(^|[\\s;|&])(?:alias|apropos|apt-get|aptitude|aspell|awk|basename|bash|bc|bg|builtin|bzip2|cal|cat|cd|cfdisk|chgrp|chmod|chown|chroot|chkconfig|cksum|clear|cmp|comm|command|cp|cron|crontab|csplit|curl|cut|date|dc|dd|ddrescue|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|du|egrep|eject|enable|env|ethtool|eval|exec|expand|expect|export|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|getopts|git|grep|groupadd|groupdel|groupmod|groups|gzip|hash|head|help|hg|history|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|jobs|join|kill|killall|less|link|ln|locate|logname|logout|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|make|man|mkdir|mkfifo|mkisofs|mknod|more|most|mount|mtools|mtr|mv|mmv|nano|netstat|nice|nl|nohup|notify-send|npm|nslookup|open|op|passwd|paste|pathchk|ping|pkill|popd|pr|printcap|printenv|printf|ps|pushd|pv|pwd|quota|quotacheck|quotactl|ram|rar|rcp|read|readarray|readonly|reboot|rename|renice|remsync|rev|rm|rmdir|rsync|screen|scp|sdiff|sed|seq|service|sftp|shift|shopt|shutdown|sleep|slocate|sort|source|split|ssh|stat|strace|su|sudo|sum|suspend|sync|tail|tar|tee|test|time|timeout|times|touch|top|traceroute|trap|tr|tsort|tty|type|ulimit|umask|umount|unalias|uname|unexpand|uniq|units|unrar|unshar|uptime|useradd|userdel|usermod|users|uuencode|uudecode|v|vdir|vi|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yes|zip)(?=$|[\\s;|&])/,\n        lookbehind: true\n      },\n      keyword: {\n        pattern: /(^|[\\s;|&])(?:let|:|\\.|if|then|else|elif|fi|for|break|continue|while|in|case|function|select|do|done|until|echo|exit|return|set|declare)(?=$|[\\s;|&])/,\n        lookbehind: true\n      },\n      boolean: {\n        pattern: /(^|[\\s;|&])(?:true|false)(?=$|[\\s;|&])/,\n        lookbehind: true\n      },\n      operator: /&&?|\\|\\|?|==?|!=?|<<<?|>>|<=?|>=?|=~/,\n      punctuation: /\\$?\\(\\(?|\\)\\)?|\\.\\.|[{}[\\];]/\n    };\n    var inside = insideString.variable[1].inside;\n    inside.string = Prism.languages.bash.string;\n    inside['function'] = Prism.languages.bash['function'];\n    inside.keyword = Prism.languages.bash.keyword;\n    inside['boolean'] = Prism.languages.bash['boolean'];\n    inside.operator = Prism.languages.bash.operator;\n    inside.punctuation = Prism.languages.bash.punctuation;\n    Prism.languages.shell = Prism.languages.bash;\n  })(Prism);\n}","'use strict';\n\nmodule.exports = batch;\nbatch.displayName = 'batch';\nbatch.aliases = [];\n\nfunction batch(Prism) {\n  ;\n\n  (function (Prism) {\n    var variable = /%%?[~:\\w]+%?|!\\S+!/;\n    var parameter = {\n      pattern: /\\/[a-z?]+(?=[ :]|$):?|-[a-z]\\b|--[a-z-]+\\b/im,\n      alias: 'attr-name',\n      inside: {\n        punctuation: /:/\n      }\n    };\n    var string = /\"[^\"]*\"/;\n    var number = /(?:\\b|-)\\d+\\b/;\n    Prism.languages.batch = {\n      comment: [/^::.*/m, {\n        pattern: /((?:^|[&(])[ \\t]*)rem\\b(?:[^^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,\n        lookbehind: true\n      }],\n      label: {\n        pattern: /^:.*/m,\n        alias: 'property'\n      },\n      command: [{\n        // FOR command\n        pattern: /((?:^|[&(])[ \\t]*)for(?: ?\\/[a-z?](?:[ :](?:\"[^\"]*\"|\\S+))?)* \\S+ in \\([^)]+\\) do/im,\n        lookbehind: true,\n        inside: {\n          keyword: /^for\\b|\\b(?:in|do)\\b/i,\n          string: string,\n          parameter: parameter,\n          variable: variable,\n          number: number,\n          punctuation: /[()',]/\n        }\n      }, {\n        // IF command\n        pattern: /((?:^|[&(])[ \\t]*)if(?: ?\\/[a-z?](?:[ :](?:\"[^\"]*\"|\\S+))?)* (?:not )?(?:cmdextversion \\d+|defined \\w+|errorlevel \\d+|exist \\S+|(?:\"[^\"]*\"|\\S+)?(?:==| (?:equ|neq|lss|leq|gtr|geq) )(?:\"[^\"]*\"|\\S+))/im,\n        lookbehind: true,\n        inside: {\n          keyword: /^if\\b|\\b(?:not|cmdextversion|defined|errorlevel|exist)\\b/i,\n          string: string,\n          parameter: parameter,\n          variable: variable,\n          number: number,\n          operator: /\\^|==|\\b(?:equ|neq|lss|leq|gtr|geq)\\b/i\n        }\n      }, {\n        // ELSE command\n        pattern: /((?:^|[&()])[ \\t]*)else\\b/im,\n        lookbehind: true,\n        inside: {\n          keyword: /^else\\b/i\n        }\n      }, {\n        // SET command\n        pattern: /((?:^|[&(])[ \\t]*)set(?: ?\\/[a-z](?:[ :](?:\"[^\"]*\"|\\S+))?)* (?:[^^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,\n        lookbehind: true,\n        inside: {\n          keyword: /^set\\b/i,\n          string: string,\n          parameter: parameter,\n          variable: [variable, /\\w+(?=(?:[*\\/%+\\-&^|]|<<|>>)?=)/],\n          number: number,\n          operator: /[*\\/%+\\-&^|]=?|<<=?|>>=?|[!~_=]/,\n          punctuation: /[()',]/\n        }\n      }, {\n        // Other commands\n        pattern: /((?:^|[&(])[ \\t]*@?)\\w+\\b(?:[^^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,\n        lookbehind: true,\n        inside: {\n          keyword: /^\\w+\\b/i,\n          string: string,\n          parameter: parameter,\n          label: {\n            pattern: /(^\\s*):\\S+/m,\n            lookbehind: true,\n            alias: 'property'\n          },\n          variable: variable,\n          number: number,\n          operator: /\\^/\n        }\n      }],\n      operator: /[&@]/,\n      punctuation: /[()']/\n    };\n  })(Prism);\n}","'use strict';\n\nvar refractorC = require('./c.js');\n\nmodule.exports = bison;\nbison.displayName = 'bison';\nbison.aliases = [];\n\nfunction bison(Prism) {\n  Prism.register(refractorC);\n  Prism.languages.bison = Prism.languages.extend('c', {});\n  Prism.languages.insertBefore('bison', 'comment', {\n    bison: {\n      // This should match all the beginning of the file\n      // including the prologue(s), the bison declarations and\n      // the grammar rules.\n      pattern: /^[\\s\\S]*?%%[\\s\\S]*?%%/,\n      inside: {\n        c: {\n          // Allow for one level of nested braces\n          pattern: /%\\{[\\s\\S]*?%\\}|\\{(?:\\{[^}]*\\}|[^{}])*\\}/,\n          inside: {\n            delimiter: {\n              pattern: /^%?\\{|%?\\}$/,\n              alias: 'punctuation'\n            },\n            'bison-variable': {\n              pattern: /[$@](?:<[^\\s>]+>)?[\\w$]+/,\n              alias: 'variable',\n              inside: {\n                punctuation: /<|>/\n              }\n            },\n            rest: Prism.languages.c\n          }\n        },\n        comment: Prism.languages.c.comment,\n        string: Prism.languages.c.string,\n        property: /\\S+(?=:)/,\n        keyword: /%\\w+/,\n        number: {\n          pattern: /(^|[^@])\\b(?:0x[\\da-f]+|\\d+)/i,\n          lookbehind: true\n        },\n        punctuation: /%[%?]|[|:;\\[\\]<>]/\n      }\n    }\n  });\n}","'use strict';\n\nmodule.exports = brainfuck;\nbrainfuck.displayName = 'brainfuck';\nbrainfuck.aliases = [];\n\nfunction brainfuck(Prism) {\n  Prism.languages.brainfuck = {\n    pointer: {\n      pattern: /<|>/,\n      alias: 'keyword'\n    },\n    increment: {\n      pattern: /\\+/,\n      alias: 'inserted'\n    },\n    decrement: {\n      pattern: /-/,\n      alias: 'deleted'\n    },\n    branching: {\n      pattern: /\\[|\\]/,\n      alias: 'important'\n    },\n    operator: /[.,]/,\n    comment: /\\S+/\n  };\n}","'use strict';\n\nmodule.exports = bro;\nbro.displayName = 'bro';\nbro.aliases = [];\n\nfunction bro(Prism) {\n  Prism.languages.bro = {\n    comment: {\n      pattern: /(^|[^\\\\$])#.*/,\n      lookbehind: true,\n      inside: {\n        italic: /\\b(?:TODO|FIXME|XXX)\\b/\n      }\n    },\n    string: {\n      pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    boolean: /\\b[TF]\\b/,\n    function: {\n      pattern: /(?:function|hook|event) \\w+(?:::\\w+)?/,\n      inside: {\n        keyword: /^(?:function|hook|event)/\n      }\n    },\n    variable: {\n      pattern: /(?:global|local) \\w+/i,\n      inside: {\n        keyword: /(?:global|local)/\n      }\n    },\n    builtin: /(?:@(?:load(?:-(?:sigs|plugin))?|unload|prefixes|ifn?def|else|(?:end)?if|DIR|FILENAME))|(?:&?(?:redef|priority|log|optional|default|add_func|delete_func|expire_func|read_expire|write_expire|create_expire|synchronized|persistent|rotate_interval|rotate_size|encrypt|raw_output|mergeable|group|error_handler|type_column))/,\n    constant: {\n      pattern: /const \\w+/i,\n      inside: {\n        keyword: /const/\n      }\n    },\n    keyword: /\\b(?:break|next|continue|alarm|using|of|add|delete|export|print|return|schedule|when|timeout|addr|any|bool|count|double|enum|file|int|interval|pattern|opaque|port|record|set|string|subnet|table|time|vector|for|if|else|in|module|function)\\b/,\n    operator: /--?|\\+\\+?|!=?=?|<=?|>=?|==?=?|&&|\\|\\|?|\\?|\\*|\\/|~|\\^|%/,\n    number: /\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n    punctuation: /[{}[\\];(),.:]/\n  };\n}","'use strict';\n\nmodule.exports = clojure;\nclojure.displayName = 'clojure';\nclojure.aliases = [];\n\nfunction clojure(Prism) {\n  // Copied from https://github.com/jeluard/prism-clojure\n  Prism.languages.clojure = {\n    comment: /;+.*/,\n    string: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n    operator: /(?:::|[:|'])\\b[a-z][\\w*+!?-]*\\b/i,\n    //used for symbols and keywords\n    keyword: {\n      pattern: /([^\\w+*'?-])(?:def|if|do|let|\\.\\.|quote|var|->>|->|fn|loop|recur|throw|try|monitor-enter|\\.|new|set!|def\\-|defn|defn\\-|defmacro|defmulti|defmethod|defstruct|defonce|declare|definline|definterface|defprotocol|==|defrecord|>=|deftype|<=|defproject|ns|\\*|\\+|\\-|\\/|<|=|>|accessor|agent|agent-errors|aget|alength|all-ns|alter|and|append-child|apply|array-map|aset|aset-boolean|aset-byte|aset-char|aset-double|aset-float|aset-int|aset-long|aset-short|assert|assoc|await|await-for|bean|binding|bit-and|bit-not|bit-or|bit-shift-left|bit-shift-right|bit-xor|boolean|branch\\?|butlast|byte|cast|char|children|class|clear-agent-errors|comment|commute|comp|comparator|complement|concat|conj|cons|constantly|cond|if-not|construct-proxy|contains\\?|count|create-ns|create-struct|cycle|dec|deref|difference|disj|dissoc|distinct|doall|doc|dorun|doseq|dosync|dotimes|doto|double|down|drop|drop-while|edit|end\\?|ensure|eval|every\\?|false\\?|ffirst|file-seq|filter|find|find-doc|find-ns|find-var|first|float|flush|for|fnseq|frest|gensym|get-proxy-class|get|hash-map|hash-set|identical\\?|identity|if-let|import|in-ns|inc|index|insert-child|insert-left|insert-right|inspect-table|inspect-tree|instance\\?|int|interleave|intersection|into|into-array|iterate|join|key|keys|keyword|keyword\\?|last|lazy-cat|lazy-cons|left|lefts|line-seq|list\\*|list|load|load-file|locking|long|loop|macroexpand|macroexpand-1|make-array|make-node|map|map-invert|map\\?|mapcat|max|max-key|memfn|merge|merge-with|meta|min|min-key|name|namespace|neg\\?|new|newline|next|nil\\?|node|not|not-any\\?|not-every\\?|not=|ns-imports|ns-interns|ns-map|ns-name|ns-publics|ns-refers|ns-resolve|ns-unmap|nth|nthrest|or|parse|partial|path|peek|pop|pos\\?|pr|pr-str|print|print-str|println|println-str|prn|prn-str|project|proxy|proxy-mappings|quot|rand|rand-int|range|re-find|re-groups|re-matcher|re-matches|re-pattern|re-seq|read|read-line|reduce|ref|ref-set|refer|rem|remove|remove-method|remove-ns|rename|rename-keys|repeat|replace|replicate|resolve|rest|resultset-seq|reverse|rfirst|right|rights|root|rrest|rseq|second|select|select-keys|send|send-off|seq|seq-zip|seq\\?|set|short|slurp|some|sort|sort-by|sorted-map|sorted-map-by|sorted-set|special-symbol\\?|split-at|split-with|str|string\\?|struct|struct-map|subs|subvec|symbol|symbol\\?|sync|take|take-nth|take-while|test|time|to-array|to-array-2d|tree-seq|true\\?|union|up|update-proxy|val|vals|var-get|var-set|var\\?|vector|vector-zip|vector\\?|when|when-first|when-let|when-not|with-local-vars|with-meta|with-open|with-out-str|xml-seq|xml-zip|zero\\?|zipmap|zipper)(?=[^\\w+*'?-])/,\n      lookbehind: true\n    },\n    boolean: /\\b(?:true|false|nil)\\b/,\n    number: /\\b[0-9A-Fa-f]+\\b/,\n    punctuation: /[{}\\[\\](),]/\n  };\n}","'use strict';\n\nmodule.exports = coffeescript;\ncoffeescript.displayName = 'coffeescript';\ncoffeescript.aliases = [];\n\nfunction coffeescript(Prism) {\n  ;\n\n  (function (Prism) {\n    // Ignore comments starting with { to privilege string interpolation highlighting\n    var comment = /#(?!\\{).+/,\n        interpolation = {\n      pattern: /#\\{[^}]+\\}/,\n      alias: 'variable'\n    };\n    Prism.languages.coffeescript = Prism.languages.extend('javascript', {\n      comment: comment,\n      string: [// Strings are multiline\n      {\n        pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n        greedy: true\n      }, {\n        // Strings are multiline\n        pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n        greedy: true,\n        inside: {\n          interpolation: interpolation\n        }\n      }],\n      keyword: /\\b(?:and|break|by|catch|class|continue|debugger|delete|do|each|else|extend|extends|false|finally|for|if|in|instanceof|is|isnt|let|loop|namespace|new|no|not|null|of|off|on|or|own|return|super|switch|then|this|throw|true|try|typeof|undefined|unless|until|when|while|window|with|yes|yield)\\b/,\n      'class-member': {\n        pattern: /@(?!\\d)\\w+/,\n        alias: 'variable'\n      }\n    });\n    Prism.languages.insertBefore('coffeescript', 'comment', {\n      'multiline-comment': {\n        pattern: /###[\\s\\S]+?###/,\n        alias: 'comment'\n      },\n      // Block regexp can contain comments and interpolation\n      'block-regex': {\n        pattern: /\\/{3}[\\s\\S]*?\\/{3}/,\n        alias: 'regex',\n        inside: {\n          comment: comment,\n          interpolation: interpolation\n        }\n      }\n    });\n    Prism.languages.insertBefore('coffeescript', 'string', {\n      'inline-javascript': {\n        pattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/,\n        inside: {\n          delimiter: {\n            pattern: /^`|`$/,\n            alias: 'punctuation'\n          },\n          rest: Prism.languages.javascript\n        }\n      },\n      // Block strings\n      'multiline-string': [{\n        pattern: /'''[\\s\\S]*?'''/,\n        greedy: true,\n        alias: 'string'\n      }, {\n        pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n        greedy: true,\n        alias: 'string',\n        inside: {\n          interpolation: interpolation\n        }\n      }]\n    });\n    Prism.languages.insertBefore('coffeescript', 'keyword', {\n      // Object property\n      property: /(?!\\d)\\w+(?=\\s*:(?!:))/\n    });\n    delete Prism.languages.coffeescript['template-string'];\n  })(Prism);\n}","'use strict';\n\nvar refractorRuby = require('./ruby.js');\n\nmodule.exports = crystal;\ncrystal.displayName = 'crystal';\ncrystal.aliases = [];\n\nfunction crystal(Prism) {\n  Prism.register(refractorRuby);\n\n  (function (Prism) {\n    Prism.languages.crystal = Prism.languages.extend('ruby', {\n      keyword: [/\\b(?:abstract|alias|as|asm|begin|break|case|class|def|do|else|elsif|end|ensure|enum|extend|for|fun|if|include|instance_sizeof|lib|macro|module|next|of|out|pointerof|private|protected|rescue|return|require|select|self|sizeof|struct|super|then|type|typeof|uninitialized|union|unless|until|when|while|with|yield|__DIR__|__END_LINE__|__FILE__|__LINE__)\\b/, {\n        pattern: /(\\.\\s*)(?:is_a|responds_to)\\?/,\n        lookbehind: true\n      }],\n      number: /\\b(?:0b[01_]*[01]|0o[0-7_]*[0-7]|0x[\\da-fA-F_]*[\\da-fA-F]|(?:\\d(?:[\\d_]*\\d)?)(?:\\.[\\d_]*\\d)?(?:[eE][+-]?[\\d_]*\\d)?)(?:_(?:[uif](?:8|16|32|64))?)?\\b/\n    });\n    Prism.languages.insertBefore('crystal', 'string', {\n      attribute: {\n        pattern: /@\\[.+?\\]/,\n        alias: 'attr-name',\n        inside: {\n          delimiter: {\n            pattern: /^@\\[|\\]$/,\n            alias: 'tag'\n          },\n          rest: Prism.languages.crystal\n        }\n      },\n      expansion: [{\n        pattern: /\\{\\{.+?\\}\\}/,\n        inside: {\n          delimiter: {\n            pattern: /^\\{\\{|\\}\\}$/,\n            alias: 'tag'\n          },\n          rest: Prism.languages.crystal\n        }\n      }, {\n        pattern: /\\{%.+?%\\}/,\n        inside: {\n          delimiter: {\n            pattern: /^\\{%|%\\}$/,\n            alias: 'tag'\n          },\n          rest: Prism.languages.crystal\n        }\n      }]\n    });\n  })(Prism);\n}","'use strict';\n\nmodule.exports = csharp;\ncsharp.displayName = 'csharp';\ncsharp.aliases = ['dotnet'];\n\nfunction csharp(Prism) {\n  Prism.languages.csharp = Prism.languages.extend('clike', {\n    keyword: /\\b(?:abstract|add|alias|as|ascending|async|await|base|bool|break|byte|case|catch|char|checked|class|const|continue|decimal|default|delegate|descending|do|double|dynamic|else|enum|event|explicit|extern|false|finally|fixed|float|for|foreach|from|get|global|goto|group|if|implicit|in|int|interface|internal|into|is|join|let|lock|long|namespace|new|null|object|operator|orderby|out|override|params|partial|private|protected|public|readonly|ref|remove|return|sbyte|sealed|select|set|short|sizeof|stackalloc|static|string|struct|switch|this|throw|true|try|typeof|uint|ulong|unchecked|unsafe|ushort|using|value|var|virtual|void|volatile|where|while|yield)\\b/,\n    string: [{\n      pattern: /@(\"|')(?:\\1\\1|\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n      greedy: true\n    }, {\n      pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*?\\1/,\n      greedy: true\n    }],\n    'class-name': [{\n      // (Foo bar, Bar baz)\n      pattern: /\\b[A-Z]\\w*(?:\\.\\w+)*\\b(?=\\s+\\w+)/,\n      inside: {\n        punctuation: /\\./\n      }\n    }, {\n      // [Foo]\n      pattern: /(\\[)[A-Z]\\w*(?:\\.\\w+)*\\b/,\n      lookbehind: true,\n      inside: {\n        punctuation: /\\./\n      }\n    }, {\n      // class Foo : Bar\n      pattern: /(\\b(?:class|interface)\\s+[A-Z]\\w*(?:\\.\\w+)*\\s*:\\s*)[A-Z]\\w*(?:\\.\\w+)*\\b/,\n      lookbehind: true,\n      inside: {\n        punctuation: /\\./\n      }\n    }, {\n      // class Foo\n      pattern: /((?:\\b(?:class|interface|new)\\s+)|(?:catch\\s+\\())[A-Z]\\w*(?:\\.\\w+)*\\b/,\n      lookbehind: true,\n      inside: {\n        punctuation: /\\./\n      }\n    }],\n    number: /\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)f?/i\n  });\n  Prism.languages.insertBefore('csharp', 'class-name', {\n    'generic-method': {\n      pattern: /\\w+\\s*<[^>\\r\\n]+?>\\s*(?=\\()/,\n      inside: {\n        function: /^\\w+/,\n        'class-name': {\n          pattern: /\\b[A-Z]\\w*(?:\\.\\w+)*\\b/,\n          inside: {\n            punctuation: /\\./\n          }\n        },\n        keyword: Prism.languages.csharp.keyword,\n        punctuation: /[<>(),.:]/\n      }\n    },\n    preprocessor: {\n      pattern: /(^\\s*)#.*/m,\n      lookbehind: true,\n      alias: 'property',\n      inside: {\n        // highlight preprocessor directives as keywords\n        directive: {\n          pattern: /(\\s*#)\\b(?:define|elif|else|endif|endregion|error|if|line|pragma|region|undef|warning)\\b/,\n          lookbehind: true,\n          alias: 'keyword'\n        }\n      }\n    }\n  });\n  Prism.languages.dotnet = Prism.languages.csharp;\n}","'use strict';\n\nmodule.exports = csp;\ncsp.displayName = 'csp';\ncsp.aliases = [];\n\nfunction csp(Prism) {\n  /**\n   * Original by Scott Helme.\n   *\n   * Reference: https://scotthelme.co.uk/csp-cheat-sheet/\n   *\n   * Supports the following:\n   *  - CSP Level 1\n   *  - CSP Level 2\n   *  - CSP Level 3\n   */\n  Prism.languages.csp = {\n    directive: {\n      pattern: /\\b(?:(?:base-uri|form-action|frame-ancestors|plugin-types|referrer|reflected-xss|report-to|report-uri|require-sri-for|sandbox) |(?:block-all-mixed-content|disown-opener|upgrade-insecure-requests)(?: |;)|(?:child|connect|default|font|frame|img|manifest|media|object|script|style|worker)-src )/i,\n      alias: 'keyword'\n    },\n    safe: {\n      pattern: /'(?:self|none|strict-dynamic|(?:nonce-|sha(?:256|384|512)-)[a-zA-Z\\d+=/]+)'/,\n      alias: 'selector'\n    },\n    unsafe: {\n      pattern: /(?:'unsafe-inline'|'unsafe-eval'|'unsafe-hashed-attributes'|\\*)/,\n      alias: 'function'\n    }\n  };\n}","'use strict';\n\nmodule.exports = cssExtras;\ncssExtras.displayName = 'cssExtras';\ncssExtras.aliases = [];\n\nfunction cssExtras(Prism) {\n  Prism.languages.css.selector = {\n    pattern: /[^{}\\s][^{}]*(?=\\s*\\{)/,\n    inside: {\n      'pseudo-element': /:(?:after|before|first-letter|first-line|selection)|::[-\\w]+/,\n      'pseudo-class': /:[-\\w]+(?:\\(.*\\))?/,\n      class: /\\.[-:.\\w]+/,\n      id: /#[-:.\\w]+/,\n      attribute: /\\[[^\\]]+\\]/\n    }\n  };\n  Prism.languages.insertBefore('css', 'function', {\n    hexcode: /#[\\da-f]{3,8}/i,\n    entity: /\\\\[\\da-f]{1,8}/i,\n    number: /[\\d%.]+/\n  });\n}","'use strict';\n\nmodule.exports = d;\nd.displayName = 'd';\nd.aliases = [];\n\nfunction d(Prism) {\n  Prism.languages.d = Prism.languages.extend('clike', {\n    string: [// r\"\", x\"\"\n    /\\b[rx]\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"[cwd]?/, // q\"[]\", q\"()\", q\"<>\", q\"{}\"\n    /\\bq\"(?:\\[[\\s\\S]*?\\]|\\([\\s\\S]*?\\)|<[\\s\\S]*?>|\\{[\\s\\S]*?\\})\"/, // q\"IDENT\n    // ...\n    // IDENT\"\n    /\\bq\"([_a-zA-Z][_a-zA-Z\\d]*)(?:\\r?\\n|\\r)[\\s\\S]*?(?:\\r?\\n|\\r)\\1\"/, // q\"//\", q\"||\", etc.\n    /\\bq\"(.)[\\s\\S]*?\\1\"/, // Characters\n    /'(?:\\\\'|\\\\?[^']+)'/, /([\"`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1[cwd]?/],\n    number: [// The lookbehind and the negative look-ahead try to prevent bad highlighting of the .. operator\n    // Hexadecimal numbers must be handled separately to avoid problems with exponent \"e\"\n    /\\b0x\\.?[a-f\\d_]+(?:(?!\\.\\.)\\.[a-f\\d_]*)?(?:p[+-]?[a-f\\d_]+)?[ulfi]*/i, {\n      pattern: /((?:\\.\\.)?)(?:\\b0b\\.?|\\b|\\.)\\d[\\d_]*(?:(?!\\.\\.)\\.[\\d_]*)?(?:e[+-]?\\d[\\d_]*)?[ulfi]*/i,\n      lookbehind: true\n    }],\n    // In order: $, keywords and special tokens, globally defined symbols\n    keyword: /\\$|\\b(?:abstract|alias|align|asm|assert|auto|body|bool|break|byte|case|cast|catch|cdouble|cent|cfloat|char|class|const|continue|creal|dchar|debug|default|delegate|delete|deprecated|do|double|else|enum|export|extern|false|final|finally|float|for|foreach|foreach_reverse|function|goto|idouble|if|ifloat|immutable|import|inout|int|interface|invariant|ireal|lazy|long|macro|mixin|module|new|nothrow|null|out|override|package|pragma|private|protected|public|pure|real|ref|return|scope|shared|short|static|struct|super|switch|synchronized|template|this|throw|true|try|typedef|typeid|typeof|ubyte|ucent|uint|ulong|union|unittest|ushort|version|void|volatile|wchar|while|with|__(?:(?:FILE|MODULE|LINE|FUNCTION|PRETTY_FUNCTION|DATE|EOF|TIME|TIMESTAMP|VENDOR|VERSION)__|gshared|traits|vector|parameters)|string|wstring|dstring|size_t|ptrdiff_t)\\b/,\n    operator: /\\|[|=]?|&[&=]?|\\+[+=]?|-[-=]?|\\.?\\.\\.|=[>=]?|!(?:i[ns]\\b|<>?=?|>=?|=)?|\\bi[ns]\\b|(?:<[<>]?|>>?>?|\\^\\^|[*\\/%^~])=?/\n  });\n  Prism.languages.d.comment = [// Shebang\n  /^\\s*#!.+/, // /+ +/\n  {\n    // Allow one level of nesting\n    pattern: /(^|[^\\\\])\\/\\+(?:\\/\\+[\\s\\S]*?\\+\\/|[\\s\\S])*?\\+\\//,\n    lookbehind: true\n  }].concat(Prism.languages.d.comment);\n  Prism.languages.insertBefore('d', 'comment', {\n    'token-string': {\n      // Allow one level of nesting\n      pattern: /\\bq\\{(?:\\{[^}]*\\}|[^}])*\\}/,\n      alias: 'string'\n    }\n  });\n  Prism.languages.insertBefore('d', 'keyword', {\n    property: /\\B@\\w*/\n  });\n  Prism.languages.insertBefore('d', 'function', {\n    register: {\n      // Iasm registers\n      pattern: /\\b(?:[ABCD][LHX]|E[ABCD]X|E?(?:BP|SP|DI|SI)|[ECSDGF]S|CR[0234]|DR[012367]|TR[3-7]|X?MM[0-7]|R[ABCD]X|[BS]PL|R[BS]P|[DS]IL|R[DS]I|R(?:[89]|1[0-5])[BWD]?|XMM(?:[89]|1[0-5])|YMM(?:1[0-5]|\\d))\\b|\\bST(?:\\([0-7]\\)|\\b)/,\n      alias: 'variable'\n    }\n  });\n}","'use strict';\n\nmodule.exports = dart;\ndart.displayName = 'dart';\ndart.aliases = [];\n\nfunction dart(Prism) {\n  Prism.languages.dart = Prism.languages.extend('clike', {\n    string: [{\n      pattern: /r?(\"\"\"|''')[\\s\\S]*?\\1/,\n      greedy: true\n    }, {\n      pattern: /r?(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    }],\n    keyword: [/\\b(?:async|sync|yield)\\*/, /\\b(?:abstract|assert|async|await|break|case|catch|class|const|continue|default|deferred|do|dynamic|else|enum|export|external|extends|factory|final|finally|for|get|if|implements|import|in|library|new|null|operator|part|rethrow|return|set|static|super|switch|this|throw|try|typedef|var|void|while|with|yield)\\b/],\n    operator: /\\bis!|\\b(?:as|is)\\b|\\+\\+|--|&&|\\|\\||<<=?|>>=?|~(?:\\/=?)?|[+\\-*\\/%&^|=!<>]=?|\\?/\n  });\n  Prism.languages.insertBefore('dart', 'function', {\n    metadata: {\n      pattern: /@\\w+/,\n      alias: 'symbol'\n    }\n  });\n}","'use strict';\n\nmodule.exports = diff;\ndiff.displayName = 'diff';\ndiff.aliases = [];\n\nfunction diff(Prism) {\n  Prism.languages.diff = {\n    coord: [// Match all kinds of coord lines (prefixed by \"+++\", \"---\" or \"***\").\n    /^(?:\\*{3}|-{3}|\\+{3}).*$/m, // Match \"@@ ... @@\" coord lines in unified diff.\n    /^@@.*@@$/m, // Match coord lines in normal diff (starts with a number).\n    /^\\d+.*$/m],\n    // Match inserted and deleted lines. Support both +/- and >/< styles.\n    deleted: /^[-<].*$/m,\n    inserted: /^[+>].*$/m,\n    // Match \"different\" lines (prefixed with \"!\") in context diff.\n    diff: {\n      pattern: /^!(?!!).+$/m,\n      alias: 'important'\n    }\n  };\n}","'use strict';\n\nmodule.exports = django;\ndjango.displayName = 'django';\ndjango.aliases = ['jinja2'];\n\nfunction django(Prism) {\n  // Django/Jinja2 syntax definition for Prism.js <http://prismjs.com> syntax highlighter.\n  // Mostly it works OK but can paint code incorrectly on complex html/template tag combinations.\n  var _django_template = {\n    property: {\n      pattern: /(?:{{|{%)[\\s\\S]*?(?:%}|}})/g,\n      greedy: true,\n      inside: {\n        string: {\n          pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n          greedy: true\n        },\n        keyword: /\\b(?:\\||load|verbatim|widthratio|ssi|firstof|for|url|ifchanged|csrf_token|lorem|ifnotequal|autoescape|now|templatetag|debug|cycle|ifequal|regroup|comment|filter|endfilter|if|spaceless|with|extends|block|include|else|empty|endif|endfor|as|endblock|endautoescape|endverbatim|trans|endtrans|[Tt]rue|[Ff]alse|[Nn]one|in|is|static|macro|endmacro|call|endcall|set|endset|raw|endraw)\\b/,\n        operator: /[-+=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]|\\b(?:or|and|not)\\b/,\n        function: /\\b(?:_|abs|add|addslashes|attr|batch|callable|capfirst|capitalize|center|count|cut|d|date|default|default_if_none|defined|dictsort|dictsortreversed|divisibleby|e|equalto|escape|escaped|escapejs|even|filesizeformat|first|float|floatformat|force_escape|forceescape|format|get_digit|groupby|indent|int|iriencode|iterable|join|last|length|length_is|linebreaks|linebreaksbr|linenumbers|list|ljust|lower|make_list|map|mapping|number|odd|phone2numeric|pluralize|pprint|random|reject|rejectattr|removetags|replace|reverse|rjust|round|safe|safeseq|sameas|select|selectattr|sequence|slice|slugify|sort|string|stringformat|striptags|sum|time|timesince|timeuntil|title|trim|truncate|truncatechars|truncatechars_html|truncatewords|truncatewords_html|undefined|unordered_list|upper|urlencode|urlize|urlizetrunc|wordcount|wordwrap|xmlattr|yesno)\\b/,\n        important: /\\b-?\\d+(?:\\.\\d+)?\\b/,\n        variable: /\\b\\w+?\\b/,\n        punctuation: /[[\\];(),.:]/\n      }\n    }\n  };\n  Prism.languages.django = Prism.languages.extend('markup', {\n    comment: /(?:<!--|{#)[\\s\\S]*?(?:#}|-->)/\n  }); // Updated html tag pattern to allow template tags inside html tags\n\n  Prism.languages.django.tag.pattern = /<\\/?(?!\\d)[^\\s>\\/=$<]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^>=]+))?)*\\s*\\/?>/i;\n  Prism.languages.insertBefore('django', 'entity', _django_template);\n  Prism.languages.insertBefore('inside', 'tag', _django_template, Prism.languages.django.tag);\n\n  if (Prism.languages.javascript) {\n    // Combine js code and template tags painting inside <script> blocks\n    Prism.languages.insertBefore('inside', 'string', _django_template, Prism.languages.django.script);\n    Prism.languages.django.script.inside.string.inside = _django_template;\n  }\n\n  if (Prism.languages.css) {\n    // Combine css code and template tags painting inside <style> blocks\n    Prism.languages.insertBefore('inside', 'atrule', {\n      tag: _django_template.property\n    }, Prism.languages.django.style);\n    Prism.languages.django.style.inside.string.inside = _django_template;\n  } // Add an Jinja2 alias\n\n\n  Prism.languages.jinja2 = Prism.languages.django;\n}","'use strict';\n\nmodule.exports = docker;\ndocker.displayName = 'docker';\ndocker.aliases = ['dockerfile'];\n\nfunction docker(Prism) {\n  Prism.languages.docker = {\n    keyword: {\n      pattern: /(^\\s*)(?:ADD|ARG|CMD|COPY|ENTRYPOINT|ENV|EXPOSE|FROM|HEALTHCHECK|LABEL|MAINTAINER|ONBUILD|RUN|SHELL|STOPSIGNAL|USER|VOLUME|WORKDIR)(?=\\s)/im,\n      lookbehind: true\n    },\n    string: /(\"|')(?:(?!\\1)[^\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\\1/,\n    comment: /#.*/,\n    punctuation: /---|\\.\\.\\.|[:[\\]{}\\-,|>?]/\n  };\n  Prism.languages.dockerfile = Prism.languages.docker;\n}","'use strict';\n\nmodule.exports = eiffel;\neiffel.displayName = 'eiffel';\neiffel.aliases = [];\n\nfunction eiffel(Prism) {\n  Prism.languages.eiffel = {\n    comment: /--.*/,\n    string: [// Aligned-verbatim-strings\n    {\n      pattern: /\"([^[]*)\\[[\\s\\S]*?\\]\\1\"/,\n      greedy: true\n    }, // Non-aligned-verbatim-strings\n    {\n      pattern: /\"([^{]*)\\{[\\s\\S]*?\\}\\1\"/,\n      greedy: true\n    }, // Single-line string\n    {\n      pattern: /\"(?:%\\s+%|%.|[^%\"\\r\\n])*\"/,\n      greedy: true\n    }],\n    // normal char | special char | char code\n    char: /'(?:%.|[^%'\\r\\n])+'/,\n    keyword: /\\b(?:across|agent|alias|all|and|attached|as|assign|attribute|check|class|convert|create|Current|debug|deferred|detachable|do|else|elseif|end|ensure|expanded|export|external|feature|from|frozen|if|implies|inherit|inspect|invariant|like|local|loop|not|note|obsolete|old|once|or|Precursor|redefine|rename|require|rescue|Result|retry|select|separate|some|then|undefine|until|variant|Void|when|xor)\\b/i,\n    boolean: /\\b(?:True|False)\\b/i,\n    // Convention: class-names are always all upper-case characters\n    'class-name': {\n      pattern: /\\b[A-Z][\\dA-Z_]*\\b/,\n      alias: 'builtin'\n    },\n    number: [// hexa | octal | bin\n    /\\b0[xcb][\\da-f](?:_*[\\da-f])*\\b/i, // Decimal\n    /(?:\\d(?:_*\\d)*)?\\.(?:(?:\\d(?:_*\\d)*)?e[+-]?)?\\d(?:_*\\d)*|\\d(?:_*\\d)*\\.?/i],\n    punctuation: /:=|<<|>>|\\(\\||\\|\\)|->|\\.(?=\\w)|[{}[\\];(),:?]/,\n    operator: /\\\\\\\\|\\|\\.\\.\\||\\.\\.|\\/[~\\/=]?|[><]=?|[-+*^=~]/\n  };\n}","'use strict';\n\nmodule.exports = elixir;\nelixir.displayName = 'elixir';\nelixir.aliases = [];\n\nfunction elixir(Prism) {\n  Prism.languages.elixir = {\n    comment: {\n      pattern: /#.*/m,\n      lookbehind: true\n    },\n    // ~r\"\"\"foo\"\"\" (multi-line), ~r'''foo''' (multi-line), ~r/foo/, ~r|foo|, ~r\"foo\", ~r'foo', ~r(foo), ~r[foo], ~r{foo}, ~r<foo>\n    regex: {\n      pattern: /~[rR](?:(\"\"\"|''')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1|([\\/|\"'])(?:\\\\.|(?!\\2)[^\\\\\\r\\n])+\\2|\\((?:\\\\.|[^\\\\)\\r\\n])+\\)|\\[(?:\\\\.|[^\\\\\\]\\r\\n])+\\]|\\{(?:\\\\.|[^\\\\}\\r\\n])+\\}|<(?:\\\\.|[^\\\\>\\r\\n])+>)[uismxfr]*/,\n      greedy: true\n    },\n    string: [{\n      // ~s\"\"\"foo\"\"\" (multi-line), ~s'''foo''' (multi-line), ~s/foo/, ~s|foo|, ~s\"foo\", ~s'foo', ~s(foo), ~s[foo], ~s{foo} (with interpolation care), ~s<foo>\n      pattern: /~[cCsSwW](?:(\"\"\"|''')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1|([\\/|\"'])(?:\\\\.|(?!\\2)[^\\\\\\r\\n])+\\2|\\((?:\\\\.|[^\\\\)\\r\\n])+\\)|\\[(?:\\\\.|[^\\\\\\]\\r\\n])+\\]|\\{(?:\\\\.|#\\{[^}]+\\}|[^\\\\}\\r\\n])+\\}|<(?:\\\\.|[^\\\\>\\r\\n])+>)[csa]?/,\n      greedy: true,\n      inside: {// See interpolation below\n      }\n    }, {\n      pattern: /(\"\"\"|''')[\\s\\S]*?\\1/,\n      greedy: true,\n      inside: {// See interpolation below\n      }\n    }, {\n      // Multi-line strings are allowed\n      pattern: /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true,\n      inside: {// See interpolation below\n      }\n    }],\n    atom: {\n      // Look-behind prevents bad highlighting of the :: operator\n      pattern: /(^|[^:]):\\w+/,\n      lookbehind: true,\n      alias: 'symbol'\n    },\n    // Look-ahead prevents bad highlighting of the :: operator\n    'attr-name': /\\w+:(?!:)/,\n    capture: {\n      // Look-behind prevents bad highlighting of the && operator\n      pattern: /(^|[^&])&(?:[^&\\s\\d()][^\\s()]*|(?=\\())/,\n      lookbehind: true,\n      alias: 'function'\n    },\n    argument: {\n      // Look-behind prevents bad highlighting of the && operator\n      pattern: /(^|[^&])&\\d+/,\n      lookbehind: true,\n      alias: 'variable'\n    },\n    attribute: {\n      pattern: /@\\w+/,\n      alias: 'variable'\n    },\n    number: /\\b(?:0[box][a-f\\d_]+|\\d[\\d_]*)(?:\\.[\\d_]+)?(?:e[+-]?[\\d_]+)?\\b/i,\n    keyword: /\\b(?:after|alias|and|case|catch|cond|def(?:callback|exception|impl|module|p|protocol|struct)?|do|else|end|fn|for|if|import|not|or|require|rescue|try|unless|use|when)\\b/,\n    boolean: /\\b(?:true|false|nil)\\b/,\n    operator: [/\\bin\\b|&&?|\\|[|>]?|\\\\\\\\|::|\\.\\.\\.?|\\+\\+?|-[->]?|<[-=>]|>=|!==?|\\B!|=(?:==?|[>~])?|[*\\/^]/, {\n      // We don't want to match <<\n      pattern: /([^<])<(?!<)/,\n      lookbehind: true\n    }, {\n      // We don't want to match >>\n      pattern: /([^>])>(?!>)/,\n      lookbehind: true\n    }],\n    punctuation: /<<|>>|[.,%\\[\\]{}()]/\n  };\n  Prism.languages.elixir.string.forEach(function (o) {\n    o.inside = {\n      interpolation: {\n        pattern: /#\\{[^}]+\\}/,\n        inside: {\n          delimiter: {\n            pattern: /^#\\{|\\}$/,\n            alias: 'punctuation'\n          },\n          rest: Prism.languages.elixir\n        }\n      }\n    };\n  });\n}","'use strict';\n\nmodule.exports = elm;\nelm.displayName = 'elm';\nelm.aliases = [];\n\nfunction elm(Prism) {\n  Prism.languages.elm = {\n    comment: /--.*|{-[\\s\\S]*?-}/,\n    char: {\n      pattern: /'(?:[^\\\\'\\r\\n]|\\\\(?:[abfnrtv\\\\']|\\d+|x[0-9a-fA-F]+))'/,\n      greedy: true\n    },\n    string: [{\n      // Multiline strings are wrapped in triple \". Quotes may appear unescaped.\n      pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n      greedy: true\n    }, {\n      pattern: /\"(?:[^\\\\\"\\r\\n]|\\\\(?:[abfnrtv\\\\\"]|\\d+|x[0-9a-fA-F]+))*\"/,\n      greedy: true\n    }],\n    import_statement: {\n      // The imported or hidden names are not included in this import\n      // statement. This is because we want to highlight those exactly like\n      // we do for the names in the program.\n      pattern: /^\\s*import\\s+[A-Z]\\w*(?:\\.[A-Z]\\w*)*(?:\\s+as\\s+([A-Z]\\w*)(?:\\.[A-Z]\\w*)*)?(?:\\s+exposing\\s+)?/m,\n      inside: {\n        keyword: /\\b(?:import|as|exposing)\\b/\n      }\n    },\n    keyword: /\\b(?:alias|as|case|else|exposing|if|in|infixl|infixr|let|module|of|then|type)\\b/,\n    // These are builtin variables only. Constructors are highlighted later as a constant.\n    builtin: /\\b(?:abs|acos|always|asin|atan|atan2|ceiling|clamp|compare|cos|curry|degrees|e|flip|floor|fromPolar|identity|isInfinite|isNaN|logBase|max|min|negate|never|not|pi|radians|rem|round|sin|sqrt|tan|toFloat|toPolar|toString|truncate|turns|uncurry|xor)\\b/,\n    // decimal integers and floating point numbers | hexadecimal integers\n    number: /\\b(?:\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?|0x[0-9a-f]+)\\b/i,\n    // Most of this is needed because of the meaning of a single '.'.\n    // If it stands alone freely, it is the function composition.\n    // It may also be a separator between a module name and an identifier => no\n    // operator. If it comes together with other special characters it is an\n    // operator too.\n    // Valid operator characters in 0.18: +-/*=.$<>:&|^?%#@~!\n    // Ref: https://groups.google.com/forum/#!msg/elm-dev/0AHSnDdkSkQ/E0SVU70JEQAJ\n    operator: /\\s\\.\\s|[+\\-/*=.$<>:&|^?%#@~!]{2,}|[+\\-/*=$<>:&|^?%#@~!]/,\n    // In Elm, nearly everything is a variable, do not highlight these.\n    hvariable: /\\b(?:[A-Z]\\w*\\.)*[a-z]\\w*\\b/,\n    constant: /\\b(?:[A-Z]\\w*\\.)*[A-Z]\\w*\\b/,\n    punctuation: /[{}[\\]|(),.:]/\n  };\n}","'use strict';\n\nvar refractorRuby = require('./ruby.js');\n\nmodule.exports = erb;\nerb.displayName = 'erb';\nerb.aliases = [];\n\nfunction erb(Prism) {\n  Prism.register(refractorRuby);\n\n  (function (Prism) {\n    Prism.languages.erb = Prism.languages.extend('ruby', {});\n    Prism.languages.insertBefore('erb', 'comment', {\n      delimiter: {\n        pattern: /^<%=?|%>$/,\n        alias: 'punctuation'\n      }\n    });\n    Prism.hooks.add('before-tokenize', function (env) {\n      var erbPattern = /<%=?[\\s\\S]+?%>/g;\n      Prism.languages['markup-templating'].buildPlaceholders(env, 'erb', erbPattern);\n    });\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'erb');\n    });\n  })(Prism);\n}","'use strict';\n\nmodule.exports = erlang;\nerlang.displayName = 'erlang';\nerlang.aliases = [];\n\nfunction erlang(Prism) {\n  Prism.languages.erlang = {\n    comment: /%.+/,\n    string: {\n      pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n      greedy: true\n    },\n    'quoted-function': {\n      pattern: /'(?:\\\\.|[^\\\\'\\r\\n])+'(?=\\()/,\n      alias: 'function'\n    },\n    'quoted-atom': {\n      pattern: /'(?:\\\\.|[^\\\\'\\r\\n])+'/,\n      alias: 'atom'\n    },\n    boolean: /\\b(?:true|false)\\b/,\n    keyword: /\\b(?:fun|when|case|of|end|if|receive|after|try|catch)\\b/,\n    number: [/\\$\\\\?./, /\\d+#[a-z0-9]+/i, /(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?/i],\n    function: /\\b[a-z][\\w@]*(?=\\()/,\n    variable: {\n      // Look-behind is used to prevent wrong highlighting of atoms containing \"@\"\n      pattern: /(^|[^@])(?:\\b|\\?)[A-Z_][\\w@]*/,\n      lookbehind: true\n    },\n    operator: [/[=\\/<>:]=|=[:\\/]=|\\+\\+?|--?|[=*\\/!]|\\b(?:bnot|div|rem|band|bor|bxor|bsl|bsr|not|and|or|xor|orelse|andalso)\\b/, {\n      // We don't want to match <<\n      pattern: /(^|[^<])<(?!<)/,\n      lookbehind: true\n    }, {\n      // We don't want to match >>\n      pattern: /(^|[^>])>(?!>)/,\n      lookbehind: true\n    }],\n    atom: /\\b[a-z][\\w@]*/,\n    punctuation: /[()[\\]{}:;,.#|]|<<|>>/\n  };\n}","'use strict';\n\nmodule.exports = flow;\nflow.displayName = 'flow';\nflow.aliases = [];\n\nfunction flow(Prism) {\n  ;\n\n  (function (Prism) {\n    Prism.languages.flow = Prism.languages.extend('javascript', {});\n    Prism.languages.insertBefore('flow', 'keyword', {\n      type: [{\n        pattern: /\\b(?:[Nn]umber|[Ss]tring|[Bb]oolean|Function|any|mixed|null|void)\\b/,\n        alias: 'tag'\n      }]\n    });\n    Prism.languages.flow['function-variable'].pattern = /[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*=\\s*(?:function\\b|(?:\\([^()]*\\)(?:\\s*:\\s*\\w+)?|[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)\\s*=>))/i;\n    Prism.languages.insertBefore('flow', 'operator', {\n      'flow-punctuation': {\n        pattern: /\\{\\||\\|\\}/,\n        alias: 'punctuation'\n      }\n    });\n\n    if (Prism.util.type(Prism.languages.flow.keyword) !== 'Array') {\n      Prism.languages.flow.keyword = [Prism.languages.flow.keyword];\n    }\n\n    Prism.languages.flow.keyword.unshift({\n      pattern: /(^|[^$]\\b)(?:type|opaque|declare|Class)\\b(?!\\$)/,\n      lookbehind: true\n    }, {\n      pattern: /(^|[^$]\\B)\\$(?:await|Diff|Exact|Keys|ObjMap|PropertyType|Shape|Record|Supertype|Subtype|Enum)\\b(?!\\$)/,\n      lookbehind: true\n    });\n  })(Prism);\n}","'use strict';\n\nmodule.exports = fortran;\nfortran.displayName = 'fortran';\nfortran.aliases = [];\n\nfunction fortran(Prism) {\n  Prism.languages.fortran = {\n    'quoted-number': {\n      pattern: /[BOZ](['\"])[A-F0-9]+\\1/i,\n      alias: 'number'\n    },\n    string: {\n      pattern: /(?:\\w+_)?(['\"])(?:\\1\\1|&(?:\\r\\n?|\\n)(?:\\s*!.+(?:\\r\\n?|\\n))?|(?!\\1).)*(?:\\1|&)/,\n      inside: {\n        comment: {\n          pattern: /(&(?:\\r\\n?|\\n)\\s*)!.*/,\n          lookbehind: true\n        }\n      }\n    },\n    comment: {\n      pattern: /!.*/,\n      greedy: true\n    },\n    boolean: /\\.(?:TRUE|FALSE)\\.(?:_\\w+)?/i,\n    number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[ED][+-]?\\d+)?(?:_\\w+)?/i,\n    keyword: [// Types\n    /\\b(?:INTEGER|REAL|DOUBLE ?PRECISION|COMPLEX|CHARACTER|LOGICAL)\\b/i, // END statements\n    /\\b(?:END ?)?(?:BLOCK ?DATA|DO|FILE|FORALL|FUNCTION|IF|INTERFACE|MODULE(?! PROCEDURE)|PROGRAM|SELECT|SUBROUTINE|TYPE|WHERE)\\b/i, // Statements\n    /\\b(?:ALLOCATABLE|ALLOCATE|BACKSPACE|CALL|CASE|CLOSE|COMMON|CONTAINS|CONTINUE|CYCLE|DATA|DEALLOCATE|DIMENSION|DO|END|EQUIVALENCE|EXIT|EXTERNAL|FORMAT|GO ?TO|IMPLICIT(?: NONE)?|INQUIRE|INTENT|INTRINSIC|MODULE PROCEDURE|NAMELIST|NULLIFY|OPEN|OPTIONAL|PARAMETER|POINTER|PRINT|PRIVATE|PUBLIC|READ|RETURN|REWIND|SAVE|SELECT|STOP|TARGET|WHILE|WRITE)\\b/i, // Others\n    /\\b(?:ASSIGNMENT|DEFAULT|ELEMENTAL|ELSE|ELSEWHERE|ELSEIF|ENTRY|IN|INCLUDE|INOUT|KIND|NULL|ONLY|OPERATOR|OUT|PURE|RECURSIVE|RESULT|SEQUENCE|STAT|THEN|USE)\\b/i],\n    operator: [/\\*\\*|\\/\\/|=>|[=\\/]=|[<>]=?|::|[+\\-*=%]|\\.(?:EQ|NE|LT|LE|GT|GE|NOT|AND|OR|EQV|NEQV)\\.|\\.[A-Z]+\\./i, {\n      // Use lookbehind to prevent confusion with (/ /)\n      pattern: /(^|(?!\\().)\\/(?!\\))/,\n      lookbehind: true\n    }],\n    punctuation: /\\(\\/|\\/\\)|[(),;:&]/\n  };\n}","'use strict';\n\nmodule.exports = fsharp;\nfsharp.displayName = 'fsharp';\nfsharp.aliases = [];\n\nfunction fsharp(Prism) {\n  Prism.languages.fsharp = Prism.languages.extend('clike', {\n    comment: [{\n      pattern: /(^|[^\\\\])\\(\\*[\\s\\S]*?\\*\\)/,\n      lookbehind: true\n    }, {\n      pattern: /(^|[^\\\\:])\\/\\/.*/,\n      lookbehind: true\n    }],\n    keyword: /\\b(?:let|return|use|yield)(?:!\\B|\\b)|\\b(abstract|and|as|assert|base|begin|class|default|delegate|do|done|downcast|downto|elif|else|end|exception|extern|false|finally|for|fun|function|global|if|in|inherit|inline|interface|internal|lazy|match|member|module|mutable|namespace|new|not|null|of|open|or|override|private|public|rec|select|static|struct|then|to|true|try|type|upcast|val|void|when|while|with|asr|land|lor|lsl|lsr|lxor|mod|sig|atomic|break|checked|component|const|constraint|constructor|continue|eager|event|external|fixed|functor|include|method|mixin|object|parallel|process|protected|pure|sealed|tailcall|trait|virtual|volatile)\\b/,\n    string: {\n      pattern: /(?:\"\"\"[\\s\\S]*?\"\"\"|@\"(?:\"\"|[^\"])*\"|(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1)B?/,\n      greedy: true\n    },\n    number: [/\\b0x[\\da-fA-F]+(?:un|lf|LF)?\\b/, /\\b0b[01]+(?:y|uy)?\\b/, /(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[fm]|e[+-]?\\d+)?\\b/i, /\\b\\d+(?:[IlLsy]|u[lsy]?|UL)?\\b/]\n  });\n  Prism.languages.insertBefore('fsharp', 'keyword', {\n    preprocessor: {\n      pattern: /^[^\\r\\n\\S]*#.*/m,\n      alias: 'property',\n      inside: {\n        directive: {\n          pattern: /(\\s*#)\\b(?:else|endif|if|light|line|nowarn)\\b/,\n          lookbehind: true,\n          alias: 'keyword'\n        }\n      }\n    }\n  });\n}","'use strict';\n\nmodule.exports = gedcom;\ngedcom.displayName = 'gedcom';\ngedcom.aliases = [];\n\nfunction gedcom(Prism) {\n  Prism.languages.gedcom = {\n    'line-value': {\n      // Preceded by level, optional pointer, and tag\n      pattern: /(^\\s*\\d+ +(?:@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@ +)?\\w+ +).+/m,\n      lookbehind: true,\n      inside: {\n        pointer: {\n          pattern: /^@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@$/,\n          alias: 'variable'\n        }\n      }\n    },\n    tag: {\n      // Preceded by level and optional pointer\n      pattern: /(^\\s*\\d+ +(?:@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@ +)?)\\w+/m,\n      lookbehind: true,\n      alias: 'string'\n    },\n    level: {\n      pattern: /(^\\s*)\\d+/m,\n      lookbehind: true,\n      alias: 'number'\n    },\n    pointer: {\n      pattern: /@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@/,\n      alias: 'variable'\n    }\n  };\n}","'use strict';\n\nmodule.exports = gherkin;\ngherkin.displayName = 'gherkin';\ngherkin.aliases = [];\n\nfunction gherkin(Prism) {\n  Prism.languages.gherkin = {\n    pystring: {\n      pattern: /(\"\"\"|''')[\\s\\S]+?\\1/,\n      alias: 'string'\n    },\n    comment: {\n      pattern: /((?:^|\\r?\\n|\\r)[ \\t]*)#.*/,\n      lookbehind: true\n    },\n    tag: {\n      pattern: /((?:^|\\r?\\n|\\r)[ \\t]*)@\\S*/,\n      lookbehind: true\n    },\n    feature: {\n      pattern: /((?:^|\\r?\\n|\\r)[ \\t]*)(?:Ability|Ahoy matey!|Arwedd|Aspekt|Besigheid Behoefte|Business Need|Caracteristica|Característica|Egenskab|Egenskap|Eiginleiki|Feature|Fīča|Fitur|Fonctionnalité|Fonksyonalite|Funcionalidade|Funcionalitat|Functionalitate|Funcţionalitate|Funcționalitate|Functionaliteit|Fungsi|Funkcia|Funkcija|Funkcionalitāte|Funkcionalnost|Funkcja|Funksie|Funktionalität|Funktionalitéit|Funzionalità|Hwaet|Hwæt|Jellemző|Karakteristik|laH|Lastnost|Mak|Mogucnost|Mogućnost|Moznosti|Možnosti|OH HAI|Omadus|Ominaisuus|Osobina|Özellik|perbogh|poQbogh malja'|Potrzeba biznesowa|Požadavek|Požiadavka|Pretty much|Qap|Qu'meH 'ut|Savybė|Tính năng|Trajto|Vermoë|Vlastnosť|Właściwość|Značilnost|Δυνατότητα|Λειτουργία|Могућност|Мөмкинлек|Особина|Свойство|Үзенчәлеклелек|Функционал|Функционалност|Функция|Функціонал|תכונה|خاصية|خصوصیت|صلاحیت|کاروبار کی ضرورت|وِیژگی|रूप लेख|ਖਾਸੀਅਤ|ਨਕਸ਼ ਨੁਹਾਰ|ਮੁਹਾਂਦਰਾ|గుణము|ಹೆಚ್ಚಳ|ความต้องการทางธุรกิจ|ความสามารถ|โครงหลัก|기능|フィーチャ|功能|機能):(?:[^:]+(?:\\r?\\n|\\r|$))*/,\n      lookbehind: true,\n      inside: {\n        important: {\n          pattern: /(:)[^\\r\\n]+/,\n          lookbehind: true\n        },\n        keyword: /[^:\\r\\n]+:/\n      }\n    },\n    scenario: {\n      pattern: /((?:^|\\r?\\n|\\r)[ \\t]*)(?:Abstract Scenario|Abstrakt Scenario|Achtergrond|Aer|Ær|Agtergrond|All y'all|Antecedentes|Antecedents|Atburðarás|Atburðarásir|Awww, look mate|B4|Background|Baggrund|Bakgrund|Bakgrunn|Bakgrunnur|Beispiele|Beispiller|Bối cảnh|Cefndir|Cenario|Cenário|Cenario de Fundo|Cenário de Fundo|Cenarios|Cenários|Contesto|Context|Contexte|Contexto|Conto|Contoh|Contone|Dæmi|Dasar|Dead men tell no tales|Delineacao do Cenario|Delineação do Cenário|Dis is what went down|Dữ liệu|Dyagram senaryo|Dyagram Senaryo|Egzanp|Ejemplos|Eksempler|Ekzemploj|Enghreifftiau|Esbozo do escenario|Escenari|Escenario|Esempi|Esquema de l'escenari|Esquema del escenario|Esquema do Cenario|Esquema do Cenário|Examples|EXAMPLZ|Exempel|Exemple|Exemples|Exemplos|First off|Fono|Forgatókönyv|Forgatókönyv vázlat|Fundo|Geçmiş|ghantoH|Grundlage|Hannergrond|Háttér|Heave to|Istorik|Juhtumid|Keadaan|Khung kịch bản|Khung tình huống|Kịch bản|Koncept|Konsep skenario|Kontèks|Kontekst|Kontekstas|Konteksts|Kontext|Konturo de la scenaro|Latar Belakang|lut|lut chovnatlh|lutmey|Lýsing Atburðarásar|Lýsing Dæma|Menggariskan Senario|MISHUN|MISHUN SRSLY|mo'|Náčrt Scenára|Náčrt Scénáře|Náčrt Scenáru|Oris scenarija|Örnekler|Osnova|Osnova Scenára|Osnova scénáře|Osnutek|Ozadje|Paraugs|Pavyzdžiai|Példák|Piemēri|Plan du scénario|Plan du Scénario|Plan senaryo|Plan Senaryo|Plang vum Szenario|Pozadí|Pozadie|Pozadina|Príklady|Příklady|Primer|Primeri|Primjeri|Przykłady|Raamstsenaarium|Reckon it's like|Rerefons|Scenár|Scénář|Scenarie|Scenarij|Scenarijai|Scenarijaus šablonas|Scenariji|Scenārijs|Scenārijs pēc parauga|Scenarijus|Scenario|Scénario|Scenario Amlinellol|Scenario Outline|Scenario Template|Scenariomal|Scenariomall|Scenarios|Scenariu|Scenariusz|Scenaro|Schema dello scenario|Se ðe|Se the|Se þe|Senario|Senaryo|Senaryo deskripsyon|Senaryo Deskripsyon|Senaryo taslağı|Shiver me timbers|Situācija|Situai|Situasie|Situasie Uiteensetting|Skenario|Skenario konsep|Skica|Structura scenariu|Structură scenariu|Struktura scenarija|Stsenaarium|Swa|Swa hwaer swa|Swa hwær swa|Szablon scenariusza|Szenario|Szenariogrundriss|Tapaukset|Tapaus|Tapausaihio|Taust|Tausta|Template Keadaan|Template Senario|Template Situai|The thing of it is|Tình huống|Variantai|Voorbeelde|Voorbeelden|Wharrimean is|Yo\\-ho\\-ho|You'll wanna|Założenia|Παραδείγματα|Περιγραφή Σεναρίου|Σενάρια|Σενάριο|Υπόβαθρο|Кереш|Контекст|Концепт|Мисаллар|Мисоллар|Основа|Передумова|Позадина|Предистория|Предыстория|Приклади|Пример|Примери|Примеры|Рамка на сценарий|Скица|Структура сценарија|Структура сценария|Структура сценарію|Сценарий|Сценарий структураси|Сценарийның төзелеше|Сценарији|Сценарио|Сценарій|Тарих|Үрнәкләр|דוגמאות|רקע|תבנית תרחיש|תרחיש|الخلفية|الگوی سناریو|امثلة|پس منظر|زمینه|سناریو|سيناريو|سيناريو مخطط|مثالیں|منظر نامے کا خاکہ|منظرنامہ|نمونه ها|उदाहरण|परिदृश्य|परिदृश्य रूपरेखा|पृष्ठभूमि|ਉਦਾਹਰਨਾਂ|ਪਟਕਥਾ|ਪਟਕਥਾ ਢਾਂਚਾ|ਪਟਕਥਾ ਰੂਪ ਰੇਖਾ|ਪਿਛੋਕੜ|ఉదాహరణలు|కథనం|నేపథ్యం|సన్నివేశం|ಉದಾಹರಣೆಗಳು|ಕಥಾಸಾರಾಂಶ|ವಿವರಣೆ|ಹಿನ್ನೆಲೆ|โครงสร้างของเหตุการณ์|ชุดของตัวอย่าง|ชุดของเหตุการณ์|แนวคิด|สรุปเหตุการณ์|เหตุการณ์|배경|시나리오|시나리오 개요|예|サンプル|シナリオ|シナリオアウトライン|シナリオテンプレ|シナリオテンプレート|テンプレ|例|例子|剧本|剧本大纲|劇本|劇本大綱|场景|场景大纲|場景|場景大綱|背景):[^:\\r\\n]*/,\n      lookbehind: true,\n      inside: {\n        important: {\n          pattern: /(:)[^\\r\\n]*/,\n          lookbehind: true\n        },\n        keyword: /[^:\\r\\n]+:/\n      }\n    },\n    'table-body': {\n      // Look-behind is used to skip the table head, which has the same format as any table row\n      pattern: /((?:\\r?\\n|\\r)[ \\t]*\\|.+\\|[^\\r\\n]*)+/,\n      lookbehind: true,\n      inside: {\n        outline: {\n          pattern: /<[^>]+?>/,\n          alias: 'variable'\n        },\n        td: {\n          pattern: /\\s*[^\\s|][^|]*/,\n          alias: 'string'\n        },\n        punctuation: /\\|/\n      }\n    },\n    'table-head': {\n      pattern: /(?:\\r?\\n|\\r)[ \\t]*\\|.+\\|[^\\r\\n]*/,\n      inside: {\n        th: {\n          pattern: /\\s*[^\\s|][^|]*/,\n          alias: 'variable'\n        },\n        punctuation: /\\|/\n      }\n    },\n    atrule: {\n      pattern: /((?:\\r?\\n|\\r)[ \\t]+)(?:'ach|'a|'ej|7|a|A také|A taktiež|A tiež|A zároveň|Aber|Ac|Adott|Akkor|Ak|Aleshores|Ale|Ali|Allora|Alors|Als|Ama|Amennyiben|Amikor|Ampak|an|AN|Ananging|And y'all|And|Angenommen|Anrhegedig a|An|Apabila|Atès|Atesa|Atunci|Avast!|Aye|A|awer|Bagi|Banjur|Bet|Biết|Blimey!|Buh|But at the end of the day I reckon|But y'all|But|BUT|Cal|Când|Cando|Cand|Ce|Cuando|Če|Ða ðe|Ða|Dadas|Dada|Dados|Dado|DaH ghu' bejlu'|dann|Dann|Dano|Dan|Dar|Dat fiind|Data|Date fiind|Date|Dati fiind|Dati|Daţi fiind|Dați fiind|Dato|DEN|Den youse gotta|Dengan|De|Diberi|Diyelim ki|Donada|Donat|Donitaĵo|Do|Dun|Duota|Ðurh|Eeldades|Ef|Eğer ki|Entao|Então|Entón|Entonces|En|Epi|E|És|Etant donnée|Etant donné|Et|Étant données|Étant donnée|Étant donné|Etant données|Etant donnés|Étant donnés|Fakat|Gangway!|Gdy|Gegeben seien|Gegeben sei|Gegeven|Gegewe|ghu' noblu'|Gitt|Given y'all|Given|Givet|Givun|Ha|Cho|I CAN HAZ|In|Ir|It's just unbelievable|I|Ja|Jeśli|Jeżeli|Kadar|Kada|Kad|Kai|Kaj|Když|Keď|Kemudian|Ketika|Khi|Kiedy|Ko|Kuid|Kui|Kun|Lan|latlh|Le sa a|Let go and haul|Le|Lè sa a|Lè|Logo|Lorsqu'<|Lorsque|mä|Maar|Mais|Mając|Majd|Maka|Manawa|Mas|Ma|Menawa|Men|Mutta|Nalikaning|Nalika|Nanging|Når|När|Nato|Nhưng|Niin|Njuk|O zaman|Og|Och|Oletetaan|Onda|Ond|Oraz|Pak|Pero|Però|Podano|Pokiaľ|Pokud|Potem|Potom|Privzeto|Pryd|qaSDI'|Quando|Quand|Quan|Så|Sed|Se|Siis|Sipoze ke|Sipoze Ke|Sipoze|Si|Şi|Și|Soit|Stel|Tada|Tad|Takrat|Tak|Tapi|Ter|Tetapi|Tha the|Tha|Then y'all|Then|Thì|Thurh|Toda|Too right|ugeholl|Und|Un|Và|vaj|Vendar|Ve|wann|Wanneer|WEN|Wenn|When y'all|When|Wtedy|Wun|Y'know|Yeah nah|Yna|Youse know like when|Youse know when youse got|Y|Za predpokladu|Za předpokladu|Zadani|Zadano|Zadan|Zadate|Zadato|Zakładając|Zaradi|Zatati|Þa þe|Þa|Þá|Þegar|Þurh|Αλλά|Δεδομένου|Και|Όταν|Τότε|А також|Агар|Але|Али|Аммо|А|Әгәр|Әйтик|Әмма|Бирок|Ва|Вә|Дадено|Дано|Допустим|Если|Задате|Задати|Задато|И|І|К тому же|Када|Кад|Когато|Когда|Коли|Ләкин|Лекин|Нәтиҗәдә|Нехай|Но|Онда|Припустимо, що|Припустимо|Пусть|Также|Та|Тогда|Тоді|То|Унда|Һәм|Якщо|אבל|אזי|אז|בהינתן|וגם|כאשר|آنگاه|اذاً|اگر|اما|اور|با فرض|بالفرض|بفرض|پھر|تب|ثم|جب|عندما|فرض کیا|لكن|لیکن|متى|هنگامی|و|अगर|और|कदा|किन्तु|चूंकि|जब|तथा|तदा|तब|परन्तु|पर|यदि|ਅਤੇ|ਜਦੋਂ|ਜਿਵੇਂ ਕਿ|ਜੇਕਰ|ਤਦ|ਪਰ|అప్పుడు|ఈ పరిస్థితిలో|కాని|చెప్పబడినది|మరియు|ಆದರೆ|ನಂತರ|ನೀಡಿದ|ಮತ್ತು|ಸ್ಥಿತಿಯನ್ನು|กำหนดให้|ดังนั้น|แต่|เมื่อ|และ|그러면<|그리고<|단<|만약<|만일<|먼저<|조건<|하지만<|かつ<|しかし<|ただし<|ならば<|もし<|並且<|但し<|但是<|假如<|假定<|假設<|假设<|前提<|同时<|同時<|并且<|当<|當<|而且<|那么<|那麼<)(?=[ \\t]+)/,\n      lookbehind: true\n    },\n    string: {\n      pattern: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|'(?:\\\\.|[^'\\\\\\r\\n])*'/,\n      inside: {\n        outline: {\n          pattern: /<[^>]+?>/,\n          alias: 'variable'\n        }\n      }\n    },\n    outline: {\n      pattern: /<[^>]+?>/,\n      alias: 'variable'\n    }\n  };\n}","'use strict';\n\nmodule.exports = git;\ngit.displayName = 'git';\ngit.aliases = [];\n\nfunction git(Prism) {\n  Prism.languages.git = {\n    /*\n     * A simple one line comment like in a git status command\n     * For instance:\n     * $ git status\n     * # On branch infinite-scroll\n     * # Your branch and 'origin/sharedBranches/frontendTeam/infinite-scroll' have diverged,\n     * # and have 1 and 2 different commits each, respectively.\n     * nothing to commit (working directory clean)\n     */\n    comment: /^#.*/m,\n\n    /*\n     * Regexp to match the changed lines in a git diff output. Check the example below.\n     */\n    deleted: /^[-–].*/m,\n    inserted: /^\\+.*/m,\n\n    /*\n     * a string (double and simple quote)\n     */\n    string: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/m,\n\n    /*\n     * a git command. It starts with a random prompt finishing by a $, then \"git\" then some other parameters\n     * For instance:\n     * $ git add file.txt\n     */\n    command: {\n      pattern: /^.*\\$ git .*$/m,\n      inside: {\n        /*\n         * A git command can contain a parameter starting by a single or a double dash followed by a string\n         * For instance:\n         * $ git diff --cached\n         * $ git log -p\n         */\n        parameter: /\\s--?\\w+/m\n      }\n    },\n\n    /*\n     * Coordinates displayed in a git diff command\n     * For instance:\n     * $ git diff\n     * diff --git file.txt file.txt\n     * index 6214953..1d54a52 100644\n     * --- file.txt\n     * +++ file.txt\n     * @@ -1 +1,2 @@\n     * -Here's my tetx file\n     * +Here's my text file\n     * +And this is the second line\n     */\n    coord: /^@@.*@@$/m,\n\n    /*\n     * Match a \"commit [SHA1]\" line in a git log output.\n     * For instance:\n     * $ git log\n     * commit a11a14ef7e26f2ca62d4b35eac455ce636d0dc09\n     * Author: lgiraudel\n     * Date:   Mon Feb 17 11:18:34 2014 +0100\n     *\n     *     Add of a new line\n     */\n    commit_sha1: /^commit \\w{40}$/m\n  };\n}","'use strict';\n\nmodule.exports = glsl;\nglsl.displayName = 'glsl';\nglsl.aliases = [];\n\nfunction glsl(Prism) {\n  Prism.languages.glsl = Prism.languages.extend('clike', {\n    comment: [/\\/\\*[\\s\\S]*?\\*\\//, /\\/\\/(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])*/],\n    number: /(?:\\b0x[\\da-f]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ulf]*/i,\n    keyword: /\\b(?:attribute|const|uniform|varying|buffer|shared|coherent|volatile|restrict|readonly|writeonly|atomic_uint|layout|centroid|flat|smooth|noperspective|patch|sample|break|continue|do|for|while|switch|case|default|if|else|subroutine|in|out|inout|float|double|int|void|bool|true|false|invariant|precise|discard|return|d?mat[234](?:x[234])?|[ibdu]?vec[234]|uint|lowp|mediump|highp|precision|[iu]?sampler[123]D|[iu]?samplerCube|sampler[12]DShadow|samplerCubeShadow|[iu]?sampler[12]DArray|sampler[12]DArrayShadow|[iu]?sampler2DRect|sampler2DRectShadow|[iu]?samplerBuffer|[iu]?sampler2DMS(?:Array)?|[iu]?samplerCubeArray|samplerCubeArrayShadow|[iu]?image[123]D|[iu]?image2DRect|[iu]?imageCube|[iu]?imageBuffer|[iu]?image[12]DArray|[iu]?imageCubeArray|[iu]?image2DMS(?:Array)?|struct|common|partition|active|asm|class|union|enum|typedef|template|this|resource|goto|inline|noinline|public|static|extern|external|interface|long|short|half|fixed|unsigned|superp|input|output|hvec[234]|fvec[234]|sampler3DRect|filter|sizeof|cast|namespace|using)\\b/\n  });\n  Prism.languages.insertBefore('glsl', 'comment', {\n    preprocessor: {\n      pattern: /(^[ \\t]*)#(?:(?:define|undef|if|ifdef|ifndef|else|elif|endif|error|pragma|extension|version|line)\\b)?/m,\n      lookbehind: true,\n      alias: 'builtin'\n    }\n  });\n}","'use strict';\n\nmodule.exports = go;\ngo.displayName = 'go';\ngo.aliases = [];\n\nfunction go(Prism) {\n  Prism.languages.go = Prism.languages.extend('clike', {\n    keyword: /\\b(?:break|case|chan|const|continue|default|defer|else|fallthrough|for|func|go(?:to)?|if|import|interface|map|package|range|return|select|struct|switch|type|var)\\b/,\n    builtin: /\\b(?:bool|byte|complex(?:64|128)|error|float(?:32|64)|rune|string|u?int(?:8|16|32|64)?|uintptr|append|cap|close|complex|copy|delete|imag|len|make|new|panic|print(?:ln)?|real|recover)\\b/,\n    boolean: /\\b(?:_|iota|nil|true|false)\\b/,\n    operator: /[*\\/%^!=]=?|\\+[=+]?|-[=-]?|\\|[=|]?|&(?:=|&|\\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\\.\\.\\./,\n    number: /(?:\\b0x[a-f\\d]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[-+]?\\d+)?)i?/i,\n    string: {\n      pattern: /([\"'`])(\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n      greedy: true\n    }\n  });\n  delete Prism.languages.go['class-name'];\n}","'use strict';\n\nmodule.exports = graphql;\ngraphql.displayName = 'graphql';\ngraphql.aliases = [];\n\nfunction graphql(Prism) {\n  Prism.languages.graphql = {\n    comment: /#.*/,\n    string: {\n      pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n      greedy: true\n    },\n    number: /(?:\\B-|\\b)\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n    boolean: /\\b(?:true|false)\\b/,\n    variable: /\\$[a-z_]\\w*/i,\n    directive: {\n      pattern: /@[a-z_]\\w*/i,\n      alias: 'function'\n    },\n    'attr-name': /[a-z_]\\w*(?=\\s*:)/i,\n    keyword: [{\n      pattern: /(fragment\\s+(?!on)[a-z_]\\w*\\s+|\\.{3}\\s*)on\\b/,\n      lookbehind: true\n    }, /\\b(?:query|fragment|mutation)\\b/],\n    operator: /!|=|\\.{3}/,\n    punctuation: /[!(){}\\[\\]:=,]/\n  };\n}","'use strict';\n\nmodule.exports = groovy;\ngroovy.displayName = 'groovy';\ngroovy.aliases = [];\n\nfunction groovy(Prism) {\n  Prism.languages.groovy = Prism.languages.extend('clike', {\n    keyword: /\\b(?:as|def|in|abstract|assert|boolean|break|byte|case|catch|char|class|const|continue|default|do|double|else|enum|extends|final|finally|float|for|goto|if|implements|import|instanceof|int|interface|long|native|new|package|private|protected|public|return|short|static|strictfp|super|switch|synchronized|this|throw|throws|trait|transient|try|void|volatile|while)\\b/,\n    string: [{\n      pattern: /(\"\"\"|''')[\\s\\S]*?\\1|(?:\\$\\/)(?:\\$\\/\\$|[\\s\\S])*?\\/\\$/,\n      greedy: true\n    }, {\n      pattern: /([\"'\\/])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    }],\n    number: /\\b(?:0b[01_]+|0x[\\da-f_]+(?:\\.[\\da-f_p\\-]+)?|[\\d_]+(?:\\.[\\d_]+)?(?:e[+-]?[\\d]+)?)[glidf]?\\b/i,\n    operator: {\n      pattern: /(^|[^.])(?:~|==?~?|\\?[.:]?|\\*(?:[.=]|\\*=?)?|\\.[@&]|\\.\\.<|\\.{1,2}(?!\\.)|-[-=>]?|\\+[+=]?|!=?|<(?:<=?|=>?)?|>(?:>>?=?|=)?|&[&=]?|\\|[|=]?|\\/=?|\\^=?|%=?)/,\n      lookbehind: true\n    },\n    punctuation: /\\.+|[{}[\\];(),:$]/\n  });\n  Prism.languages.insertBefore('groovy', 'string', {\n    shebang: {\n      pattern: /#!.+/,\n      alias: 'comment'\n    }\n  });\n  Prism.languages.insertBefore('groovy', 'punctuation', {\n    'spock-block': /\\b(?:setup|given|when|then|and|cleanup|expect|where):/\n  });\n  Prism.languages.insertBefore('groovy', 'function', {\n    annotation: {\n      alias: 'punctuation',\n      pattern: /(^|[^.])@\\w+/,\n      lookbehind: true\n    }\n  }); // Handle string interpolation\n\n  Prism.hooks.add('wrap', function (env) {\n    if (env.language === 'groovy' && env.type === 'string') {\n      var delimiter = env.content.value[0];\n\n      if (delimiter != \"'\") {\n        var pattern = /([^\\\\])(?:\\$(?:\\{.*?\\}|[\\w.]+))/;\n\n        if (delimiter === '$') {\n          pattern = /([^\\$])(?:\\$(?:\\{.*?\\}|[\\w.]+))/;\n        } // To prevent double HTML-encoding we have to decode env.content first\n\n\n        env.content.value = env.content.value.replace(/&lt;/g, '<').replace(/&amp;/g, '&');\n        env.content = Prism.highlight(env.content.value, {\n          expression: {\n            pattern: pattern,\n            lookbehind: true,\n            inside: Prism.languages.groovy\n          }\n        });\n        env.classes.push(delimiter === '/' ? 'regex' : 'gstring');\n      }\n    }\n  });\n}","'use strict';\n\nmodule.exports = haml;\nhaml.displayName = 'haml';\nhaml.aliases = [];\n\nfunction haml(Prism) {\n  /* TODO\n  Handle multiline code after tag\n  %foo= some |\n  multiline |\n  code |\n  */\n  ;\n\n  (function (Prism) {\n    Prism.languages.haml = {\n      // Multiline stuff should appear before the rest\n      'multiline-comment': {\n        pattern: /((?:^|\\r?\\n|\\r)([\\t ]*))(?:\\/|-#).*(?:(?:\\r?\\n|\\r)\\2[\\t ]+.+)*/,\n        lookbehind: true,\n        alias: 'comment'\n      },\n      'multiline-code': [{\n        pattern: /((?:^|\\r?\\n|\\r)([\\t ]*)(?:[~-]|[&!]?=)).*,[\\t ]*(?:(?:\\r?\\n|\\r)\\2[\\t ]+.*,[\\t ]*)*(?:(?:\\r?\\n|\\r)\\2[\\t ]+.+)/,\n        lookbehind: true,\n        inside: {\n          rest: Prism.languages.ruby\n        }\n      }, {\n        pattern: /((?:^|\\r?\\n|\\r)([\\t ]*)(?:[~-]|[&!]?=)).*\\|[\\t ]*(?:(?:\\r?\\n|\\r)\\2[\\t ]+.*\\|[\\t ]*)*/,\n        lookbehind: true,\n        inside: {\n          rest: Prism.languages.ruby\n        }\n      }],\n      // See at the end of the file for known filters\n      filter: {\n        pattern: /((?:^|\\r?\\n|\\r)([\\t ]*)):[\\w-]+(?:(?:\\r?\\n|\\r)(?:\\2[\\t ]+.+|\\s*?(?=\\r?\\n|\\r)))+/,\n        lookbehind: true,\n        inside: {\n          'filter-name': {\n            pattern: /^:[\\w-]+/,\n            alias: 'variable'\n          }\n        }\n      },\n      markup: {\n        pattern: /((?:^|\\r?\\n|\\r)[\\t ]*)<.+/,\n        lookbehind: true,\n        inside: {\n          rest: Prism.languages.markup\n        }\n      },\n      doctype: {\n        pattern: /((?:^|\\r?\\n|\\r)[\\t ]*)!!!(?: .+)?/,\n        lookbehind: true\n      },\n      tag: {\n        // Allows for one nested group of braces\n        pattern: /((?:^|\\r?\\n|\\r)[\\t ]*)[%.#][\\w\\-#.]*[\\w\\-](?:\\([^)]+\\)|\\{(?:\\{[^}]+\\}|[^}])+\\}|\\[[^\\]]+\\])*[\\/<>]*/,\n        lookbehind: true,\n        inside: {\n          attributes: [{\n            // Lookbehind tries to prevent interpolations from breaking it all\n            // Allows for one nested group of braces\n            pattern: /(^|[^#])\\{(?:\\{[^}]+\\}|[^}])+\\}/,\n            lookbehind: true,\n            inside: {\n              rest: Prism.languages.ruby\n            }\n          }, {\n            pattern: /\\([^)]+\\)/,\n            inside: {\n              'attr-value': {\n                pattern: /(=\\s*)(?:\"(?:\\\\.|[^\\\\\"\\r\\n])*\"|[^)\\s]+)/,\n                lookbehind: true\n              },\n              'attr-name': /[\\w:-]+(?=\\s*!?=|\\s*[,)])/,\n              punctuation: /[=(),]/\n            }\n          }, {\n            pattern: /\\[[^\\]]+\\]/,\n            inside: {\n              rest: Prism.languages.ruby\n            }\n          }],\n          punctuation: /[<>]/\n        }\n      },\n      code: {\n        pattern: /((?:^|\\r?\\n|\\r)[\\t ]*(?:[~-]|[&!]?=)).+/,\n        lookbehind: true,\n        inside: {\n          rest: Prism.languages.ruby\n        }\n      },\n      // Interpolations in plain text\n      interpolation: {\n        pattern: /#\\{[^}]+\\}/,\n        inside: {\n          delimiter: {\n            pattern: /^#\\{|\\}$/,\n            alias: 'punctuation'\n          },\n          rest: Prism.languages.ruby\n        }\n      },\n      punctuation: {\n        pattern: /((?:^|\\r?\\n|\\r)[\\t ]*)[~=\\-&!]+/,\n        lookbehind: true\n      }\n    };\n    var filter_pattern = '((?:^|\\\\r?\\\\n|\\\\r)([\\\\t ]*)):{{filter_name}}(?:(?:\\\\r?\\\\n|\\\\r)(?:\\\\2[\\\\t ]+.+|\\\\s*?(?=\\\\r?\\\\n|\\\\r)))+'; // Non exhaustive list of available filters and associated languages\n\n    var filters = ['css', {\n      filter: 'coffee',\n      language: 'coffeescript'\n    }, 'erb', 'javascript', 'less', 'markdown', 'ruby', 'scss', 'textile'];\n    var all_filters = {};\n\n    for (var i = 0, l = filters.length; i < l; i++) {\n      var filter = filters[i];\n      filter = typeof filter === 'string' ? {\n        filter: filter,\n        language: filter\n      } : filter;\n\n      if (Prism.languages[filter.language]) {\n        all_filters['filter-' + filter.filter] = {\n          pattern: RegExp(filter_pattern.replace('{{filter_name}}', filter.filter)),\n          lookbehind: true,\n          inside: {\n            'filter-name': {\n              pattern: /^:[\\w-]+/,\n              alias: 'variable'\n            },\n            rest: Prism.languages[filter.language]\n          }\n        };\n      }\n    }\n\n    Prism.languages.insertBefore('haml', 'filter', all_filters);\n  })(Prism);\n}","'use strict';\n\nmodule.exports = handlebars;\nhandlebars.displayName = 'handlebars';\nhandlebars.aliases = [];\n\nfunction handlebars(Prism) {\n  ;\n\n  (function (Prism) {\n    Prism.languages.handlebars = {\n      comment: /\\{\\{![\\s\\S]*?\\}\\}/,\n      delimiter: {\n        pattern: /^\\{\\{\\{?|\\}\\}\\}?$/i,\n        alias: 'punctuation'\n      },\n      string: /([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      number: /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee][+-]?\\d+)?/,\n      boolean: /\\b(?:true|false)\\b/,\n      block: {\n        pattern: /^(\\s*~?\\s*)[#\\/]\\S+?(?=\\s*~?\\s*$|\\s)/i,\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      brackets: {\n        pattern: /\\[[^\\]]+\\]/,\n        inside: {\n          punctuation: /\\[|\\]/,\n          variable: /[\\s\\S]+/\n        }\n      },\n      punctuation: /[!\"#%&'()*+,.\\/;<=>@\\[\\\\\\]^`{|}~]/,\n      variable: /[^!\"#%&'()*+,.\\/;<=>@\\[\\\\\\]^`{|}~\\s]+/\n    };\n    Prism.hooks.add('before-tokenize', function (env) {\n      var handlebarsPattern = /\\{\\{\\{[\\s\\S]+?\\}\\}\\}|\\{\\{[\\s\\S]+?\\}\\}/g;\n      Prism.languages['markup-templating'].buildPlaceholders(env, 'handlebars', handlebarsPattern);\n    });\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'handlebars');\n    });\n  })(Prism);\n}","'use strict';\n\nmodule.exports = haskell;\nhaskell.displayName = 'haskell';\nhaskell.aliases = [];\n\nfunction haskell(Prism) {\n  Prism.languages.haskell = {\n    comment: {\n      pattern: /(^|[^-!#$%*+=?&@|~.:<>^\\\\\\/])(?:--[^-!#$%*+=?&@|~.:<>^\\\\\\/].*|{-[\\s\\S]*?-})/m,\n      lookbehind: true\n    },\n    char: /'(?:[^\\\\']|\\\\(?:[abfnrtv\\\\\"'&]|\\^[A-Z@[\\]^_]|NUL|SOH|STX|ETX|EOT|ENQ|ACK|BEL|BS|HT|LF|VT|FF|CR|SO|SI|DLE|DC1|DC2|DC3|DC4|NAK|SYN|ETB|CAN|EM|SUB|ESC|FS|GS|RS|US|SP|DEL|\\d+|o[0-7]+|x[0-9a-fA-F]+))'/,\n    string: {\n      pattern: /\"(?:[^\\\\\"]|\\\\(?:[abfnrtv\\\\\"'&]|\\^[A-Z@[\\]^_]|NUL|SOH|STX|ETX|EOT|ENQ|ACK|BEL|BS|HT|LF|VT|FF|CR|SO|SI|DLE|DC1|DC2|DC3|DC4|NAK|SYN|ETB|CAN|EM|SUB|ESC|FS|GS|RS|US|SP|DEL|\\d+|o[0-7]+|x[0-9a-fA-F]+)|\\\\\\s+\\\\)*\"/,\n      greedy: true\n    },\n    keyword: /\\b(?:case|class|data|deriving|do|else|if|in|infixl|infixr|instance|let|module|newtype|of|primitive|then|type|where)\\b/,\n    import_statement: {\n      // The imported or hidden names are not included in this import\n      // statement. This is because we want to highlight those exactly like\n      // we do for the names in the program.\n      pattern: /((?:\\r?\\n|\\r|^)\\s*)import\\s+(?:qualified\\s+)?(?:[A-Z][\\w']*)(?:\\.[A-Z][\\w']*)*(?:\\s+as\\s+(?:[A-Z][_a-zA-Z0-9']*)(?:\\.[A-Z][\\w']*)*)?(?:\\s+hiding\\b)?/m,\n      lookbehind: true,\n      inside: {\n        keyword: /\\b(?:import|qualified|as|hiding)\\b/\n      }\n    },\n    // These are builtin variables only. Constructors are highlighted later as a constant.\n    builtin: /\\b(?:abs|acos|acosh|all|and|any|appendFile|approxRational|asTypeOf|asin|asinh|atan|atan2|atanh|basicIORun|break|catch|ceiling|chr|compare|concat|concatMap|const|cos|cosh|curry|cycle|decodeFloat|denominator|digitToInt|div|divMod|drop|dropWhile|either|elem|encodeFloat|enumFrom|enumFromThen|enumFromThenTo|enumFromTo|error|even|exp|exponent|fail|filter|flip|floatDigits|floatRadix|floatRange|floor|fmap|foldl|foldl1|foldr|foldr1|fromDouble|fromEnum|fromInt|fromInteger|fromIntegral|fromRational|fst|gcd|getChar|getContents|getLine|group|head|id|inRange|index|init|intToDigit|interact|ioError|isAlpha|isAlphaNum|isAscii|isControl|isDenormalized|isDigit|isHexDigit|isIEEE|isInfinite|isLower|isNaN|isNegativeZero|isOctDigit|isPrint|isSpace|isUpper|iterate|last|lcm|length|lex|lexDigits|lexLitChar|lines|log|logBase|lookup|map|mapM|mapM_|max|maxBound|maximum|maybe|min|minBound|minimum|mod|negate|not|notElem|null|numerator|odd|or|ord|otherwise|pack|pi|pred|primExitWith|print|product|properFraction|putChar|putStr|putStrLn|quot|quotRem|range|rangeSize|read|readDec|readFile|readFloat|readHex|readIO|readInt|readList|readLitChar|readLn|readOct|readParen|readSigned|reads|readsPrec|realToFrac|recip|rem|repeat|replicate|return|reverse|round|scaleFloat|scanl|scanl1|scanr|scanr1|seq|sequence|sequence_|show|showChar|showInt|showList|showLitChar|showParen|showSigned|showString|shows|showsPrec|significand|signum|sin|sinh|snd|sort|span|splitAt|sqrt|subtract|succ|sum|tail|take|takeWhile|tan|tanh|threadToIOResult|toEnum|toInt|toInteger|toLower|toRational|toUpper|truncate|uncurry|undefined|unlines|until|unwords|unzip|unzip3|userError|words|writeFile|zip|zip3|zipWith|zipWith3)\\b/,\n    // decimal integers and floating point numbers | octal integers | hexadecimal integers\n    number: /\\b(?:\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?|0o[0-7]+|0x[0-9a-f]+)\\b/i,\n    // Most of this is needed because of the meaning of a single '.'.\n    // If it stands alone freely, it is the function composition.\n    // It may also be a separator between a module name and an identifier => no\n    // operator. If it comes together with other special characters it is an\n    // operator too.\n    operator: /\\s\\.\\s|[-!#$%*+=?&@|~.:<>^\\\\\\/]*\\.[-!#$%*+=?&@|~.:<>^\\\\\\/]+|[-!#$%*+=?&@|~.:<>^\\\\\\/]+\\.[-!#$%*+=?&@|~.:<>^\\\\\\/]*|[-!#$%*+=?&@|~:<>^\\\\\\/]+|`([A-Z][\\w']*\\.)*[_a-z][\\w']*`/,\n    // In Haskell, nearly everything is a variable, do not highlight these.\n    hvariable: /\\b(?:[A-Z][\\w']*\\.)*[_a-z][\\w']*\\b/,\n    constant: /\\b(?:[A-Z][\\w']*\\.)*[A-Z][\\w']*\\b/,\n    punctuation: /[{}[\\];(),.:]/\n  };\n}","'use strict';\n\nmodule.exports = haxe;\nhaxe.displayName = 'haxe';\nhaxe.aliases = [];\n\nfunction haxe(Prism) {\n  Prism.languages.haxe = Prism.languages.extend('clike', {\n    // Strings can be multi-line\n    string: {\n      pattern: /([\"'])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern: /(^|[^\\\\])\\$(?:\\w+|\\{[^}]+\\})/,\n          lookbehind: true,\n          inside: {\n            interpolation: {\n              pattern: /^\\$\\w*/,\n              alias: 'variable' // See rest below\n\n            }\n          }\n        }\n      }\n    },\n    // The final look-ahead prevents highlighting of keywords if expressions such as \"haxe.macro.Expr\"\n    keyword: /\\bthis\\b|\\b(?:abstract|as|break|case|cast|catch|class|continue|default|do|dynamic|else|enum|extends|extern|from|for|function|if|implements|import|in|inline|interface|macro|new|null|override|public|private|return|static|super|switch|throw|to|try|typedef|using|var|while)(?!\\.)\\b/,\n    operator: /\\.{3}|\\+\\+?|-[->]?|[=!]=?|&&?|\\|\\|?|<[<=]?|>[>=]?|[*\\/%~^]/\n  });\n  Prism.languages.insertBefore('haxe', 'class-name', {\n    regex: {\n      pattern: /~\\/(?:[^\\/\\\\\\r\\n]|\\\\.)+\\/[igmsu]*/,\n      greedy: true\n    }\n  });\n  Prism.languages.insertBefore('haxe', 'keyword', {\n    preprocessor: {\n      pattern: /#\\w+/,\n      alias: 'builtin'\n    },\n    metadata: {\n      pattern: /@:?\\w+/,\n      alias: 'symbol'\n    },\n    reification: {\n      pattern: /\\$(?:\\w+|(?=\\{))/,\n      alias: 'variable'\n    }\n  });\n  Prism.languages.haxe['string'].inside['interpolation'].inside.rest = Prism.languages.haxe;\n  delete Prism.languages.haxe['class-name'];\n}","'use strict';\n\nmodule.exports = hpkp;\nhpkp.displayName = 'hpkp';\nhpkp.aliases = [];\n\nfunction hpkp(Prism) {\n  /**\n   * Original by Scott Helme.\n   *\n   * Reference: https://scotthelme.co.uk/hpkp-cheat-sheet/\n   */\n  Prism.languages.hpkp = {\n    directive: {\n      pattern: /\\b(?:(?:includeSubDomains|preload|strict)(?: |;)|pin-sha256=\"[a-zA-Z\\d+=/]+\"|(?:max-age|report-uri)=|report-to )/,\n      alias: 'keyword'\n    },\n    safe: {\n      pattern: /\\d{7,}/,\n      alias: 'selector'\n    },\n    unsafe: {\n      pattern: /\\d{0,6}/,\n      alias: 'function'\n    }\n  };\n}","'use strict';\n\nmodule.exports = hsts;\nhsts.displayName = 'hsts';\nhsts.aliases = [];\n\nfunction hsts(Prism) {\n  /**\n   * Original by Scott Helme.\n   *\n   * Reference: https://scotthelme.co.uk/hsts-cheat-sheet/\n   */\n  Prism.languages.hsts = {\n    directive: {\n      pattern: /\\b(?:max-age=|includeSubDomains|preload)/,\n      alias: 'keyword'\n    },\n    safe: {\n      pattern: /\\d{8,}/,\n      alias: 'selector'\n    },\n    unsafe: {\n      pattern: /\\d{0,7}/,\n      alias: 'function'\n    }\n  };\n}","'use strict';\n\nmodule.exports = http;\nhttp.displayName = 'http';\nhttp.aliases = [];\n\nfunction http(Prism) {\n  Prism.languages.http = {\n    'request-line': {\n      pattern: /^(?:POST|GET|PUT|DELETE|OPTIONS|PATCH|TRACE|CONNECT)\\s(?:https?:\\/\\/|\\/)\\S+\\sHTTP\\/[0-9.]+/m,\n      inside: {\n        // HTTP Verb\n        property: /^(?:POST|GET|PUT|DELETE|OPTIONS|PATCH|TRACE|CONNECT)\\b/,\n        // Path or query argument\n        'attr-name': /:\\w+/\n      }\n    },\n    'response-status': {\n      pattern: /^HTTP\\/1.[01] \\d+.*/m,\n      inside: {\n        // Status, e.g. 200 OK\n        property: {\n          pattern: /(^HTTP\\/1.[01] )\\d+.*/i,\n          lookbehind: true\n        }\n      }\n    },\n    // HTTP header name\n    'header-name': {\n      pattern: /^[\\w-]+:(?=.)/m,\n      alias: 'keyword'\n    } // Create a mapping of Content-Type headers to language definitions\n\n  };\n  var httpLanguages = {\n    'application/json': Prism.languages.javascript,\n    'application/xml': Prism.languages.markup,\n    'text/xml': Prism.languages.markup,\n    'text/html': Prism.languages.markup // Insert each content type parser that has its associated language\n    // currently loaded.\n\n  };\n\n  for (var contentType in httpLanguages) {\n    if (httpLanguages[contentType]) {\n      var options = {};\n      options[contentType] = {\n        pattern: new RegExp('(content-type:\\\\s*' + contentType + '[\\\\w\\\\W]*?)(?:\\\\r?\\\\n|\\\\r){2}[\\\\w\\\\W]*', 'i'),\n        lookbehind: true,\n        inside: {\n          rest: httpLanguages[contentType]\n        }\n      };\n      Prism.languages.insertBefore('http', 'header-name', options);\n    }\n  }\n}","'use strict';\n\nmodule.exports = ichigojam;\nichigojam.displayName = 'ichigojam';\nichigojam.aliases = [];\n\nfunction ichigojam(Prism) {\n  // according to the offical reference (EN)\n  // https://ichigojam.net/IchigoJam-en.html\n  Prism.languages.ichigojam = {\n    comment: /(?:\\B'|REM)(?:[^\\n\\r]*)/i,\n    string: {\n      pattern: /\"(?:\"\"|[!#$%&'()*,\\/:;<=>?^_ +\\-.A-Z\\d])*\"/i,\n      greedy: true\n    },\n    number: /\\B#[0-9A-F]+|\\B`[01]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:E[+-]?\\d+)?/i,\n    keyword: /\\b(?:BEEP|BPS|CASE|CLEAR|CLK|CLO|CLP|CLS|CLT|CLV|CONT|COPY|ELSE|END|FILE|FILES|FOR|GOSUB|GSB|GOTO|IF|INPUT|KBD|LED|LET|LIST|LOAD|LOCATE|LRUN|NEW|NEXT|OUT|RIGHT|PLAY|POKE|PRINT|PWM|REM|RENUM|RESET|RETURN|RTN|RUN|SAVE|SCROLL|SLEEP|SRND|STEP|STOP|SUB|TEMPO|THEN|TO|UART|VIDEO|WAIT)(?:\\$|\\b)/i,\n    function: /\\b(?:ABS|ANA|ASC|BIN|BTN|DEC|END|FREE|HELP|HEX|I2CR|I2CW|IN|INKEY|LEN|LINE|PEEK|RND|SCR|SOUND|STR|TICK|USR|VER|VPEEK|ZER)(?:\\$|\\b)/i,\n    label: /(?:\\B@[^\\s]+)/i,\n    operator: /<[=>]?|>=?|\\|\\||&&|[+\\-*\\/=|&^~!]|\\b(?:AND|NOT|OR)\\b/i,\n    punctuation: /[\\[,;:()\\]]/\n  };\n}","'use strict';\n\nmodule.exports = icon;\nicon.displayName = 'icon';\nicon.aliases = [];\n\nfunction icon(Prism) {\n  Prism.languages.icon = {\n    comment: /#.*/,\n    string: {\n      pattern: /([\"'])(?:(?!\\1)[^\\\\\\r\\n_]|\\\\.|_(?!\\1)(?:\\r\\n|[\\s\\S]))*\\1/,\n      greedy: true\n    },\n    number: /\\b(?:\\d+r[a-z\\d]+|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b|\\.\\d+\\b/i,\n    'builtin-keyword': {\n      pattern: /&(?:allocated|ascii|clock|collections|cset|current|date|dateline|digits|dump|e|error(?:number|text|value)?|errout|fail|features|file|host|input|lcase|letters|level|line|main|null|output|phi|pi|pos|progname|random|regions|source|storage|subject|time|trace|ucase|version)\\b/,\n      alias: 'variable'\n    },\n    directive: {\n      pattern: /\\$\\w+/,\n      alias: 'builtin'\n    },\n    keyword: /\\b(?:break|by|case|create|default|do|else|end|every|fail|global|if|initial|invocable|link|local|next|not|of|procedure|record|repeat|return|static|suspend|then|to|until|while)\\b/,\n    function: /(?!\\d)\\w+(?=\\s*[({]|\\s*!\\s*\\[)/,\n    operator: /[+-]:(?!=)|(?:[\\/?@^%&]|\\+\\+?|--?|==?=?|~==?=?|\\*\\*?|\\|\\|\\|?|<(?:->?|<?=?)|>>?=?)(?::=)?|:(?:=:?)?|[!.\\\\|~]/,\n    punctuation: /[\\[\\](){},;]/\n  };\n}","'use strict';\n\nmodule.exports = inform7;\ninform7.displayName = 'inform7';\ninform7.aliases = [];\n\nfunction inform7(Prism) {\n  Prism.languages.inform7 = {\n    string: {\n      pattern: /\"[^\"]*\"/,\n      inside: {\n        substitution: {\n          pattern: /\\[[^\\]]+\\]/,\n          inside: {\n            delimiter: {\n              pattern: /\\[|\\]/,\n              alias: 'punctuation' // See rest below\n\n            }\n          }\n        }\n      }\n    },\n    comment: {\n      pattern: /\\[[^\\]]+\\]/,\n      greedy: true\n    },\n    title: {\n      pattern: /^[ \\t]*(?:volume|book|part(?! of)|chapter|section|table)\\b.+/im,\n      alias: 'important'\n    },\n    number: {\n      pattern: /(^|[^-])(?:\\b\\d+(?:\\.\\d+)?(?:\\^\\d+)?\\w*|\\b(?:one|two|three|four|five|six|seven|eight|nine|ten|eleven|twelve))\\b(?!-)/i,\n      lookbehind: true\n    },\n    verb: {\n      pattern: /(^|[^-])\\b(?:applying to|are|attacking|answering|asking|be(?:ing)?|burning|buying|called|carries|carry(?! out)|carrying|climbing|closing|conceal(?:s|ing)?|consulting|contain(?:s|ing)?|cutting|drinking|dropping|eating|enclos(?:es?|ing)|entering|examining|exiting|getting|giving|going|ha(?:ve|s|ving)|hold(?:s|ing)?|impl(?:y|ies)|incorporat(?:es?|ing)|inserting|is|jumping|kissing|listening|locking|looking|mean(?:s|ing)?|opening|provid(?:es?|ing)|pulling|pushing|putting|relat(?:es?|ing)|removing|searching|see(?:s|ing)?|setting|showing|singing|sleeping|smelling|squeezing|switching|support(?:s|ing)?|swearing|taking|tasting|telling|thinking|throwing|touching|turning|tying|unlock(?:s|ing)?|var(?:y|ies|ying)|waiting|waking|waving|wear(?:s|ing)?)\\b(?!-)/i,\n      lookbehind: true,\n      alias: 'operator'\n    },\n    keyword: {\n      pattern: /(^|[^-])\\b(?:after|before|carry out|check|continue the action|definition(?= *:)|do nothing|else|end (?:if|unless|the story)|every turn|if|include|instead(?: of)?|let|move|no|now|otherwise|repeat|report|resume the story|rule for|running through|say(?:ing)?|stop the action|test|try(?:ing)?|understand|unless|use|when|while|yes)\\b(?!-)/i,\n      lookbehind: true\n    },\n    property: {\n      pattern: /(^|[^-])\\b(?:adjacent(?! to)|carried|closed|concealed|contained|dark|described|edible|empty|enclosed|enterable|even|female|fixed in place|full|handled|held|improper-named|incorporated|inedible|invisible|lighted|lit|lock(?:able|ed)|male|marked for listing|mentioned|negative|neuter|non-(?:empty|full|recurring)|odd|opaque|open(?:able)?|plural-named|portable|positive|privately-named|proper-named|provided|publically-named|pushable between rooms|recurring|related|rubbing|scenery|seen|singular-named|supported|swinging|switch(?:able|ed(?: on| off)?)|touch(?:able|ed)|transparent|unconcealed|undescribed|unlit|unlocked|unmarked for listing|unmentioned|unopenable|untouchable|unvisited|variable|visible|visited|wearable|worn)\\b(?!-)/i,\n      lookbehind: true,\n      alias: 'symbol'\n    },\n    position: {\n      pattern: /(^|[^-])\\b(?:above|adjacent to|back side of|below|between|down|east|everywhere|front side|here|in|inside(?: from)?|north(?:east|west)?|nowhere|on(?: top of)?|other side|outside(?: from)?|parts? of|regionally in|south(?:east|west)?|through|up|west|within)\\b(?!-)/i,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    type: {\n      pattern: /(^|[^-])\\b(?:actions?|activit(?:y|ies)|actors?|animals?|backdrops?|containers?|devices?|directions?|doors?|holders?|kinds?|lists?|m[ae]n|nobody|nothing|nouns?|numbers?|objects?|people|persons?|player(?:'s holdall)?|regions?|relations?|rooms?|rule(?:book)?s?|scenes?|someone|something|supporters?|tables?|texts?|things?|time|vehicles?|wom[ae]n)\\b(?!-)/i,\n      lookbehind: true,\n      alias: 'variable'\n    },\n    punctuation: /[.,:;(){}]/\n  };\n  Prism.languages.inform7['string'].inside['substitution'].inside.rest = Prism.languages.inform7; // We don't want the remaining text in the substitution to be highlighted as the string.\n\n  Prism.languages.inform7['string'].inside['substitution'].inside.rest.text = {\n    pattern: /\\S(?:\\s*\\S)*/,\n    alias: 'comment'\n  };\n}","'use strict';\n\nmodule.exports = ini;\nini.displayName = 'ini';\nini.aliases = [];\n\nfunction ini(Prism) {\n  Prism.languages.ini = {\n    comment: /^[ \\t]*;.*$/m,\n    selector: /^[ \\t]*\\[.*?\\]/m,\n    constant: /^[ \\t]*[^\\s=]+?(?=[ \\t]*=)/m,\n    'attr-value': {\n      pattern: /=.*/,\n      inside: {\n        punctuation: /^[=]/\n      }\n    }\n  };\n}","'use strict';\n\nmodule.exports = io;\nio.displayName = 'io';\nio.aliases = [];\n\nfunction io(Prism) {\n  Prism.languages.io = {\n    comment: [{\n      pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n      lookbehind: true\n    }, {\n      pattern: /(^|[^\\\\])\\/\\/.*/,\n      lookbehind: true\n    }, {\n      pattern: /(^|[^\\\\])#.*/,\n      lookbehind: true\n    }],\n    'triple-quoted-string': {\n      pattern: /\"\"\"(?:\\\\[\\s\\S]|(?!\"\"\")[^\\\\])*\"\"\"/,\n      greedy: true,\n      alias: 'string'\n    },\n    string: {\n      pattern: /\"(?:\\\\.|[^\\\\\\r\\n\"])*\"/,\n      greedy: true\n    },\n    keyword: /\\b(?:activate|activeCoroCount|asString|block|break|catch|clone|collectGarbage|compileString|continue|do|doFile|doMessage|doString|else|elseif|exit|for|foreach|forward|getSlot|getEnvironmentVariable|hasSlot|if|ifFalse|ifNil|ifNilEval|ifTrue|isActive|isNil|isResumable|list|message|method|parent|pass|pause|perform|performWithArgList|print|println|proto|raise|raiseResumable|removeSlot|resend|resume|schedulerSleepSeconds|self|sender|setSchedulerSleepSeconds|setSlot|shallowCopy|slotNames|super|system|then|thisBlock|thisContext|call|try|type|uniqueId|updateSlot|wait|while|write|yield)\\b/,\n    builtin: /\\b(?:Array|AudioDevice|AudioMixer|Block|Box|Buffer|CFunction|CGI|Color|Curses|DBM|DNSResolver|DOConnection|DOProxy|DOServer|Date|Directory|Duration|DynLib|Error|Exception|FFT|File|Fnmatch|Font|Future|GL|GLE|GLScissor|GLU|GLUCylinder|GLUQuadric|GLUSphere|GLUT|Host|Image|Importer|LinkList|List|Lobby|Locals|MD5|MP3Decoder|MP3Encoder|Map|Message|Movie|Notification|Number|Object|OpenGL|Point|Protos|Regex|SGML|SGMLElement|SGMLParser|SQLite|Server|Sequence|ShowMessage|SleepyCat|SleepyCatCursor|Socket|SocketManager|Sound|Soup|Store|String|Tree|UDPSender|UPDReceiver|URL|User|Warning|WeakLink|Random|BigNum|Sequence)\\b/,\n    boolean: /\\b(?:true|false|nil)\\b/,\n    number: /\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e-?\\d+)?/i,\n    operator: /[=!*/%+-^&|]=|>>?=?|<<?=?|:?:?=|\\+\\+?|--?|\\*\\*?|\\/\\/?|%|\\|\\|?|&&?|(\\b(?:return|and|or|not)\\b)|@@?|\\?\\??|\\.\\./,\n    punctuation: /[{}[\\];(),.:]/\n  };\n}","'use strict';\n\nmodule.exports = j;\nj.displayName = 'j';\nj.aliases = [];\n\nfunction j(Prism) {\n  Prism.languages.j = {\n    comment: /\\bNB\\..*/,\n    string: {\n      pattern: /'(?:''|[^'\\r\\n])*'/,\n      greedy: true\n    },\n    keyword: /\\b(?:(?:adverb|conjunction|CR|def|define|dyad|LF|monad|noun|verb)\\b|(?:assert|break|case|catch[dt]?|continue|do|else|elseif|end|fcase|for|for_\\w+|goto_\\w+|if|label_\\w+|return|select|throw|try|while|whilst)\\.)/,\n    verb: {\n      // Negative look-ahead prevents bad highlighting\n      // of ^: ;. =. =: !. !:\n      pattern: /(?!\\^:|;\\.|[=!][.:])(?:\\{(?:\\.|::?)?|p(?:\\.\\.?|:)|[=!\\]]|[<>+*\\-%$|,#][.:]?|[?^]\\.?|[;\\[]:?|[~}\"i][.:]|[ACeEIjLor]\\.|(?:[_\\/\\\\qsux]|_?\\d):)/,\n      alias: 'keyword'\n    },\n    number: /\\b_?(?:(?!\\d:)\\d+(?:\\.\\d+)?(?:(?:[ejpx]|ad|ar)_?\\d+(?:\\.\\d+)?)*(?:b_?[\\da-z]+(?:\\.[\\da-z]+)?)?|_(?!\\.))/,\n    adverb: {\n      pattern: /[~}]|[\\/\\\\]\\.?|[bfM]\\.|t[.:]/,\n      alias: 'builtin'\n    },\n    operator: /[=a][.:]|_\\./,\n    conjunction: {\n      pattern: /&(?:\\.:?|:)?|[.:@][.:]?|[!D][.:]|[;dHT]\\.|`:?|[\\^LS]:|\"/,\n      alias: 'variable'\n    },\n    punctuation: /[()]/\n  };\n}","'use strict';\n\nmodule.exports = jolie;\njolie.displayName = 'jolie';\njolie.aliases = [];\n\nfunction jolie(Prism) {\n  Prism.languages.jolie = Prism.languages.extend('clike', {\n    keyword: /\\b(?:include|define|is_defined|undef|main|init|outputPort|inputPort|Location|Protocol|Interfaces|RequestResponse|OneWay|type|interface|extender|throws|cset|csets|forward|Aggregates|Redirects|embedded|courier|execution|sequential|concurrent|single|scope|install|throw|comp|cH|default|global|linkIn|linkOut|synchronized|this|new|for|if|else|while|in|Jolie|Java|Javascript|nullProcess|spawn|constants|with|provide|until|exit|foreach|instanceof|over|service)\\b/,\n    builtin: /\\b(?:undefined|string|int|void|long|Byte|bool|double|float|char|any)\\b/,\n    number: /(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?l?/i,\n    operator: /-[-=>]?|\\+[+=]?|<[<=]?|[>=*!]=?|&&|\\|\\||[:?\\/%^]/,\n    symbol: /[|;@]/,\n    punctuation: /[,.]/,\n    string: {\n      pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    }\n  });\n  delete Prism.languages.jolie['class-name'];\n  delete Prism.languages.jolie['function'];\n  Prism.languages.insertBefore('jolie', 'keyword', {\n    function: {\n      pattern: /((?:\\b(?:outputPort|inputPort|in|service|courier)\\b|@)\\s*)\\w+/,\n      lookbehind: true\n    },\n    aggregates: {\n      pattern: /(\\bAggregates\\s*:\\s*)(?:\\w+(?:\\s+with\\s+\\w+)?\\s*,\\s*)*\\w+(?:\\s+with\\s+\\w+)?/,\n      lookbehind: true,\n      inside: {\n        withExtension: {\n          pattern: /\\bwith\\s+\\w+/,\n          inside: {\n            keyword: /\\bwith\\b/\n          }\n        },\n        function: {\n          pattern: /\\w+/\n        },\n        punctuation: {\n          pattern: /,/\n        }\n      }\n    },\n    redirects: {\n      pattern: /(\\bRedirects\\s*:\\s*)(?:\\w+\\s*=>\\s*\\w+\\s*,\\s*)*(?:\\w+\\s*=>\\s*\\w+)/,\n      lookbehind: true,\n      inside: {\n        punctuation: {\n          pattern: /,/\n        },\n        function: {\n          pattern: /\\w+/\n        },\n        symbol: {\n          pattern: /=>/\n        }\n      }\n    }\n  });\n}","'use strict';\n\nmodule.exports = json;\njson.displayName = 'json';\njson.aliases = ['jsonp'];\n\nfunction json(Prism) {\n  Prism.languages.json = {\n    property: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?=\\s*:)/i,\n    string: {\n      pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?!\\s*:)/,\n      greedy: true\n    },\n    number: /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee][+-]?\\d+)?/,\n    punctuation: /[{}[\\]);,]/,\n    operator: /:/g,\n    boolean: /\\b(?:true|false)\\b/i,\n    null: /\\bnull\\b/i\n  };\n  Prism.languages.jsonp = Prism.languages.json;\n}","'use strict';\n\nmodule.exports = julia;\njulia.displayName = 'julia';\njulia.aliases = [];\n\nfunction julia(Prism) {\n  Prism.languages.julia = {\n    comment: {\n      pattern: /(^|[^\\\\])#.*/,\n      lookbehind: true\n    },\n    string: /(\"\"\"|''')[\\s\\S]+?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2/,\n    keyword: /\\b(?:abstract|baremodule|begin|bitstype|break|catch|ccall|const|continue|do|else|elseif|end|export|finally|for|function|global|if|immutable|import|importall|let|local|macro|module|print|println|quote|return|try|type|typealias|using|while)\\b/,\n    boolean: /\\b(?:true|false)\\b/,\n    number: /(?:\\b(?=\\d)|\\B(?=\\.))(?:0[box])?(?:[\\da-f]+\\.?\\d*|\\.\\d+)(?:[efp][+-]?\\d+)?j?/i,\n    operator: /[-+*^%÷&$\\\\]=?|\\/[\\/=]?|!=?=?|\\|[=>]?|<(?:<=?|[=:])?|>(?:=|>>?=?)?|==?=?|[~≠≤≥]/,\n    punctuation: /[{}[\\];(),.:]/\n  };\n}","'use strict';\n\nmodule.exports = keyman;\nkeyman.displayName = 'keyman';\nkeyman.aliases = [];\n\nfunction keyman(Prism) {\n  Prism.languages.keyman = {\n    comment: /\\bc\\s.*/i,\n    function: /\\[\\s*(?:(?:CTRL|SHIFT|ALT|LCTRL|RCTRL|LALT|RALT|CAPS|NCAPS)\\s+)*(?:[TKU]_[\\w?]+|\".+?\"|'.+?')\\s*\\]/i,\n    // virtual key\n    string: /(\"|').*?\\1/,\n    bold: [// header statements, system stores and variable system stores\n    /&(?:baselayout|bitmap|capsononly|capsalwaysoff|shiftfreescaps|copyright|ethnologuecode|hotkey|includecodes|keyboardversion|kmw_embedcss|kmw_embedjs|kmw_helpfile|kmw_helptext|kmw_rtl|language|layer|layoutfile|message|mnemoniclayout|name|oldcharposmatching|platform|targets|version|visualkeyboard|windowslanguages)\\b/i, /\\b(?:bitmap|bitmaps|caps on only|caps always off|shift frees caps|copyright|hotkey|language|layout|message|name|version)\\b/i],\n    keyword: /\\b(?:any|baselayout|beep|call|context|deadkey|dk|if|index|layer|notany|nul|outs|platform|return|reset|save|set|store|use)\\b/i,\n    // rule keywords\n    atrule: /\\b(?:ansi|begin|unicode|group|using keys|match|nomatch)\\b/i,\n    // structural keywords\n    number: /\\b(?:U\\+[\\dA-F]+|d\\d+|x[\\da-f]+|\\d+)\\b/i,\n    // U+####, x###, d### characters and numbers\n    operator: /[+>\\\\,()]/,\n    tag: /\\$(?:keyman|kmfl|weaver|keymanweb|keymanonly):/i // prefixes\n\n  };\n}","'use strict';\n\nmodule.exports = kotlin;\nkotlin.displayName = 'kotlin';\nkotlin.aliases = [];\n\nfunction kotlin(Prism) {\n  ;\n\n  (function (Prism) {\n    Prism.languages.kotlin = Prism.languages.extend('clike', {\n      keyword: {\n        // The lookbehind prevents wrong highlighting of e.g. kotlin.properties.get\n        pattern: /(^|[^.])\\b(?:abstract|actual|annotation|as|break|by|catch|class|companion|const|constructor|continue|crossinline|data|do|dynamic|else|enum|expect|external|final|finally|for|fun|get|if|import|in|infix|init|inline|inner|interface|internal|is|lateinit|noinline|null|object|open|operator|out|override|package|private|protected|public|reified|return|sealed|set|super|suspend|tailrec|this|throw|to|try|typealias|val|var|vararg|when|where|while)\\b/,\n        lookbehind: true\n      },\n      function: [/\\w+(?=\\s*\\()/, {\n        pattern: /(\\.)\\w+(?=\\s*\\{)/,\n        lookbehind: true\n      }],\n      number: /\\b(?:0[xX][\\da-fA-F]+(?:_[\\da-fA-F]+)*|0[bB][01]+(?:_[01]+)*|\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?(?:[eE][+-]?\\d+(?:_\\d+)*)?[fFL]?)\\b/,\n      operator: /\\+[+=]?|-[-=>]?|==?=?|!(?:!|==?)?|[\\/*%<>]=?|[?:]:?|\\.\\.|&&|\\|\\||\\b(?:and|inv|or|shl|shr|ushr|xor)\\b/\n    });\n    delete Prism.languages.kotlin['class-name'];\n    Prism.languages.insertBefore('kotlin', 'string', {\n      'raw-string': {\n        pattern: /(\"\"\"|''')[\\s\\S]*?\\1/,\n        alias: 'string' // See interpolation below\n\n      }\n    });\n    Prism.languages.insertBefore('kotlin', 'keyword', {\n      annotation: {\n        pattern: /\\B@(?:\\w+:)?(?:[A-Z]\\w*|\\[[^\\]]+\\])/,\n        alias: 'builtin'\n      }\n    });\n    Prism.languages.insertBefore('kotlin', 'function', {\n      label: {\n        pattern: /\\w+@|@\\w+/,\n        alias: 'symbol'\n      }\n    });\n    var interpolation = [{\n      pattern: /\\$\\{[^}]+\\}/,\n      inside: {\n        delimiter: {\n          pattern: /^\\$\\{|\\}$/,\n          alias: 'variable'\n        },\n        rest: Prism.languages.kotlin\n      }\n    }, {\n      pattern: /\\$\\w+/,\n      alias: 'variable'\n    }];\n    Prism.languages.kotlin['string'].inside = Prism.languages.kotlin['raw-string'].inside = {\n      interpolation: interpolation\n    };\n  })(Prism);\n}","'use strict';\n\nmodule.exports = latex;\nlatex.displayName = 'latex';\nlatex.aliases = [];\n\nfunction latex(Prism) {\n  ;\n\n  (function (Prism) {\n    var funcPattern = /\\\\(?:[^a-z()[\\]]|[a-z*]+)/i,\n        insideEqu = {\n      'equation-command': {\n        pattern: funcPattern,\n        alias: 'regex'\n      }\n    };\n    Prism.languages.latex = {\n      comment: /%.*/m,\n      // the verbatim environment prints whitespace to the document\n      cdata: {\n        pattern: /(\\\\begin\\{((?:verbatim|lstlisting)\\*?)\\})[\\s\\S]*?(?=\\\\end\\{\\2\\})/,\n        lookbehind: true\n      },\n\n      /*\n       * equations can be between $ $ or \\( \\) or \\[ \\]\n       * (all are multiline)\n       */\n      equation: [{\n        pattern: /\\$(?:\\\\[\\s\\S]|[^\\\\$])*\\$|\\\\\\([\\s\\S]*?\\\\\\)|\\\\\\[[\\s\\S]*?\\\\\\]/,\n        inside: insideEqu,\n        alias: 'string'\n      }, {\n        pattern: /(\\\\begin\\{((?:equation|math|eqnarray|align|multline|gather)\\*?)\\})[\\s\\S]*?(?=\\\\end\\{\\2\\})/,\n        lookbehind: true,\n        inside: insideEqu,\n        alias: 'string'\n      }],\n\n      /*\n       * arguments which are keywords or references are highlighted\n       * as keywords\n       */\n      keyword: {\n        pattern: /(\\\\(?:begin|end|ref|cite|label|usepackage|documentclass)(?:\\[[^\\]]+\\])?\\{)[^}]+(?=\\})/,\n        lookbehind: true\n      },\n      url: {\n        pattern: /(\\\\url\\{)[^}]+(?=\\})/,\n        lookbehind: true\n      },\n\n      /*\n       * section or chapter headlines are highlighted as bold so that\n       * they stand out more\n       */\n      headline: {\n        pattern: /(\\\\(?:part|chapter|section|subsection|frametitle|subsubsection|paragraph|subparagraph|subsubparagraph|subsubsubparagraph)\\*?(?:\\[[^\\]]+\\])?\\{)[^}]+(?=\\}(?:\\[[^\\]]+\\])?)/,\n        lookbehind: true,\n        alias: 'class-name'\n      },\n      function: {\n        pattern: funcPattern,\n        alias: 'selector'\n      },\n      punctuation: /[[\\]{}&]/\n    };\n  })(Prism);\n}","'use strict';\n\nmodule.exports = less;\nless.displayName = 'less';\nless.aliases = [];\n\nfunction less(Prism) {\n  /* FIXME :\n  :extend() is not handled specifically : its highlighting is buggy.\n  Mixin usage must be inside a ruleset to be highlighted.\n  At-rules (e.g. import) containing interpolations are buggy.\n  Detached rulesets are highlighted as at-rules.\n  A comment before a mixin usage prevents the latter to be properly highlighted.\n  */\n  Prism.languages.less = Prism.languages.extend('css', {\n    comment: [/\\/\\*[\\s\\S]*?\\*\\//, {\n      pattern: /(^|[^\\\\])\\/\\/.*/,\n      lookbehind: true\n    }],\n    atrule: {\n      pattern: /@[\\w-]+?(?:\\([^{}]+\\)|[^(){};])*?(?=\\s*\\{)/i,\n      inside: {\n        punctuation: /[:()]/\n      }\n    },\n    // selectors and mixins are considered the same\n    selector: {\n      pattern: /(?:@\\{[\\w-]+\\}|[^{};\\s@])(?:@\\{[\\w-]+\\}|\\([^{}]*\\)|[^{};@])*?(?=\\s*\\{)/,\n      inside: {\n        // mixin parameters\n        variable: /@+[\\w-]+/\n      }\n    },\n    property: /(?:@\\{[\\w-]+\\}|[\\w-])+(?:\\+_?)?(?=\\s*:)/i,\n    punctuation: /[{}();:,]/,\n    operator: /[+\\-*\\/]/\n  }); // Invert function and punctuation positions\n\n  Prism.languages.insertBefore('less', 'punctuation', {\n    function: Prism.languages.less.function\n  });\n  Prism.languages.insertBefore('less', 'property', {\n    variable: [// Variable declaration (the colon must be consumed!)\n    {\n      pattern: /@[\\w-]+\\s*:/,\n      inside: {\n        punctuation: /:/\n      }\n    }, // Variable usage\n    /@@?[\\w-]+/],\n    'mixin-usage': {\n      pattern: /([{;]\\s*)[.#](?!\\d)[\\w-]+.*?(?=[(;])/,\n      lookbehind: true,\n      alias: 'function'\n    }\n  });\n}","'use strict';\n\nmodule.exports = liquid;\nliquid.displayName = 'liquid';\nliquid.aliases = [];\n\nfunction liquid(Prism) {\n  Prism.languages.liquid = {\n    keyword: /\\b(?:comment|endcomment|if|elsif|else|endif|unless|endunless|for|endfor|case|endcase|when|in|break|assign|continue|limit|offset|range|reversed|raw|endraw|capture|endcapture|tablerow|endtablerow)\\b/,\n    number: /\\b0b[01]+\\b|\\b0x[\\da-f]*\\.?[\\da-fp-]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?[df]?/i,\n    operator: {\n      pattern: /(^|[^.])(?:\\+[+=]?|-[-=]?|!=?|<<?=?|>>?>?=?|==?|&[&=]?|\\|[|=]?|\\*=?|\\/=?|%=?|\\^=?|[?:~])/m,\n      lookbehind: true\n    },\n    function: {\n      pattern: /(^|[\\s;|&])(?:append|prepend|capitalize|cycle|cols|increment|decrement|abs|at_least|at_most|ceil|compact|concat|date|default|divided_by|downcase|escape|escape_once|first|floor|join|last|lstrip|map|minus|modulo|newline_to_br|plus|remove|remove_first|replace|replace_first|reverse|round|rstrip|size|slice|sort|sort_natural|split|strip|strip_html|strip_newlines|times|truncate|truncatewords|uniq|upcase|url_decode|url_encode|include|paginate)(?=$|[\\s;|&])/,\n      lookbehind: true\n    }\n  };\n}","'use strict';\n\nmodule.exports = lisp;\nlisp.displayName = 'lisp';\nlisp.aliases = [];\n\nfunction lisp(Prism) {\n  ;\n\n  (function (Prism) {\n    // Functions to construct regular expressions\n    // simple form\n    // e.g. (interactive ... or (interactive)\n    function simple_form(name) {\n      return new RegExp('(\\\\()' + name + '(?=[\\\\s\\\\)])');\n    } // booleans and numbers\n\n\n    function primitive(pattern) {\n      return new RegExp('([\\\\s([])' + pattern + '(?=[\\\\s)])');\n    } // Patterns in regular expressions\n    // Symbol name. See https://www.gnu.org/software/emacs/manual/html_node/elisp/Symbol-Type.html\n    // & and : are excluded as they are usually used for special purposes\n\n\n    var symbol = '[-+*/_~!@$%^=<>{}\\\\w]+'; // symbol starting with & used in function arguments\n\n    var marker = '&' + symbol; // Open parenthesis for look-behind\n\n    var par = '(\\\\()';\n    var endpar = '(?=\\\\))'; // End the pattern with look-ahead space\n\n    var space = '(?=\\\\s)';\n    var language = {\n      // Three or four semicolons are considered a heading.\n      // See https://www.gnu.org/software/emacs/manual/html_node/elisp/Comment-Tips.html\n      heading: {\n        pattern: /;;;.*/,\n        alias: ['comment', 'title']\n      },\n      comment: /;.*/,\n      string: {\n        pattern: /\"(?:[^\"\\\\]*|\\\\.)*\"/,\n        greedy: true,\n        inside: {\n          argument: /[-A-Z]+(?=[.,\\s])/,\n          symbol: new RegExp('`' + symbol + \"'\")\n        }\n      },\n      'quoted-symbol': {\n        pattern: new RegExp(\"#?'\" + symbol),\n        alias: ['variable', 'symbol']\n      },\n      'lisp-property': {\n        pattern: new RegExp(':' + symbol),\n        alias: 'property'\n      },\n      splice: {\n        pattern: new RegExp(',@?' + symbol),\n        alias: ['symbol', 'variable']\n      },\n      keyword: [{\n        pattern: new RegExp(par + '(?:(?:lexical-)?let\\\\*?|(?:cl-)?letf|if|when|while|unless|cons|cl-loop|and|or|not|cond|setq|error|message|null|require|provide|use-package)' + space),\n        lookbehind: true\n      }, {\n        pattern: new RegExp(par + '(?:for|do|collect|return|finally|append|concat|in|by)' + space),\n        lookbehind: true\n      }],\n      declare: {\n        pattern: simple_form('declare'),\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      interactive: {\n        pattern: simple_form('interactive'),\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      boolean: {\n        pattern: primitive('(?:t|nil)'),\n        lookbehind: true\n      },\n      number: {\n        pattern: primitive('[-+]?\\\\d+(?:\\\\.\\\\d*)?'),\n        lookbehind: true\n      },\n      defvar: {\n        pattern: new RegExp(par + 'def(?:var|const|custom|group)\\\\s+' + symbol),\n        lookbehind: true,\n        inside: {\n          keyword: /^def[a-z]+/,\n          variable: new RegExp(symbol)\n        }\n      },\n      defun: {\n        pattern: new RegExp(par + '(?:cl-)?(?:defun\\\\*?|defmacro)\\\\s+' + symbol + '\\\\s+\\\\([\\\\s\\\\S]*?\\\\)'),\n        lookbehind: true,\n        inside: {\n          keyword: /^(?:cl-)?def\\S+/,\n          // See below, this property needs to be defined later so that it can\n          // reference the language object.\n          arguments: null,\n          function: {\n            pattern: new RegExp('(^\\\\s)' + symbol),\n            lookbehind: true\n          },\n          punctuation: /[()]/\n        }\n      },\n      lambda: {\n        pattern: new RegExp(par + 'lambda\\\\s+\\\\((?:&?' + symbol + '\\\\s*)*\\\\)'),\n        lookbehind: true,\n        inside: {\n          keyword: /^lambda/,\n          // See below, this property needs to be defined later so that it can\n          // reference the language object.\n          arguments: null,\n          punctuation: /[()]/\n        }\n      },\n      car: {\n        pattern: new RegExp(par + symbol),\n        lookbehind: true\n      },\n      punctuation: [// open paren, brackets, and close paren\n      /(['`,]?\\(|[)\\[\\]])/, // cons\n      {\n        pattern: /(\\s)\\.(?=\\s)/,\n        lookbehind: true\n      }]\n    };\n    var arg = {\n      'lisp-marker': new RegExp(marker),\n      rest: {\n        argument: {\n          pattern: new RegExp(symbol),\n          alias: 'variable'\n        },\n        varform: {\n          pattern: new RegExp(par + symbol + '\\\\s+\\\\S[\\\\s\\\\S]*' + endpar),\n          lookbehind: true,\n          inside: {\n            string: language.string,\n            boolean: language.boolean,\n            number: language.number,\n            symbol: language.symbol,\n            punctuation: /[()]/\n          }\n        }\n      }\n    };\n    var forms = '\\\\S+(?:\\\\s+\\\\S+)*';\n    var arglist = {\n      pattern: new RegExp(par + '[\\\\s\\\\S]*' + endpar),\n      lookbehind: true,\n      inside: {\n        'rest-vars': {\n          pattern: new RegExp('&(?:rest|body)\\\\s+' + forms),\n          inside: arg\n        },\n        'other-marker-vars': {\n          pattern: new RegExp('&(?:optional|aux)\\\\s+' + forms),\n          inside: arg\n        },\n        keys: {\n          pattern: new RegExp('&key\\\\s+' + forms + '(?:\\\\s+&allow-other-keys)?'),\n          inside: arg\n        },\n        argument: {\n          pattern: new RegExp(symbol),\n          alias: 'variable'\n        },\n        punctuation: /[()]/\n      }\n    };\n    language['lambda'].inside.arguments = arglist;\n    language['defun'].inside.arguments = Prism.util.clone(arglist);\n    language['defun'].inside.arguments.inside.sublist = arglist;\n    Prism.languages.lisp = language;\n    Prism.languages.elisp = language;\n    Prism.languages.emacs = language;\n    Prism.languages['emacs-lisp'] = language;\n  })(Prism);\n}","'use strict';\n\nmodule.exports = livescript;\nlivescript.displayName = 'livescript';\nlivescript.aliases = [];\n\nfunction livescript(Prism) {\n  Prism.languages.livescript = {\n    comment: [{\n      pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n      lookbehind: true\n    }, {\n      pattern: /(^|[^\\\\])#.*/,\n      lookbehind: true\n    }],\n    'interpolated-string': {\n      /* Look-behind and look-ahead prevents wrong behavior of the greedy pattern\n       * forcing it to match \"\"\"-quoted string when it would otherwise match \"-quoted first. */\n      pattern: /(^|[^\"])(\"\"\"|\")(?:\\\\[\\s\\S]|(?!\\2)[^\\\\])*\\2(?!\")/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        variable: {\n          pattern: /(^|[^\\\\])#[a-z_](?:-?[a-z]|[\\d_])*/m,\n          lookbehind: true\n        },\n        interpolation: {\n          pattern: /(^|[^\\\\])#\\{[^}]+\\}/m,\n          lookbehind: true,\n          inside: {\n            'interpolation-punctuation': {\n              pattern: /^#\\{|\\}$/,\n              alias: 'variable' // See rest below\n\n            }\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    },\n    string: [{\n      pattern: /('''|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n      greedy: true\n    }, {\n      pattern: /<\\[[\\s\\S]*?\\]>/,\n      greedy: true\n    }, /\\\\[^\\s,;\\])}]+/],\n    regex: [{\n      pattern: /\\/\\/(\\[.+?]|\\\\.|(?!\\/\\/)[^\\\\])+\\/\\/[gimyu]{0,5}/,\n      greedy: true,\n      inside: {\n        comment: {\n          pattern: /(^|[^\\\\])#.*/,\n          lookbehind: true\n        }\n      }\n    }, {\n      pattern: /\\/(\\[.+?]|\\\\.|[^/\\\\\\r\\n])+\\/[gimyu]{0,5}/,\n      greedy: true\n    }],\n    keyword: {\n      pattern: /(^|(?!-).)\\b(?:break|case|catch|class|const|continue|default|do|else|extends|fallthrough|finally|for(?: ever)?|function|if|implements|it|let|loop|new|null|otherwise|own|return|super|switch|that|then|this|throw|try|unless|until|var|void|when|while|yield)(?!-)\\b/m,\n      lookbehind: true\n    },\n    'keyword-operator': {\n      pattern: /(^|[^-])\\b(?:(?:delete|require|typeof)!|(?:and|by|delete|export|from|import(?: all)?|in|instanceof|is(?:nt| not)?|not|of|or|til|to|typeof|with|xor)(?!-)\\b)/m,\n      lookbehind: true,\n      alias: 'operator'\n    },\n    boolean: {\n      pattern: /(^|[^-])\\b(?:false|no|off|on|true|yes)(?!-)\\b/m,\n      lookbehind: true\n    },\n    argument: {\n      // Don't match .&. nor &&\n      pattern: /(^|(?!\\.&\\.)[^&])&(?!&)\\d*/m,\n      lookbehind: true,\n      alias: 'variable'\n    },\n    number: /\\b(?:\\d+~[\\da-z]+|\\d[\\d_]*(?:\\.\\d[\\d_]*)?(?:[a-z]\\w*)?)/i,\n    identifier: /[a-z_](?:-?[a-z]|[\\d_])*/i,\n    operator: [// Spaced .\n    {\n      pattern: /( )\\.(?= )/,\n      lookbehind: true\n    }, // Full list, in order:\n    // .= .~ .. ...\n    // .&. .^. .<<. .>>. .>>>.\n    // := :: ::=\n    // &&\n    // || |>\n    // < << <<< <<<<\n    // <- <-- <-! <--!\n    // <~ <~~ <~! <~~!\n    // <| <= <?\n    // > >> >= >?\n    // - -- -> -->\n    // + ++\n    // @ @@\n    // % %%\n    // * **\n    // ! != !~=\n    // !~> !~~>\n    // !-> !-->\n    // ~ ~> ~~> ~=\n    // = ==\n    // ^ ^^\n    // / ?\n    /\\.(?:[=~]|\\.\\.?)|\\.(?:[&|^]|<<|>>>?)\\.|:(?:=|:=?)|&&|\\|[|>]|<(?:<<?<?|--?!?|~~?!?|[|=?])?|>[>=?]?|-(?:->?|>)?|\\+\\+?|@@?|%%?|\\*\\*?|!(?:~?=|--?>|~?~>)?|~(?:~?>|=)?|==?|\\^\\^?|[\\/?]/],\n    punctuation: /[(){}\\[\\]|.,:;`]/\n  };\n  Prism.languages.livescript['interpolated-string'].inside['interpolation'].inside.rest = Prism.languages.livescript;\n}","'use strict';\n\nmodule.exports = lolcode;\nlolcode.displayName = 'lolcode';\nlolcode.aliases = [];\n\nfunction lolcode(Prism) {\n  Prism.languages.lolcode = {\n    comment: [/\\bOBTW\\s+[\\s\\S]*?\\s+TLDR\\b/, /\\bBTW.+/],\n    string: {\n      pattern: /\"(?::.|[^\"])*\"/,\n      inside: {\n        variable: /:\\{[^}]+\\}/,\n        symbol: [/:\\([a-f\\d]+\\)/i, /:\\[[^\\]]+\\]/, /:[)>o\":]/]\n      },\n      greedy: true\n    },\n    number: /(?:\\B-)?(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)/,\n    symbol: {\n      pattern: /(^|\\s)(?:A )?(?:YARN|NUMBR|NUMBAR|TROOF|BUKKIT|NOOB)(?=\\s|,|$)/,\n      lookbehind: true,\n      inside: {\n        keyword: /A(?=\\s)/\n      }\n    },\n    label: {\n      pattern: /((?:^|\\s)(?:IM IN YR|IM OUTTA YR) )[a-zA-Z]\\w*/,\n      lookbehind: true,\n      alias: 'string'\n    },\n    function: {\n      pattern: /((?:^|\\s)(?:I IZ|HOW IZ I|IZ) )[a-zA-Z]\\w*/,\n      lookbehind: true\n    },\n    keyword: [{\n      pattern: /(^|\\s)(?:O HAI IM|KTHX|HAI|KTHXBYE|I HAS A|ITZ(?: A)?|R|AN|MKAY|SMOOSH|MAEK|IS NOW(?: A)?|VISIBLE|GIMMEH|O RLY\\?|YA RLY|NO WAI|OIC|MEBBE|WTF\\?|OMG|OMGWTF|GTFO|IM IN YR|IM OUTTA YR|FOUND YR|YR|TIL|WILE|UPPIN|NERFIN|I IZ|HOW IZ I|IF U SAY SO|SRS|HAS A|LIEK(?: A)?|IZ)(?=\\s|,|$)/,\n      lookbehind: true\n    }, /'Z(?=\\s|,|$)/],\n    boolean: {\n      pattern: /(^|\\s)(?:WIN|FAIL)(?=\\s|,|$)/,\n      lookbehind: true\n    },\n    variable: {\n      pattern: /(^|\\s)IT(?=\\s|,|$)/,\n      lookbehind: true\n    },\n    operator: {\n      pattern: /(^|\\s)(?:NOT|BOTH SAEM|DIFFRINT|(?:SUM|DIFF|PRODUKT|QUOSHUNT|MOD|BIGGR|SMALLR|BOTH|EITHER|WON|ALL|ANY) OF)(?=\\s|,|$)/,\n      lookbehind: true\n    },\n    punctuation: /\\.{3}|…|,|!/\n  };\n}","'use strict';\n\nmodule.exports = lua;\nlua.displayName = 'lua';\nlua.aliases = [];\n\nfunction lua(Prism) {\n  Prism.languages.lua = {\n    comment: /^#!.+|--(?:\\[(=*)\\[[\\s\\S]*?\\]\\1\\]|.*)/m,\n    // \\z may be used to skip the following space\n    string: {\n      pattern: /([\"'])(?:(?!\\1)[^\\\\\\r\\n]|\\\\z(?:\\r\\n|\\s)|\\\\(?:\\r\\n|[\\s\\S]))*\\1|\\[(=*)\\[[\\s\\S]*?\\]\\2\\]/,\n      greedy: true\n    },\n    number: /\\b0x[a-f\\d]+\\.?[a-f\\d]*(?:p[+-]?\\d+)?\\b|\\b\\d+(?:\\.\\B|\\.?\\d*(?:e[+-]?\\d+)?\\b)|\\B\\.\\d+(?:e[+-]?\\d+)?\\b/i,\n    keyword: /\\b(?:and|break|do|else|elseif|end|false|for|function|goto|if|in|local|nil|not|or|repeat|return|then|true|until|while)\\b/,\n    function: /(?!\\d)\\w+(?=\\s*(?:[({]))/,\n    operator: [/[-+*%^&|#]|\\/\\/?|<[<=]?|>[>=]?|[=~]=?/, {\n      // Match \"..\" but don't break \"...\"\n      pattern: /(^|[^.])\\.\\.(?!\\.)/,\n      lookbehind: true\n    }],\n    punctuation: /[\\[\\](){},;]|\\.+|:+/\n  };\n}","'use strict';\n\nmodule.exports = makefile;\nmakefile.displayName = 'makefile';\nmakefile.aliases = [];\n\nfunction makefile(Prism) {\n  Prism.languages.makefile = {\n    comment: {\n      pattern: /(^|[^\\\\])#(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])*/,\n      lookbehind: true\n    },\n    string: {\n      pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    // Built-in target names\n    builtin: /\\.[A-Z][^:#=\\s]+(?=\\s*:(?!=))/,\n    // Targets\n    symbol: {\n      pattern: /^[^:=\\r\\n]+(?=\\s*:(?!=))/m,\n      inside: {\n        variable: /\\$+(?:[^(){}:#=\\s]+|(?=[({]))/\n      }\n    },\n    variable: /\\$+(?:[^(){}:#=\\s]+|\\([@*%<^+?][DF]\\)|(?=[({]))/,\n    keyword: [// Directives\n    /-include\\b|\\b(?:define|else|endef|endif|export|ifn?def|ifn?eq|include|override|private|sinclude|undefine|unexport|vpath)\\b/, // Functions\n    {\n      pattern: /(\\()(?:addsuffix|abspath|and|basename|call|dir|error|eval|file|filter(?:-out)?|findstring|firstword|flavor|foreach|guile|if|info|join|lastword|load|notdir|or|origin|patsubst|realpath|shell|sort|strip|subst|suffix|value|warning|wildcard|word(?:s|list)?)(?=[ \\t])/,\n      lookbehind: true\n    }],\n    operator: /(?:::|[?:+!])?=|[|@]/,\n    punctuation: /[:;(){}]/\n  };\n}","'use strict';\n\nmodule.exports = markdown;\nmarkdown.displayName = 'markdown';\nmarkdown.aliases = [];\n\nfunction markdown(Prism) {\n  Prism.languages.markdown = Prism.languages.extend('markup', {});\n  Prism.languages.insertBefore('markdown', 'prolog', {\n    blockquote: {\n      // > ...\n      pattern: /^>(?:[\\t ]*>)*/m,\n      alias: 'punctuation'\n    },\n    code: [{\n      // Prefixed by 4 spaces or 1 tab\n      pattern: /^(?: {4}|\\t).+/m,\n      alias: 'keyword'\n    }, {\n      // `code`\n      // ``code``\n      pattern: /``.+?``|`[^`\\n]+`/,\n      alias: 'keyword'\n    }],\n    title: [{\n      // title 1\n      // =======\n      // title 2\n      // -------\n      pattern: /\\w+.*(?:\\r?\\n|\\r)(?:==+|--+)/,\n      alias: 'important',\n      inside: {\n        punctuation: /==+$|--+$/\n      }\n    }, {\n      // # title 1\n      // ###### title 6\n      pattern: /(^\\s*)#+.+/m,\n      lookbehind: true,\n      alias: 'important',\n      inside: {\n        punctuation: /^#+|#+$/\n      }\n    }],\n    hr: {\n      // ***\n      // ---\n      // * * *\n      // -----------\n      pattern: /(^\\s*)([*-])(?:[\\t ]*\\2){2,}(?=\\s*$)/m,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    list: {\n      // * item\n      // + item\n      // - item\n      // 1. item\n      pattern: /(^\\s*)(?:[*+-]|\\d+\\.)(?=[\\t ].)/m,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    'url-reference': {\n      // [id]: http://example.com \"Optional title\"\n      // [id]: http://example.com 'Optional title'\n      // [id]: http://example.com (Optional title)\n      // [id]: <http://example.com> \"Optional title\"\n      pattern: /!?\\[[^\\]]+\\]:[\\t ]+(?:\\S+|<(?:\\\\.|[^>\\\\])+>)(?:[\\t ]+(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\)))?/,\n      inside: {\n        variable: {\n          pattern: /^(!?\\[)[^\\]]+/,\n          lookbehind: true\n        },\n        string: /(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\))$/,\n        punctuation: /^[\\[\\]!:]|[<>]/\n      },\n      alias: 'url'\n    },\n    bold: {\n      // **strong**\n      // __strong__\n      // Allow only one line break\n      pattern: /(^|[^\\\\])(\\*\\*|__)(?:(?:\\r?\\n|\\r)(?!\\r?\\n|\\r)|.)+?\\2/,\n      lookbehind: true,\n      inside: {\n        punctuation: /^\\*\\*|^__|\\*\\*$|__$/\n      }\n    },\n    italic: {\n      // *em*\n      // _em_\n      // Allow only one line break\n      pattern: /(^|[^\\\\])([*_])(?:(?:\\r?\\n|\\r)(?!\\r?\\n|\\r)|.)+?\\2/,\n      lookbehind: true,\n      inside: {\n        punctuation: /^[*_]|[*_]$/\n      }\n    },\n    url: {\n      // [example](http://example.com \"Optional title\")\n      // [example] [id]\n      pattern: /!?\\[[^\\]]+\\](?:\\([^\\s)]+(?:[\\t ]+\"(?:\\\\.|[^\"\\\\])*\")?\\)| ?\\[[^\\]\\n]*\\])/,\n      inside: {\n        variable: {\n          pattern: /(!?\\[)[^\\]]+(?=\\]$)/,\n          lookbehind: true\n        },\n        string: {\n          pattern: /\"(?:\\\\.|[^\"\\\\])*\"(?=\\)$)/\n        }\n      }\n    }\n  });\n  Prism.languages.markdown['bold'].inside['url'] = Prism.languages.markdown['url'];\n  Prism.languages.markdown['italic'].inside['url'] = Prism.languages.markdown['url'];\n  Prism.languages.markdown['bold'].inside['italic'] = Prism.languages.markdown['italic'];\n  Prism.languages.markdown['italic'].inside['bold'] = Prism.languages.markdown['bold'];\n}","'use strict';\n\nmodule.exports = markupTemplating;\nmarkupTemplating.displayName = 'markupTemplating';\nmarkupTemplating.aliases = [];\n\nfunction markupTemplating(Prism) {\n  Prism.languages['markup-templating'] = {};\n  Object.defineProperties(Prism.languages['markup-templating'], {\n    buildPlaceholders: {\n      // Tokenize all inline templating expressions matching placeholderPattern\n      // If the replaceFilter function is provided, it will be called with every match.\n      // If it returns false, the match will not be replaced.\n      value: function value(env, language, placeholderPattern, replaceFilter) {\n        if (env.language !== language) {\n          return;\n        }\n\n        env.tokenStack = [];\n        env.code = env.code.replace(placeholderPattern, function (match) {\n          if (typeof replaceFilter === 'function' && !replaceFilter(match)) {\n            return match;\n          }\n\n          var i = env.tokenStack.length; // Check for existing strings\n\n          while (env.code.indexOf('___' + language.toUpperCase() + i + '___') !== -1) {\n            ++i;\n          } // Create a sparse array\n\n\n          env.tokenStack[i] = match;\n          return '___' + language.toUpperCase() + i + '___';\n        }); // Switch the grammar to markup\n\n        env.grammar = Prism.languages.markup;\n      }\n    },\n    tokenizePlaceholders: {\n      // Replace placeholders with proper tokens after tokenizing\n      value: function value(env, language) {\n        if (env.language !== language || !env.tokenStack) {\n          return;\n        } // Switch the grammar back\n\n\n        env.grammar = Prism.languages[language];\n        var j = 0;\n        var keys = Object.keys(env.tokenStack);\n\n        var walkTokens = function walkTokens(tokens) {\n          if (j >= keys.length) {\n            return;\n          }\n\n          for (var i = 0; i < tokens.length; i++) {\n            var token = tokens[i];\n\n            if (typeof token === 'string' || token.content && typeof token.content === 'string') {\n              var k = keys[j];\n              var t = env.tokenStack[k];\n              var s = typeof token === 'string' ? token : token.content;\n              var index = s.indexOf('___' + language.toUpperCase() + k + '___');\n\n              if (index > -1) {\n                ++j;\n                var before = s.substring(0, index);\n                var middle = new Prism.Token(language, Prism.tokenize(t, env.grammar, language), 'language-' + language, t);\n                var after = s.substring(index + ('___' + language.toUpperCase() + k + '___').length);\n                var replacement;\n\n                if (before || after) {\n                  replacement = [before, middle, after].filter(function (v) {\n                    return !!v;\n                  });\n                  walkTokens(replacement);\n                } else {\n                  replacement = middle;\n                }\n\n                if (typeof token === 'string') {\n                  Array.prototype.splice.apply(tokens, [i, 1].concat(replacement));\n                } else {\n                  token.content = replacement;\n                }\n\n                if (j >= keys.length) {\n                  break;\n                }\n              }\n            } else if (token.content && typeof token.content !== 'string') {\n              walkTokens(token.content);\n            }\n          }\n        };\n\n        walkTokens(env.tokens);\n      }\n    }\n  });\n}","'use strict';\n\nmodule.exports = matlab;\nmatlab.displayName = 'matlab';\nmatlab.aliases = [];\n\nfunction matlab(Prism) {\n  Prism.languages.matlab = {\n    comment: [/%\\{[\\s\\S]*?\\}%/, /%.+/],\n    string: {\n      pattern: /\\B'(?:''|[^'\\r\\n])*'/,\n      greedy: true\n    },\n    // FIXME We could handle imaginary numbers as a whole\n    number: /(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[eE][+-]?\\d+)?(?:[ij])?|\\b[ij]\\b/,\n    keyword: /\\b(?:break|case|catch|continue|else|elseif|end|for|function|if|inf|NaN|otherwise|parfor|pause|pi|return|switch|try|while)\\b/,\n    function: /(?!\\d)\\w+(?=\\s*\\()/,\n    operator: /\\.?[*^\\/\\\\']|[+\\-:@]|[<>=~]=?|&&?|\\|\\|?/,\n    punctuation: /\\.{3}|[.,;\\[\\](){}!]/\n  };\n}","'use strict';\n\nmodule.exports = mel;\nmel.displayName = 'mel';\nmel.aliases = [];\n\nfunction mel(Prism) {\n  Prism.languages.mel = {\n    comment: /\\/\\/.*/,\n    code: {\n      pattern: /`(?:\\\\.|[^\\\\`\\r\\n])*`/,\n      greedy: true,\n      alias: 'italic',\n      inside: {\n        delimiter: {\n          pattern: /^`|`$/,\n          alias: 'punctuation' // See rest below\n\n        }\n      }\n    },\n    string: {\n      pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n      greedy: true\n    },\n    variable: /\\$\\w+/,\n    number: /\\b0x[\\da-fA-F]+\\b|\\b\\d+\\.?\\d*|\\B\\.\\d+/,\n    flag: {\n      pattern: /-[^\\d\\W]\\w*/,\n      alias: 'operator'\n    },\n    keyword: /\\b(?:break|case|continue|default|do|else|float|for|global|if|in|int|matrix|proc|return|string|switch|vector|while)\\b/,\n    function: /\\w+(?=\\()|\\b(?:about|abs|addAttr|addAttributeEditorNodeHelp|addDynamic|addNewShelfTab|addPP|addPanelCategory|addPrefixToName|advanceToNextDrivenKey|affectedNet|affects|aimConstraint|air|alias|aliasAttr|align|alignCtx|alignCurve|alignSurface|allViewFit|ambientLight|angle|angleBetween|animCone|animCurveEditor|animDisplay|animView|annotate|appendStringArray|applicationName|applyAttrPreset|applyTake|arcLenDimContext|arcLengthDimension|arclen|arrayMapper|art3dPaintCtx|artAttrCtx|artAttrPaintVertexCtx|artAttrSkinPaintCtx|artAttrTool|artBuildPaintMenu|artFluidAttrCtx|artPuttyCtx|artSelectCtx|artSetPaintCtx|artUserPaintCtx|assignCommand|assignInputDevice|assignViewportFactories|attachCurve|attachDeviceAttr|attachSurface|attrColorSliderGrp|attrCompatibility|attrControlGrp|attrEnumOptionMenu|attrEnumOptionMenuGrp|attrFieldGrp|attrFieldSliderGrp|attrNavigationControlGrp|attrPresetEditWin|attributeExists|attributeInfo|attributeMenu|attributeQuery|autoKeyframe|autoPlace|bakeClip|bakeFluidShading|bakePartialHistory|bakeResults|bakeSimulation|basename|basenameEx|batchRender|bessel|bevel|bevelPlus|binMembership|bindSkin|blend2|blendShape|blendShapeEditor|blendShapePanel|blendTwoAttr|blindDataType|boneLattice|boundary|boxDollyCtx|boxZoomCtx|bufferCurve|buildBookmarkMenu|buildKeyframeMenu|button|buttonManip|CBG|cacheFile|cacheFileCombine|cacheFileMerge|cacheFileTrack|camera|cameraView|canCreateManip|canvas|capitalizeString|catch|catchQuiet|ceil|changeSubdivComponentDisplayLevel|changeSubdivRegion|channelBox|character|characterMap|characterOutlineEditor|characterize|chdir|checkBox|checkBoxGrp|checkDefaultRenderGlobals|choice|circle|circularFillet|clamp|clear|clearCache|clip|clipEditor|clipEditorCurrentTimeCtx|clipSchedule|clipSchedulerOutliner|clipTrimBefore|closeCurve|closeSurface|cluster|cmdFileOutput|cmdScrollFieldExecuter|cmdScrollFieldReporter|cmdShell|coarsenSubdivSelectionList|collision|color|colorAtPoint|colorEditor|colorIndex|colorIndexSliderGrp|colorSliderButtonGrp|colorSliderGrp|columnLayout|commandEcho|commandLine|commandPort|compactHairSystem|componentEditor|compositingInterop|computePolysetVolume|condition|cone|confirmDialog|connectAttr|connectControl|connectDynamic|connectJoint|connectionInfo|constrain|constrainValue|constructionHistory|container|containsMultibyte|contextInfo|control|convertFromOldLayers|convertIffToPsd|convertLightmap|convertSolidTx|convertTessellation|convertUnit|copyArray|copyFlexor|copyKey|copySkinWeights|cos|cpButton|cpCache|cpClothSet|cpCollision|cpConstraint|cpConvClothToMesh|cpForces|cpGetSolverAttr|cpPanel|cpProperty|cpRigidCollisionFilter|cpSeam|cpSetEdit|cpSetSolverAttr|cpSolver|cpSolverTypes|cpTool|cpUpdateClothUVs|createDisplayLayer|createDrawCtx|createEditor|createLayeredPsdFile|createMotionField|createNewShelf|createNode|createRenderLayer|createSubdivRegion|cross|crossProduct|ctxAbort|ctxCompletion|ctxEditMode|ctxTraverse|currentCtx|currentTime|currentTimeCtx|currentUnit|curve|curveAddPtCtx|curveCVCtx|curveEPCtx|curveEditorCtx|curveIntersect|curveMoveEPCtx|curveOnSurface|curveSketchCtx|cutKey|cycleCheck|cylinder|dagPose|date|defaultLightListCheckBox|defaultNavigation|defineDataServer|defineVirtualDevice|deformer|deg_to_rad|delete|deleteAttr|deleteShadingGroupsAndMaterials|deleteShelfTab|deleteUI|deleteUnusedBrushes|delrandstr|detachCurve|detachDeviceAttr|detachSurface|deviceEditor|devicePanel|dgInfo|dgdirty|dgeval|dgtimer|dimWhen|directKeyCtx|directionalLight|dirmap|dirname|disable|disconnectAttr|disconnectJoint|diskCache|displacementToPoly|displayAffected|displayColor|displayCull|displayLevelOfDetail|displayPref|displayRGBColor|displaySmoothness|displayStats|displayString|displaySurface|distanceDimContext|distanceDimension|doBlur|dolly|dollyCtx|dopeSheetEditor|dot|dotProduct|doubleProfileBirailSurface|drag|dragAttrContext|draggerContext|dropoffLocator|duplicate|duplicateCurve|duplicateSurface|dynCache|dynControl|dynExport|dynExpression|dynGlobals|dynPaintEditor|dynParticleCtx|dynPref|dynRelEdPanel|dynRelEditor|dynamicLoad|editAttrLimits|editDisplayLayerGlobals|editDisplayLayerMembers|editRenderLayerAdjustment|editRenderLayerGlobals|editRenderLayerMembers|editor|editorTemplate|effector|emit|emitter|enableDevice|encodeString|endString|endsWith|env|equivalent|equivalentTol|erf|error|eval|evalDeferred|evalEcho|event|exactWorldBoundingBox|exclusiveLightCheckBox|exec|executeForEachObject|exists|exp|expression|expressionEditorListen|extendCurve|extendSurface|extrude|fcheck|fclose|feof|fflush|fgetline|fgetword|file|fileBrowserDialog|fileDialog|fileExtension|fileInfo|filetest|filletCurve|filter|filterCurve|filterExpand|filterStudioImport|findAllIntersections|findAnimCurves|findKeyframe|findMenuItem|findRelatedSkinCluster|finder|firstParentOf|fitBspline|flexor|floatEq|floatField|floatFieldGrp|floatScrollBar|floatSlider|floatSlider2|floatSliderButtonGrp|floatSliderGrp|floor|flow|fluidCacheInfo|fluidEmitter|fluidVoxelInfo|flushUndo|fmod|fontDialog|fopen|formLayout|format|fprint|frameLayout|fread|freeFormFillet|frewind|fromNativePath|fwrite|gamma|gauss|geometryConstraint|getApplicationVersionAsFloat|getAttr|getClassification|getDefaultBrush|getFileList|getFluidAttr|getInputDeviceRange|getMayaPanelTypes|getModifiers|getPanel|getParticleAttr|getPluginResource|getenv|getpid|glRender|glRenderEditor|globalStitch|gmatch|goal|gotoBindPose|grabColor|gradientControl|gradientControlNoAttr|graphDollyCtx|graphSelectContext|graphTrackCtx|gravity|grid|gridLayout|group|groupObjectsByName|HfAddAttractorToAS|HfAssignAS|HfBuildEqualMap|HfBuildFurFiles|HfBuildFurImages|HfCancelAFR|HfConnectASToHF|HfCreateAttractor|HfDeleteAS|HfEditAS|HfPerformCreateAS|HfRemoveAttractorFromAS|HfSelectAttached|HfSelectAttractors|HfUnAssignAS|hardenPointCurve|hardware|hardwareRenderPanel|headsUpDisplay|headsUpMessage|help|helpLine|hermite|hide|hilite|hitTest|hotBox|hotkey|hotkeyCheck|hsv_to_rgb|hudButton|hudSlider|hudSliderButton|hwReflectionMap|hwRender|hwRenderLoad|hyperGraph|hyperPanel|hyperShade|hypot|iconTextButton|iconTextCheckBox|iconTextRadioButton|iconTextRadioCollection|iconTextScrollList|iconTextStaticLabel|ikHandle|ikHandleCtx|ikHandleDisplayScale|ikSolver|ikSplineHandleCtx|ikSystem|ikSystemInfo|ikfkDisplayMethod|illustratorCurves|image|imfPlugins|inheritTransform|insertJoint|insertJointCtx|insertKeyCtx|insertKnotCurve|insertKnotSurface|instance|instanceable|instancer|intField|intFieldGrp|intScrollBar|intSlider|intSliderGrp|interToUI|internalVar|intersect|iprEngine|isAnimCurve|isConnected|isDirty|isParentOf|isSameObject|isTrue|isValidObjectName|isValidString|isValidUiName|isolateSelect|itemFilter|itemFilterAttr|itemFilterRender|itemFilterType|joint|jointCluster|jointCtx|jointDisplayScale|jointLattice|keyTangent|keyframe|keyframeOutliner|keyframeRegionCurrentTimeCtx|keyframeRegionDirectKeyCtx|keyframeRegionDollyCtx|keyframeRegionInsertKeyCtx|keyframeRegionMoveKeyCtx|keyframeRegionScaleKeyCtx|keyframeRegionSelectKeyCtx|keyframeRegionSetKeyCtx|keyframeRegionTrackCtx|keyframeStats|lassoContext|lattice|latticeDeformKeyCtx|launch|launchImageEditor|layerButton|layeredShaderPort|layeredTexturePort|layout|layoutDialog|lightList|lightListEditor|lightListPanel|lightlink|lineIntersection|linearPrecision|linstep|listAnimatable|listAttr|listCameras|listConnections|listDeviceAttachments|listHistory|listInputDeviceAxes|listInputDeviceButtons|listInputDevices|listMenuAnnotation|listNodeTypes|listPanelCategories|listRelatives|listSets|listTransforms|listUnselected|listerEditor|loadFluid|loadNewShelf|loadPlugin|loadPluginLanguageResources|loadPrefObjects|localizedPanelLabel|lockNode|loft|log|longNameOf|lookThru|ls|lsThroughFilter|lsType|lsUI|Mayatomr|mag|makeIdentity|makeLive|makePaintable|makeRoll|makeSingleSurface|makeTubeOn|makebot|manipMoveContext|manipMoveLimitsCtx|manipOptions|manipRotateContext|manipRotateLimitsCtx|manipScaleContext|manipScaleLimitsCtx|marker|match|max|memory|menu|menuBarLayout|menuEditor|menuItem|menuItemToShelf|menuSet|menuSetPref|messageLine|min|minimizeApp|mirrorJoint|modelCurrentTimeCtx|modelEditor|modelPanel|mouse|movIn|movOut|move|moveIKtoFK|moveKeyCtx|moveVertexAlongDirection|multiProfileBirailSurface|mute|nParticle|nameCommand|nameField|namespace|namespaceInfo|newPanelItems|newton|nodeCast|nodeIconButton|nodeOutliner|nodePreset|nodeType|noise|nonLinear|normalConstraint|normalize|nurbsBoolean|nurbsCopyUVSet|nurbsCube|nurbsEditUV|nurbsPlane|nurbsSelect|nurbsSquare|nurbsToPoly|nurbsToPolygonsPref|nurbsToSubdiv|nurbsToSubdivPref|nurbsUVSet|nurbsViewDirectionVector|objExists|objectCenter|objectLayer|objectType|objectTypeUI|obsoleteProc|oceanNurbsPreviewPlane|offsetCurve|offsetCurveOnSurface|offsetSurface|openGLExtension|openMayaPref|optionMenu|optionMenuGrp|optionVar|orbit|orbitCtx|orientConstraint|outlinerEditor|outlinerPanel|overrideModifier|paintEffectsDisplay|pairBlend|palettePort|paneLayout|panel|panelConfiguration|panelHistory|paramDimContext|paramDimension|paramLocator|parent|parentConstraint|particle|particleExists|particleInstancer|particleRenderInfo|partition|pasteKey|pathAnimation|pause|pclose|percent|performanceOptions|pfxstrokes|pickWalk|picture|pixelMove|planarSrf|plane|play|playbackOptions|playblast|plugAttr|plugNode|pluginInfo|pluginResourceUtil|pointConstraint|pointCurveConstraint|pointLight|pointMatrixMult|pointOnCurve|pointOnSurface|pointPosition|poleVectorConstraint|polyAppend|polyAppendFacetCtx|polyAppendVertex|polyAutoProjection|polyAverageNormal|polyAverageVertex|polyBevel|polyBlendColor|polyBlindData|polyBoolOp|polyBridgeEdge|polyCacheMonitor|polyCheck|polyChipOff|polyClipboard|polyCloseBorder|polyCollapseEdge|polyCollapseFacet|polyColorBlindData|polyColorDel|polyColorPerVertex|polyColorSet|polyCompare|polyCone|polyCopyUV|polyCrease|polyCreaseCtx|polyCreateFacet|polyCreateFacetCtx|polyCube|polyCut|polyCutCtx|polyCylinder|polyCylindricalProjection|polyDelEdge|polyDelFacet|polyDelVertex|polyDuplicateAndConnect|polyDuplicateEdge|polyEditUV|polyEditUVShell|polyEvaluate|polyExtrudeEdge|polyExtrudeFacet|polyExtrudeVertex|polyFlipEdge|polyFlipUV|polyForceUV|polyGeoSampler|polyHelix|polyInfo|polyInstallAction|polyLayoutUV|polyListComponentConversion|polyMapCut|polyMapDel|polyMapSew|polyMapSewMove|polyMergeEdge|polyMergeEdgeCtx|polyMergeFacet|polyMergeFacetCtx|polyMergeUV|polyMergeVertex|polyMirrorFace|polyMoveEdge|polyMoveFacet|polyMoveFacetUV|polyMoveUV|polyMoveVertex|polyNormal|polyNormalPerVertex|polyNormalizeUV|polyOptUvs|polyOptions|polyOutput|polyPipe|polyPlanarProjection|polyPlane|polyPlatonicSolid|polyPoke|polyPrimitive|polyPrism|polyProjection|polyPyramid|polyQuad|polyQueryBlindData|polyReduce|polySelect|polySelectConstraint|polySelectConstraintMonitor|polySelectCtx|polySelectEditCtx|polySeparate|polySetToFaceNormal|polySewEdge|polyShortestPathCtx|polySmooth|polySoftEdge|polySphere|polySphericalProjection|polySplit|polySplitCtx|polySplitEdge|polySplitRing|polySplitVertex|polyStraightenUVBorder|polySubdivideEdge|polySubdivideFacet|polyToSubdiv|polyTorus|polyTransfer|polyTriangulate|polyUVSet|polyUnite|polyWedgeFace|popen|popupMenu|pose|pow|preloadRefEd|print|progressBar|progressWindow|projFileViewer|projectCurve|projectTangent|projectionContext|projectionManip|promptDialog|propModCtx|propMove|psdChannelOutliner|psdEditTextureFile|psdExport|psdTextureFile|putenv|pwd|python|querySubdiv|quit|rad_to_deg|radial|radioButton|radioButtonGrp|radioCollection|radioMenuItemCollection|rampColorPort|rand|randomizeFollicles|randstate|rangeControl|readTake|rebuildCurve|rebuildSurface|recordAttr|recordDevice|redo|reference|referenceEdit|referenceQuery|refineSubdivSelectionList|refresh|refreshAE|registerPluginResource|rehash|reloadImage|removeJoint|removeMultiInstance|removePanelCategory|rename|renameAttr|renameSelectionList|renameUI|render|renderGlobalsNode|renderInfo|renderLayerButton|renderLayerParent|renderLayerPostProcess|renderLayerUnparent|renderManip|renderPartition|renderQualityNode|renderSettings|renderThumbnailUpdate|renderWindowEditor|renderWindowSelectContext|renderer|reorder|reorderDeformers|requires|reroot|resampleFluid|resetAE|resetPfxToPolyCamera|resetTool|resolutionNode|retarget|reverseCurve|reverseSurface|revolve|rgb_to_hsv|rigidBody|rigidSolver|roll|rollCtx|rootOf|rot|rotate|rotationInterpolation|roundConstantRadius|rowColumnLayout|rowLayout|runTimeCommand|runup|sampleImage|saveAllShelves|saveAttrPreset|saveFluid|saveImage|saveInitialState|saveMenu|savePrefObjects|savePrefs|saveShelf|saveToolSettings|scale|scaleBrushBrightness|scaleComponents|scaleConstraint|scaleKey|scaleKeyCtx|sceneEditor|sceneUIReplacement|scmh|scriptCtx|scriptEditorInfo|scriptJob|scriptNode|scriptTable|scriptToShelf|scriptedPanel|scriptedPanelType|scrollField|scrollLayout|sculpt|searchPathArray|seed|selLoadSettings|select|selectContext|selectCurveCV|selectKey|selectKeyCtx|selectKeyframeRegionCtx|selectMode|selectPref|selectPriority|selectType|selectedNodes|selectionConnection|separator|setAttr|setAttrEnumResource|setAttrMapping|setAttrNiceNameResource|setConstraintRestPosition|setDefaultShadingGroup|setDrivenKeyframe|setDynamic|setEditCtx|setEditor|setFluidAttr|setFocus|setInfinity|setInputDeviceMapping|setKeyCtx|setKeyPath|setKeyframe|setKeyframeBlendshapeTargetWts|setMenuMode|setNodeNiceNameResource|setNodeTypeFlag|setParent|setParticleAttr|setPfxToPolyCamera|setPluginResource|setProject|setStampDensity|setStartupMessage|setState|setToolTo|setUITemplate|setXformManip|sets|shadingConnection|shadingGeometryRelCtx|shadingLightRelCtx|shadingNetworkCompare|shadingNode|shapeCompare|shelfButton|shelfLayout|shelfTabLayout|shellField|shortNameOf|showHelp|showHidden|showManipCtx|showSelectionInTitle|showShadingGroupAttrEditor|showWindow|sign|simplify|sin|singleProfileBirailSurface|size|sizeBytes|skinCluster|skinPercent|smoothCurve|smoothTangentSurface|smoothstep|snap2to2|snapKey|snapMode|snapTogetherCtx|snapshot|soft|softMod|softModCtx|sort|sound|soundControl|source|spaceLocator|sphere|sphrand|spotLight|spotLightPreviewPort|spreadSheetEditor|spring|sqrt|squareSurface|srtContext|stackTrace|startString|startsWith|stitchAndExplodeShell|stitchSurface|stitchSurfacePoints|strcmp|stringArrayCatenate|stringArrayContains|stringArrayCount|stringArrayInsertAtIndex|stringArrayIntersector|stringArrayRemove|stringArrayRemoveAtIndex|stringArrayRemoveDuplicates|stringArrayRemoveExact|stringArrayToString|stringToStringArray|strip|stripPrefixFromName|stroke|subdAutoProjection|subdCleanTopology|subdCollapse|subdDuplicateAndConnect|subdEditUV|subdListComponentConversion|subdMapCut|subdMapSewMove|subdMatchTopology|subdMirror|subdToBlind|subdToPoly|subdTransferUVsToCache|subdiv|subdivCrease|subdivDisplaySmoothness|substitute|substituteAllString|substituteGeometry|substring|surface|surfaceSampler|surfaceShaderList|swatchDisplayPort|switchTable|symbolButton|symbolCheckBox|sysFile|system|tabLayout|tan|tangentConstraint|texLatticeDeformContext|texManipContext|texMoveContext|texMoveUVShellContext|texRotateContext|texScaleContext|texSelectContext|texSelectShortestPathCtx|texSmudgeUVContext|texWinToolCtx|text|textCurves|textField|textFieldButtonGrp|textFieldGrp|textManip|textScrollList|textToShelf|textureDisplacePlane|textureHairColor|texturePlacementContext|textureWindow|threadCount|threePointArcCtx|timeControl|timePort|timerX|toNativePath|toggle|toggleAxis|toggleWindowVisibility|tokenize|tokenizeList|tolerance|tolower|toolButton|toolCollection|toolDropped|toolHasOptions|toolPropertyWindow|torus|toupper|trace|track|trackCtx|transferAttributes|transformCompare|transformLimits|translator|trim|trunc|truncateFluidCache|truncateHairCache|tumble|tumbleCtx|turbulence|twoPointArcCtx|uiRes|uiTemplate|unassignInputDevice|undo|undoInfo|ungroup|uniform|unit|unloadPlugin|untangleUV|untitledFileName|untrim|upAxis|updateAE|userCtx|uvLink|uvSnapshot|validateShelfName|vectorize|view2dToolCtx|viewCamera|viewClipPlane|viewFit|viewHeadOn|viewLookAt|viewManip|viewPlace|viewSet|visor|volumeAxis|vortex|waitCursor|warning|webBrowser|webBrowserPrefs|whatIs|window|windowPref|wire|wireContext|workspace|wrinkle|wrinkleContext|writeTake|xbmLangPathList|xform)\\b/,\n    operator: [/\\+[+=]?|-[-=]?|&&|\\|\\||[<>]=|[*\\/!=]=?|[%^]/, {\n      // We don't want to match <<\n      pattern: /(^|[^<])<(?!<)/,\n      lookbehind: true\n    }, {\n      // We don't want to match >>\n      pattern: /(^|[^>])>(?!>)/,\n      lookbehind: true\n    }],\n    punctuation: /<<|>>|[.,:;?\\[\\](){}]/\n  };\n  Prism.languages.mel['code'].inside.rest = Prism.languages.mel;\n}","'use strict';\n\nmodule.exports = mizar;\nmizar.displayName = 'mizar';\nmizar.aliases = [];\n\nfunction mizar(Prism) {\n  Prism.languages.mizar = {\n    comment: /::.+/,\n    keyword: /@proof\\b|\\b(?:according|aggregate|all|and|antonym|are|as|associativity|assume|asymmetry|attr|be|begin|being|by|canceled|case|cases|clusters?|coherence|commutativity|compatibility|connectedness|consider|consistency|constructors|contradiction|correctness|def|deffunc|define|definitions?|defpred|do|does|equals|end|environ|ex|exactly|existence|for|from|func|given|hence|hereby|holds|idempotence|identity|iff?|implies|involutiveness|irreflexivity|is|it|let|means|mode|non|not|notations?|now|of|or|otherwise|over|per|pred|prefix|projectivity|proof|provided|qua|reconsider|redefine|reduce|reducibility|reflexivity|registrations?|requirements|reserve|sch|schemes?|section|selector|set|sethood|st|struct|such|suppose|symmetry|synonym|take|that|the|then|theorems?|thesis|thus|to|transitivity|uniqueness|vocabular(?:y|ies)|when|where|with|wrt)\\b/,\n    parameter: {\n      pattern: /\\$(?:10|\\d)/,\n      alias: 'variable'\n    },\n    variable: /\\w+(?=:)/,\n    number: /(?:\\b|-)\\d+\\b/,\n    operator: /\\.\\.\\.|->|&|\\.?=/,\n    punctuation: /\\(#|#\\)|[,:;\\[\\](){}]/\n  };\n}","'use strict';\n\nmodule.exports = monkey;\nmonkey.displayName = 'monkey';\nmonkey.aliases = [];\n\nfunction monkey(Prism) {\n  Prism.languages.monkey = {\n    string: /\"[^\"\\r\\n]*\"/,\n    comment: [{\n      pattern: /^#Rem\\s+[\\s\\S]*?^#End/im,\n      greedy: true\n    }, {\n      pattern: /'.+/,\n      greedy: true\n    }],\n    preprocessor: {\n      pattern: /(^[ \\t]*)#.+/m,\n      lookbehind: true,\n      alias: 'comment'\n    },\n    function: /\\w+(?=\\()/,\n    'type-char': {\n      pattern: /(\\w)[?%#$]/,\n      lookbehind: true,\n      alias: 'variable'\n    },\n    number: {\n      pattern: /((?:\\.\\.)?)(?:(?:\\b|\\B-\\.?|\\B\\.)\\d+(?:(?!\\.\\.)\\.\\d*)?|\\$[\\da-f]+)/i,\n      lookbehind: true\n    },\n    keyword: /\\b(?:Void|Strict|Public|Private|Property|Bool|Int|Float|String|Array|Object|Continue|Exit|Import|Extern|New|Self|Super|Try|Catch|Eachin|True|False|Extends|Abstract|Final|Select|Case|Default|Const|Local|Global|Field|Method|Function|Class|End|If|Then|Else|ElseIf|EndIf|While|Wend|Repeat|Until|Forever|For|To|Step|Next|Return|Module|Interface|Implements|Inline|Throw|Null)\\b/i,\n    operator: /\\.\\.|<[=>]?|>=?|:?=|(?:[+\\-*\\/&~|]|\\b(?:Mod|Shl|Shr)\\b)=?|\\b(?:And|Not|Or)\\b/i,\n    punctuation: /[.,:;()\\[\\]]/\n  };\n}","'use strict';\n\nmodule.exports = n4js;\nn4js.displayName = 'n4js';\nn4js.aliases = [];\n\nfunction n4js(Prism) {\n  Prism.languages.n4js = Prism.languages.extend('javascript', {\n    // Keywords from N4JS language spec: https://numberfour.github.io/n4js/spec/N4JSSpec.html\n    keyword: /\\b(?:any|Array|boolean|break|case|catch|class|const|constructor|continue|debugger|declare|default|delete|do|else|enum|export|extends|false|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|module|new|null|number|package|private|protected|public|return|set|static|string|super|switch|this|throw|true|try|typeof|var|void|while|with|yield)\\b/\n  });\n  Prism.languages.insertBefore('n4js', 'constant', {\n    // Annotations in N4JS spec: https://numberfour.github.io/n4js/spec/N4JSSpec.html#_annotations\n    annotation: {\n      pattern: /@+\\w+/,\n      alias: 'operator'\n    }\n  });\n  Prism.languages.n4jsd = Prism.languages.n4js;\n}","'use strict';\n\nmodule.exports = nasm;\nnasm.displayName = 'nasm';\nnasm.aliases = [];\n\nfunction nasm(Prism) {\n  Prism.languages.nasm = {\n    comment: /;.*$/m,\n    string: /([\"'`])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    label: {\n      pattern: /(^\\s*)[A-Za-z._?$][\\w.?$@~#]*:/m,\n      lookbehind: true,\n      alias: 'function'\n    },\n    keyword: [/\\[?BITS (?:16|32|64)\\]?/, {\n      pattern: /(^\\s*)section\\s*[a-zA-Z.]+:?/im,\n      lookbehind: true\n    }, /(?:extern|global)[^;\\r\\n]*/i, /(?:CPU|FLOAT|DEFAULT).*$/m],\n    register: {\n      pattern: /\\b(?:st\\d|[xyz]mm\\d\\d?|[cdt]r\\d|r\\d\\d?[bwd]?|[er]?[abcd]x|[abcd][hl]|[er]?(?:bp|sp|si|di)|[cdefgs]s)\\b/i,\n      alias: 'variable'\n    },\n    number: /(?:\\b|(?=\\$))(?:0[hx][\\da-f]*\\.?[\\da-f]+(?:p[+-]?\\d+)?|\\d[\\da-f]+[hx]|\\$\\d[\\da-f]*|0[oq][0-7]+|[0-7]+[oq]|0[by][01]+|[01]+[by]|0[dt]\\d+|\\d*\\.?\\d+(?:\\.?e[+-]?\\d+)?[dt]?)\\b/i,\n    operator: /[\\[\\]*+\\-\\/%<>=&|$!]/\n  };\n}","'use strict';\n\nmodule.exports = nginx;\nnginx.displayName = 'nginx';\nnginx.aliases = [];\n\nfunction nginx(Prism) {\n  Prism.languages.nginx = Prism.languages.extend('clike', {\n    comment: {\n      pattern: /(^|[^\"{\\\\])#.*/,\n      lookbehind: true\n    },\n    keyword: /\\b(?:CONTENT_|DOCUMENT_|GATEWAY_|HTTP_|HTTPS|if_not_empty|PATH_|QUERY_|REDIRECT_|REMOTE_|REQUEST_|SCGI|SCRIPT_|SERVER_|http|events|accept_mutex|accept_mutex_delay|access_log|add_after_body|add_before_body|add_header|addition_types|aio|alias|allow|ancient_browser|ancient_browser_value|auth|auth_basic|auth_basic_user_file|auth_http|auth_http_header|auth_http_timeout|autoindex|autoindex_exact_size|autoindex_localtime|break|charset|charset_map|charset_types|chunked_transfer_encoding|client_body_buffer_size|client_body_in_file_only|client_body_in_single_buffer|client_body_temp_path|client_body_timeout|client_header_buffer_size|client_header_timeout|client_max_body_size|connection_pool_size|create_full_put_path|daemon|dav_access|dav_methods|debug_connection|debug_points|default_type|deny|devpoll_changes|devpoll_events|directio|directio_alignment|disable_symlinks|empty_gif|env|epoll_events|error_log|error_page|expires|fastcgi_buffer_size|fastcgi_buffers|fastcgi_busy_buffers_size|fastcgi_cache|fastcgi_cache_bypass|fastcgi_cache_key|fastcgi_cache_lock|fastcgi_cache_lock_timeout|fastcgi_cache_methods|fastcgi_cache_min_uses|fastcgi_cache_path|fastcgi_cache_purge|fastcgi_cache_use_stale|fastcgi_cache_valid|fastcgi_connect_timeout|fastcgi_hide_header|fastcgi_ignore_client_abort|fastcgi_ignore_headers|fastcgi_index|fastcgi_intercept_errors|fastcgi_keep_conn|fastcgi_max_temp_file_size|fastcgi_next_upstream|fastcgi_no_cache|fastcgi_param|fastcgi_pass|fastcgi_pass_header|fastcgi_read_timeout|fastcgi_redirect_errors|fastcgi_send_timeout|fastcgi_split_path_info|fastcgi_store|fastcgi_store_access|fastcgi_temp_file_write_size|fastcgi_temp_path|flv|geo|geoip_city|geoip_country|google_perftools_profiles|gzip|gzip_buffers|gzip_comp_level|gzip_disable|gzip_http_version|gzip_min_length|gzip_proxied|gzip_static|gzip_types|gzip_vary|if|if_modified_since|ignore_invalid_headers|image_filter|image_filter_buffer|image_filter_jpeg_quality|image_filter_sharpen|image_filter_transparency|imap_capabilities|imap_client_buffer|include|index|internal|ip_hash|keepalive|keepalive_disable|keepalive_requests|keepalive_timeout|kqueue_changes|kqueue_events|large_client_header_buffers|limit_conn|limit_conn_log_level|limit_conn_zone|limit_except|limit_rate|limit_rate_after|limit_req|limit_req_log_level|limit_req_zone|limit_zone|lingering_close|lingering_time|lingering_timeout|listen|location|lock_file|log_format|log_format_combined|log_not_found|log_subrequest|map|map_hash_bucket_size|map_hash_max_size|master_process|max_ranges|memcached_buffer_size|memcached_connect_timeout|memcached_next_upstream|memcached_pass|memcached_read_timeout|memcached_send_timeout|merge_slashes|min_delete_depth|modern_browser|modern_browser_value|mp4|mp4_buffer_size|mp4_max_buffer_size|msie_padding|msie_refresh|multi_accept|open_file_cache|open_file_cache_errors|open_file_cache_min_uses|open_file_cache_valid|open_log_file_cache|optimize_server_names|override_charset|pcre_jit|perl|perl_modules|perl_require|perl_set|pid|pop3_auth|pop3_capabilities|port_in_redirect|post_action|postpone_output|protocol|proxy|proxy_buffer|proxy_buffer_size|proxy_buffering|proxy_buffers|proxy_busy_buffers_size|proxy_cache|proxy_cache_bypass|proxy_cache_key|proxy_cache_lock|proxy_cache_lock_timeout|proxy_cache_methods|proxy_cache_min_uses|proxy_cache_path|proxy_cache_use_stale|proxy_cache_valid|proxy_connect_timeout|proxy_cookie_domain|proxy_cookie_path|proxy_headers_hash_bucket_size|proxy_headers_hash_max_size|proxy_hide_header|proxy_http_version|proxy_ignore_client_abort|proxy_ignore_headers|proxy_intercept_errors|proxy_max_temp_file_size|proxy_method|proxy_next_upstream|proxy_no_cache|proxy_pass|proxy_pass_error_message|proxy_pass_header|proxy_pass_request_body|proxy_pass_request_headers|proxy_read_timeout|proxy_redirect|proxy_redirect_errors|proxy_send_lowat|proxy_send_timeout|proxy_set_body|proxy_set_header|proxy_ssl_session_reuse|proxy_store|proxy_store_access|proxy_temp_file_write_size|proxy_temp_path|proxy_timeout|proxy_upstream_fail_timeout|proxy_upstream_max_fails|random_index|read_ahead|real_ip_header|recursive_error_pages|request_pool_size|reset_timedout_connection|resolver|resolver_timeout|return|rewrite|root|rtsig_overflow_events|rtsig_overflow_test|rtsig_overflow_threshold|rtsig_signo|satisfy|satisfy_any|secure_link_secret|send_lowat|send_timeout|sendfile|sendfile_max_chunk|server|server_name|server_name_in_redirect|server_names_hash_bucket_size|server_names_hash_max_size|server_tokens|set|set_real_ip_from|smtp_auth|smtp_capabilities|so_keepalive|source_charset|split_clients|ssi|ssi_silent_errors|ssi_types|ssi_value_length|ssl|ssl_certificate|ssl_certificate_key|ssl_ciphers|ssl_client_certificate|ssl_crl|ssl_dhparam|ssl_engine|ssl_prefer_server_ciphers|ssl_protocols|ssl_session_cache|ssl_session_timeout|ssl_verify_client|ssl_verify_depth|starttls|stub_status|sub_filter|sub_filter_once|sub_filter_types|tcp_nodelay|tcp_nopush|timeout|timer_resolution|try_files|types|types_hash_bucket_size|types_hash_max_size|underscores_in_headers|uninitialized_variable_warn|upstream|use|user|userid|userid_domain|userid_expires|userid_name|userid_p3p|userid_path|userid_service|valid_referers|variables_hash_bucket_size|variables_hash_max_size|worker_connections|worker_cpu_affinity|worker_priority|worker_processes|worker_rlimit_core|worker_rlimit_nofile|worker_rlimit_sigpending|working_directory|xclient|xml_entities|xslt_entities|xslt_stylesheet|xslt_types)\\b/i\n  });\n  Prism.languages.insertBefore('nginx', 'keyword', {\n    variable: /\\$[a-z_]+/i\n  });\n}","'use strict';\n\nmodule.exports = nim;\nnim.displayName = 'nim';\nnim.aliases = [];\n\nfunction nim(Prism) {\n  Prism.languages.nim = {\n    comment: /#.*/,\n    // Double-quoted strings can be prefixed by an identifier (Generalized raw string literals)\n    // Character literals are handled specifically to prevent issues with numeric type suffixes\n    string: {\n      pattern: /(?:(?:\\b(?!\\d)(?:\\w|\\\\x[8-9a-fA-F][0-9a-fA-F])+)?(?:\"\"\"[\\s\\S]*?\"\"\"(?!\")|\"(?:\\\\[\\s\\S]|\"\"|[^\"\\\\])*\")|'(?:\\\\(?:\\d+|x[\\da-fA-F]{2}|.)|[^'])')/,\n      greedy: true\n    },\n    // The negative look ahead prevents wrong highlighting of the .. operator\n    number: /\\b(?:0[xXoObB][\\da-fA-F_]+|\\d[\\d_]*(?:(?!\\.\\.)\\.[\\d_]*)?(?:[eE][+-]?\\d[\\d_]*)?)(?:'?[iuf]\\d*)?/,\n    keyword: /\\b(?:addr|as|asm|atomic|bind|block|break|case|cast|concept|const|continue|converter|defer|discard|distinct|do|elif|else|end|enum|except|export|finally|for|from|func|generic|if|import|include|interface|iterator|let|macro|method|mixin|nil|object|out|proc|ptr|raise|ref|return|static|template|try|tuple|type|using|var|when|while|with|without|yield)\\b/,\n    function: {\n      pattern: /(?:(?!\\d)(?:\\w|\\\\x[8-9a-fA-F][0-9a-fA-F])+|`[^`\\r\\n]+`)\\*?(?:\\[[^\\]]+\\])?(?=\\s*\\()/,\n      inside: {\n        operator: /\\*$/\n      }\n    },\n    // We don't want to highlight operators inside backticks\n    ignore: {\n      pattern: /`[^`\\r\\n]+`/,\n      inside: {\n        punctuation: /`/\n      }\n    },\n    operator: {\n      // Look behind and look ahead prevent wrong highlighting of punctuations [. .] {. .} (. .)\n      // but allow the slice operator .. to take precedence over them\n      // One can define his own operators in Nim so all combination of operators might be an operator.\n      pattern: /(^|[({\\[](?=\\.\\.)|(?![({\\[]\\.).)(?:(?:[=+\\-*\\/<>@$~&%|!?^:\\\\]|\\.\\.|\\.(?![)}\\]]))+|\\b(?:and|div|of|or|in|is|isnot|mod|not|notin|shl|shr|xor)\\b)/m,\n      lookbehind: true\n    },\n    punctuation: /[({\\[]\\.|\\.[)}\\]]|[`(){}\\[\\],:]/\n  };\n}","'use strict';\n\nmodule.exports = nix;\nnix.displayName = 'nix';\nnix.aliases = [];\n\nfunction nix(Prism) {\n  Prism.languages.nix = {\n    comment: /\\/\\*[\\s\\S]*?\\*\\/|#.*/,\n    string: {\n      pattern: /\"(?:[^\"\\\\]|\\\\[\\s\\S])*\"|''(?:(?!'')[\\s\\S]|''(?:'|\\\\|\\$\\{))*''/,\n      greedy: true,\n      inside: {\n        interpolation: {\n          // The lookbehind ensures the ${} is not preceded by \\ or ''\n          pattern: /(^|(?:^|(?!'').)[^\\\\])\\$\\{(?:[^}]|\\{[^}]*\\})*}/,\n          lookbehind: true,\n          inside: {\n            antiquotation: {\n              pattern: /^\\$(?=\\{)/,\n              alias: 'variable' // See rest below\n\n            }\n          }\n        }\n      }\n    },\n    url: [/\\b(?:[a-z]{3,7}:\\/\\/)[\\w\\-+%~\\/.:#=?&]+/, {\n      pattern: /([^\\/])(?:[\\w\\-+%~.:#=?&]*(?!\\/\\/)[\\w\\-+%~\\/.:#=?&])?(?!\\/\\/)\\/[\\w\\-+%~\\/.:#=?&]*/,\n      lookbehind: true\n    }],\n    antiquotation: {\n      pattern: /\\$(?=\\{)/,\n      alias: 'variable'\n    },\n    number: /\\b\\d+\\b/,\n    keyword: /\\b(?:assert|builtins|else|if|in|inherit|let|null|or|then|with)\\b/,\n    function: /\\b(?:abort|add|all|any|attrNames|attrValues|baseNameOf|compareVersions|concatLists|currentSystem|deepSeq|derivation|dirOf|div|elem(?:At)?|fetch(?:url|Tarball)|filter(?:Source)?|fromJSON|genList|getAttr|getEnv|hasAttr|hashString|head|import|intersectAttrs|is(?:Attrs|Bool|Function|Int|List|Null|String)|length|lessThan|listToAttrs|map|mul|parseDrvName|pathExists|read(?:Dir|File)|removeAttrs|replaceStrings|seq|sort|stringLength|sub(?:string)?|tail|throw|to(?:File|JSON|Path|String|XML)|trace|typeOf)\\b|\\bfoldl'\\B/,\n    boolean: /\\b(?:true|false)\\b/,\n    operator: /[=!<>]=?|\\+\\+?|\\|\\||&&|\\/\\/|->?|[?@]/,\n    punctuation: /[{}()[\\].,:;]/\n  };\n  Prism.languages.nix.string.inside.interpolation.inside.rest = Prism.languages.nix;\n}","'use strict';\n\nmodule.exports = nsis;\nnsis.displayName = 'nsis';\nnsis.aliases = [];\n\nfunction nsis(Prism) {\n  /**\n   * Original by Jan T. Sott (http://github.com/idleberg)\n   *\n   * Includes all commands and plug-ins shipped with NSIS 3.02\n   */\n  Prism.languages.nsis = {\n    comment: {\n      pattern: /(^|[^\\\\])(\\/\\*[\\s\\S]*?\\*\\/|[#;].*)/,\n      lookbehind: true\n    },\n    string: {\n      pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    keyword: {\n      pattern: /(^\\s*)(?:Abort|Add(?:BrandingImage|Size)|AdvSplash|Allow(?:RootDirInstall|SkipFiles)|AutoCloseWindow|Banner|BG(?:Font|Gradient|Image)|BrandingText|BringToFront|Call(?:InstDLL)?|Caption|ChangeUI|CheckBitmap|ClearErrors|CompletedText|ComponentText|CopyFiles|CRCCheck|Create(?:Directory|Font|ShortCut)|Delete(?:INISec|INIStr|RegKey|RegValue)?|Detail(?:Print|sButtonText)|Dialer|Dir(?:Text|Var|Verify)|EnableWindow|Enum(?:RegKey|RegValue)|Exch|Exec(?:Shell(?:Wait)?|Wait)?|ExpandEnvStrings|File(?:BufSize|Close|ErrorText|Open|Read|ReadByte|ReadUTF16LE|ReadWord|WriteUTF16LE|Seek|Write|WriteByte|WriteWord)?|Find(?:Close|First|Next|Window)|FlushINI|Get(?:CurInstType|CurrentAddress|DlgItem|DLLVersion(?:Local)?|ErrorLevel|FileTime(?:Local)?|FullPathName|Function(?:Address|End)?|InstDirError|LabelAddress|TempFileName)|Goto|HideWindow|Icon|If(?:Abort|Errors|FileExists|RebootFlag|Silent)|InitPluginsDir|Install(?:ButtonText|Colors|Dir(?:RegKey)?)|InstProgressFlags|Inst(?:Type(?:GetText|SetText)?)|Int(?:64|Ptr)?CmpU?|Int(?:64)?Fmt|Int(?:Ptr)?Op|IsWindow|Lang(?:DLL|String)|License(?:BkColor|Data|ForceSelection|LangString|Text)|LoadLanguageFile|LockWindow|Log(?:Set|Text)|Manifest(?:DPIAware|SupportedOS)|Math|MessageBox|MiscButtonText|Name|Nop|ns(?:Dialogs|Exec)|NSISdl|OutFile|Page(?:Callbacks)?|PE(?:DllCharacteristics|SubsysVer)|Pop|Push|Quit|Read(?:EnvStr|INIStr|RegDWORD|RegStr)|Reboot|RegDLL|Rename|RequestExecutionLevel|ReserveFile|Return|RMDir|SearchPath|Section(?:End|GetFlags|GetInstTypes|GetSize|GetText|Group|In|SetFlags|SetInstTypes|SetSize|SetText)?|SendMessage|Set(?:AutoClose|BrandingImage|Compress|Compressor(?:DictSize)?|CtlColors|CurInstType|DatablockOptimize|DateSave|Details(?:Print|View)|ErrorLevel|Errors|FileAttributes|Font|OutPath|Overwrite|PluginUnload|RebootFlag|RegView|ShellVarContext|Silent)|Show(?:InstDetails|UninstDetails|Window)|Silent(?:Install|UnInstall)|Sleep|SpaceTexts|Splash|StartMenu|Str(?:CmpS?|Cpy|Len)|SubCaption|System|Unicode|Uninstall(?:ButtonText|Caption|Icon|SubCaption|Text)|UninstPage|UnRegDLL|UserInfo|Var|VI(?:AddVersionKey|FileVersion|ProductVersion)|VPatch|WindowIcon|Write(?:INIStr|Reg(?:Bin|DWORD|ExpandStr|MultiStr|None|Str)|Uninstaller)|XPStyle)\\b/m,\n      lookbehind: true\n    },\n    property: /\\b(?:admin|all|auto|both|colored|false|force|hide|highest|lastused|leave|listonly|none|normal|notset|off|on|open|print|show|silent|silentlog|smooth|textonly|true|user|ARCHIVE|FILE_(ATTRIBUTE_ARCHIVE|ATTRIBUTE_NORMAL|ATTRIBUTE_OFFLINE|ATTRIBUTE_READONLY|ATTRIBUTE_SYSTEM|ATTRIBUTE_TEMPORARY)|HK((CR|CU|LM)(32|64)?|DD|PD|U)|HKEY_(CLASSES_ROOT|CURRENT_CONFIG|CURRENT_USER|DYN_DATA|LOCAL_MACHINE|PERFORMANCE_DATA|USERS)|ID(ABORT|CANCEL|IGNORE|NO|OK|RETRY|YES)|MB_(ABORTRETRYIGNORE|DEFBUTTON1|DEFBUTTON2|DEFBUTTON3|DEFBUTTON4|ICONEXCLAMATION|ICONINFORMATION|ICONQUESTION|ICONSTOP|OK|OKCANCEL|RETRYCANCEL|RIGHT|RTLREADING|SETFOREGROUND|TOPMOST|USERICON|YESNO)|NORMAL|OFFLINE|READONLY|SHCTX|SHELL_CONTEXT|SYSTEM|TEMPORARY)\\b/,\n    constant: /\\${[\\w\\.:\\^-]+}|\\$\\([\\w\\.:\\^-]+\\)/i,\n    variable: /\\$\\w+/i,\n    number: /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n    operator: /--?|\\+\\+?|<=?|>=?|==?=?|&&?|\\|\\|?|[?*\\/~^%]/,\n    punctuation: /[{}[\\];(),.:]/,\n    important: {\n      pattern: /(^\\s*)!(?:addincludedir|addplugindir|appendfile|cd|define|delfile|echo|else|endif|error|execute|finalize|getdllversion|gettlbversion|ifdef|ifmacrodef|ifmacrondef|ifndef|if|include|insertmacro|macroend|macro|makensis|packhdr|pragma|searchparse|searchreplace|system|tempfile|undef|verbose|warning)\\b/im,\n      lookbehind: true\n    }\n  };\n}","'use strict';\n\nvar refractorC = require('./c.js');\n\nmodule.exports = objectivec;\nobjectivec.displayName = 'objectivec';\nobjectivec.aliases = [];\n\nfunction objectivec(Prism) {\n  Prism.register(refractorC);\n  Prism.languages.objectivec = Prism.languages.extend('c', {\n    keyword: /\\b(?:asm|typeof|inline|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|void|volatile|while|in|self|super)\\b|(?:@interface|@end|@implementation|@protocol|@class|@public|@protected|@private|@property|@try|@catch|@finally|@throw|@synthesize|@dynamic|@selector)\\b/,\n    string: /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1|@\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n    operator: /-[->]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|\\|?|[~^%?*\\/@]/\n  });\n}","'use strict';\n\nmodule.exports = ocaml;\nocaml.displayName = 'ocaml';\nocaml.aliases = [];\n\nfunction ocaml(Prism) {\n  Prism.languages.ocaml = {\n    comment: /\\(\\*[\\s\\S]*?\\*\\)/,\n    string: [{\n      pattern: /\"(?:\\\\.|[^\\\\\\r\\n\"])*\"/,\n      greedy: true\n    }, {\n      pattern: /(['`])(?:\\\\(?:\\d+|x[\\da-f]+|.)|(?!\\1)[^\\\\\\r\\n])\\1/i,\n      greedy: true\n    }],\n    number: /\\b(?:0x[\\da-f][\\da-f_]+|(?:0[bo])?\\d[\\d_]*\\.?[\\d_]*(?:e[+-]?[\\d_]+)?)/i,\n    type: {\n      pattern: /\\B['`]\\w*/,\n      alias: 'variable'\n    },\n    directive: {\n      pattern: /\\B#\\w+/,\n      alias: 'function'\n    },\n    keyword: /\\b(?:as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|match|method|module|mutable|new|object|of|open|prefix|private|rec|then|sig|struct|to|try|type|val|value|virtual|where|while|with)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    // Custom operators are allowed\n    operator: /:=|[=<>@^|&+\\-*\\/$%!?~][!$%&*+\\-.\\/:<=>?@^|~]*|\\b(?:and|asr|land|lor|lxor|lsl|lsr|mod|nor|or)\\b/,\n    punctuation: /[(){}\\[\\]|_.,:;]/\n  };\n}","'use strict';\n\nvar refractorC = require('./c.js');\n\nvar refractorCpp = require('./cpp.js');\n\nmodule.exports = opencl;\nopencl.displayName = 'opencl';\nopencl.aliases = [];\n\nfunction opencl(Prism) {\n  Prism.register(refractorC);\n  Prism.register(refractorCpp);\n\n  (function (Prism) {\n    /* OpenCL kernel language */\n    Prism.languages.opencl = Prism.languages.extend('c', {\n      // Extracted from the official specs (2.0) and http://streamcomputing.eu/downloads/?opencl.lang (opencl-keywords, opencl-types) and http://sourceforge.net/tracker/?func=detail&aid=2957794&group_id=95717&atid=612384 (Words2, partly Words3)\n      keyword: /\\b(?:__attribute__|(?:__)?(?:constant|global|kernel|local|private|read_only|read_write|write_only)|_cl_(?:command_queue|context|device_id|event|kernel|mem|platform_id|program|sampler)|auto|break|case|cl_(?:image_format|mem_fence_flags)|clk_event_t|complex|const|continue|default|do|(?:float|double)(?:16(?:x(?:1|16|2|4|8))?|1x(?:1|16|2|4|8)|2(?:x(?:1|16|2|4|8))?|3|4(?:x(?:1|16|2|4|8))?|8(?:x(?:1|16|2|4|8))?)?|else|enum|event_t|extern|for|goto|(?:u?(?:char|short|int|long)|half|quad|bool)(?:2|3|4|8|16)?|if|image(?:1d_(?:array_|buffer_)?t|2d_(?:array_(?:depth_|msaa_depth_|msaa_)?|depth_|msaa_depth_|msaa_)?t|3d_t)|imaginary|inline|intptr_t|ndrange_t|packed|pipe|ptrdiff_t|queue_t|register|reserve_id_t|restrict|return|sampler_t|signed|size_t|sizeof|static|struct|switch|typedef|uintptr_t|uniform|union|unsigned|void|volatile|while)\\b/,\n      // Extracted from http://streamcomputing.eu/downloads/?opencl.lang (global-vars, opencl-dev)\n      'function-opencl-kernel': {\n        pattern: /\\b(?:abs(?:_diff)?|a?(?:cos|sin)(?:h|pi)?|add_sat|aligned|all|and|any|async(?:_work_group_copy|_work_group_strided_copy)?|atan(?:2?(?:pi)?|h)?|atom_(?:add|and|cmpxchg|dec|inc|max|min|or|sub|xchg|xor)|barrier|bitselect|cbrt|ceil|clamp|clz|copies|copysign|cross|degrees|distance|dot|endian|erf|erfc|exp(?:2|10)?|expm1|fabs|fast_(?:distance|length|normalize)|fdim|floor|fma|fmax|fmin|fract|frexp|fro|from|get_(?:global_(?:id|offset|size)|group_id|image_(?:channel_data_type|channel_order|depth|dim|height|width)|local(?:_id|_size)|num_groups|work_dim)|hadd|(?:half|native)_(?:cos|divide|exp(?:2|10)?|log(?:2|10)?|powr|recip|r?sqrt|sin|tan)|hypot|ilogb|is(?:equal|finite|greater(?:equal)?|inf|less(?:equal|greater)?|nan|normal|notequal|(?:un)?ordered)|ldexp|length|lgamma|lgamma_r|log(?:b|1p|2|10)?|mad(?:24|_hi|_sat)?|max|mem(?:_fence)?|min|mix|modf|mul24|mul_hi|nan|nextafter|normalize|pow[nr]?|prefetch|radians|read_(?:image)(?:f|h|u?i)|read_mem_fence|remainder|remquo|reqd_work_group_size|rhadd|rint|rootn|rotate|round|rsqrt|select|shuffle2?|sign|signbit|sincos|smoothstep|sqrt|step|sub_sat|tan|tanh|tanpi|tgamma|to|trunc|upsample|vec_(?:step|type_hint)|v(?:load|store)(?:_half)?(?:2|3|4|8|16)?|v(?:loada_half|storea?(?:_half)?)(?:2|3|4|8|16)?(?:_(?:rte|rtn|rtp|rtz))?|wait_group_events|work_group_size_hint|write_image(?:f|h|u?i)|write_mem_fence)\\b/,\n        alias: 'function'\n      },\n      // Extracted from http://streamcomputing.eu/downloads/?opencl.lang (opencl-const)\n      'constant-opencl-kernel': {\n        pattern: /\\b(?:CHAR_(?:BIT|MAX|MIN)|CLK_(?:ADDRESS_(?:CLAMP(?:_TO_EDGE)?|NONE|REPEAT)|FILTER_(?:LINEAR|NEAREST)|(?:LOCAL|GLOBAL)_MEM_FENCE|NORMALIZED_COORDS_(?:FALSE|TRUE))|CL_(?:BGRA|(?:HALF_)?FLOAT|INTENSITY|LUMINANCE|A?R?G?B?[Ax]?|(?:(?:UN)?SIGNED|[US]NORM)_(?:INT(?:8|16|32))|UNORM_(?:INT_101010|SHORT_(?:555|565)))|(?:DBL|FLT)_(?:DIG|EPSILON|MANT_DIG|(?:MIN|MAX)(?:(?:_10)?_EXP)?)|FLT_RADIX|HUGE_VALF|INFINITY|(?:INT|LONG|SCHAR|SHRT|UCHAR|UINT|ULONG)_(?:MAX|MIN)|MAXFLOAT|M_(?:[12]_PI|2_SQRTPI|E|LN(?:2|10)|LOG(?:10|2)E?|PI[24]?|SQRT(?:1_2|2))|NAN)\\b/,\n        alias: 'constant'\n      }\n    });\n    var attributes = {\n      // Extracted from http://streamcomputing.eu/downloads/?opencl_host.lang (opencl-types and opencl-host)\n      'type-opencl-host': {\n        pattern: /\\b(?:cl_(?:GLenum|GLint|GLuin|addressing_mode|bitfield|bool|buffer_create_type|build_status|channel_(?:order|type)|(?:u?(?:char|short|int|long)|float|double)(?:2|3|4|8|16)?|command_(?:queue(?:_info|_properties)?|type)|context(?:_info|_properties)?|device_(?:exec_capabilities|fp_config|id|info|local_mem_type|mem_cache_type|type)|(?:event|sampler)(?:_info)?|filter_mode|half|image_info|kernel(?:_info|_work_group_info)?|map_flags|mem(?:_flags|_info|_object_type)?|platform_(?:id|info)|profiling_info|program(?:_build_info|_info)?))\\b/,\n        alias: 'keyword'\n      },\n      'boolean-opencl-host': {\n        pattern: /\\bCL_(?:TRUE|FALSE)\\b/,\n        alias: 'boolean'\n      },\n      // Extracted from cl.h (2.0) and http://streamcomputing.eu/downloads/?opencl_host.lang (opencl-const)\n      'constant-opencl-host': {\n        pattern: /\\bCL_(?:A|ABGR|ADDRESS_(?:CLAMP(?:_TO_EDGE)?|MIRRORED_REPEAT|NONE|REPEAT)|ARGB|BGRA|BLOCKING|BUFFER_CREATE_TYPE_REGION|BUILD_(?:ERROR|IN_PROGRESS|NONE|PROGRAM_FAILURE|SUCCESS)|COMMAND_(?:ACQUIRE_GL_OBJECTS|BARRIER|COPY_(?:BUFFER(?:_RECT|_TO_IMAGE)?|IMAGE(?:_TO_BUFFER)?)|FILL_(?:BUFFER|IMAGE)|MAP(?:_BUFFER|_IMAGE)|MARKER|MIGRATE(?:_SVM)?_MEM_OBJECTS|NATIVE_KERNEL|NDRANGE_KERNEL|READ_(?:BUFFER(?:_RECT)?|IMAGE)|RELEASE_GL_OBJECTS|SVM_(?:FREE|MAP|MEMCPY|MEMFILL|UNMAP)|TASK|UNMAP_MEM_OBJECT|USER|WRITE_(?:BUFFER(?:_RECT)?|IMAGE))|COMPILER_NOT_AVAILABLE|COMPILE_PROGRAM_FAILURE|COMPLETE|CONTEXT_(?:DEVICES|INTEROP_USER_SYNC|NUM_DEVICES|PLATFORM|PROPERTIES|REFERENCE_COUNT)|DEPTH(?:_STENCIL)?|DEVICE_(?:ADDRESS_BITS|AFFINITY_DOMAIN_(?:L[1-4]_CACHE|NEXT_PARTITIONABLE|NUMA)|AVAILABLE|BUILT_IN_KERNELS|COMPILER_AVAILABLE|DOUBLE_FP_CONFIG|ENDIAN_LITTLE|ERROR_CORRECTION_SUPPORT|EXECUTION_CAPABILITIES|EXTENSIONS|GLOBAL_(?:MEM_(?:CACHELINE_SIZE|CACHE_SIZE|CACHE_TYPE|SIZE)|VARIABLE_PREFERRED_TOTAL_SIZE)|HOST_UNIFIED_MEMORY|IL_VERSION|IMAGE(?:2D_MAX_(?:HEIGHT|WIDTH)|3D_MAX_(?:DEPTH|HEIGHT|WIDTH)|_BASE_ADDRESS_ALIGNMENT|_MAX_ARRAY_SIZE|_MAX_BUFFER_SIZE|_PITCH_ALIGNMENT|_SUPPORT)|LINKER_AVAILABLE|LOCAL_MEM_SIZE|LOCAL_MEM_TYPE|MAX_(?:CLOCK_FREQUENCY|COMPUTE_UNITS|CONSTANT_ARGS|CONSTANT_BUFFER_SIZE|GLOBAL_VARIABLE_SIZE|MEM_ALLOC_SIZE|NUM_SUB_GROUPS|ON_DEVICE_(?:EVENTS|QUEUES)|PARAMETER_SIZE|PIPE_ARGS|READ_IMAGE_ARGS|READ_WRITE_IMAGE_ARGS|SAMPLERS|WORK_GROUP_SIZE|WORK_ITEM_DIMENSIONS|WORK_ITEM_SIZES|WRITE_IMAGE_ARGS)|MEM_BASE_ADDR_ALIGN|MIN_DATA_TYPE_ALIGN_SIZE|NAME|NATIVE_VECTOR_WIDTH_(?:CHAR|DOUBLE|FLOAT|HALF|INT|LONG|SHORT)|NOT_(?:AVAILABLE|FOUND)|OPENCL_C_VERSION|PARENT_DEVICE|PARTITION_(?:AFFINITY_DOMAIN|BY_AFFINITY_DOMAIN|BY_COUNTS|BY_COUNTS_LIST_END|EQUALLY|FAILED|MAX_SUB_DEVICES|PROPERTIES|TYPE)|PIPE_MAX_(?:ACTIVE_RESERVATIONS|PACKET_SIZE)|PLATFORM|PREFERRED_(?:GLOBAL_ATOMIC_ALIGNMENT|INTEROP_USER_SYNC|LOCAL_ATOMIC_ALIGNMENT|PLATFORM_ATOMIC_ALIGNMENT|VECTOR_WIDTH_(?:CHAR|DOUBLE|FLOAT|HALF|INT|LONG|SHORT))|PRINTF_BUFFER_SIZE|PROFILE|PROFILING_TIMER_RESOLUTION|QUEUE_(?:ON_(?:DEVICE_(?:MAX_SIZE|PREFERRED_SIZE|PROPERTIES)|HOST_PROPERTIES)|PROPERTIES)|REFERENCE_COUNT|SINGLE_FP_CONFIG|SUB_GROUP_INDEPENDENT_FORWARD_PROGRESS|SVM_(?:ATOMICS|CAPABILITIES|COARSE_GRAIN_BUFFER|FINE_GRAIN_BUFFER|FINE_GRAIN_SYSTEM)|TYPE(?:_ACCELERATOR|_ALL|_CPU|_CUSTOM|_DEFAULT|_GPU)?|VENDOR(?:_ID)?|VERSION)|DRIVER_VERSION|EVENT_(?:COMMAND_(?:EXECUTION_STATUS|QUEUE|TYPE)|CONTEXT|REFERENCE_COUNT)|EXEC_(?:KERNEL|NATIVE_KERNEL|STATUS_ERROR_FOR_EVENTS_IN_WAIT_LIST)|FILTER_(?:LINEAR|NEAREST)|FLOAT|FP_(?:CORRECTLY_ROUNDED_DIVIDE_SQRT|DENORM|FMA|INF_NAN|ROUND_TO_INF|ROUND_TO_NEAREST|ROUND_TO_ZERO|SOFT_FLOAT)|GLOBAL|HALF_FLOAT|IMAGE_(?:ARRAY_SIZE|BUFFER|DEPTH|ELEMENT_SIZE|FORMAT|FORMAT_MISMATCH|FORMAT_NOT_SUPPORTED|HEIGHT|NUM_MIP_LEVELS|NUM_SAMPLES|ROW_PITCH|SLICE_PITCH|WIDTH)|INTENSITY|INVALID_(?:ARG_INDEX|ARG_SIZE|ARG_VALUE|BINARY|BUFFER_SIZE|BUILD_OPTIONS|COMMAND_QUEUE|COMPILER_OPTIONS|CONTEXT|DEVICE|DEVICE_PARTITION_COUNT|DEVICE_QUEUE|DEVICE_TYPE|EVENT|EVENT_WAIT_LIST|GLOBAL_OFFSET|GLOBAL_WORK_SIZE|GL_OBJECT|HOST_PTR|IMAGE_DESCRIPTOR|IMAGE_FORMAT_DESCRIPTOR|IMAGE_SIZE|KERNEL|KERNEL_ARGS|KERNEL_DEFINITION|KERNEL_NAME|LINKER_OPTIONS|MEM_OBJECT|MIP_LEVEL|OPERATION|PIPE_SIZE|PLATFORM|PROGRAM|PROGRAM_EXECUTABLE|PROPERTY|QUEUE_PROPERTIES|SAMPLER|VALUE|WORK_DIMENSION|WORK_GROUP_SIZE|WORK_ITEM_SIZE)|KERNEL_(?:ARG_(?:ACCESS_(?:NONE|QUALIFIER|READ_ONLY|READ_WRITE|WRITE_ONLY)|ADDRESS_(?:CONSTANT|GLOBAL|LOCAL|PRIVATE|QUALIFIER)|INFO_NOT_AVAILABLE|NAME|TYPE_(?:CONST|NAME|NONE|PIPE|QUALIFIER|RESTRICT|VOLATILE))|ATTRIBUTES|COMPILE_NUM_SUB_GROUPS|COMPILE_WORK_GROUP_SIZE|CONTEXT|EXEC_INFO_SVM_FINE_GRAIN_SYSTEM|EXEC_INFO_SVM_PTRS|FUNCTION_NAME|GLOBAL_WORK_SIZE|LOCAL_MEM_SIZE|LOCAL_SIZE_FOR_SUB_GROUP_COUNT|MAX_NUM_SUB_GROUPS|MAX_SUB_GROUP_SIZE_FOR_NDRANGE|NUM_ARGS|PREFERRED_WORK_GROUP_SIZE_MULTIPLE|PRIVATE_MEM_SIZE|PROGRAM|REFERENCE_COUNT|SUB_GROUP_COUNT_FOR_NDRANGE|WORK_GROUP_SIZE)|LINKER_NOT_AVAILABLE|LINK_PROGRAM_FAILURE|LOCAL|LUMINANCE|MAP_(?:FAILURE|READ|WRITE|WRITE_INVALIDATE_REGION)|MEM_(?:ALLOC_HOST_PTR|ASSOCIATED_MEMOBJECT|CONTEXT|COPY_HOST_PTR|COPY_OVERLAP|FLAGS|HOST_NO_ACCESS|HOST_PTR|HOST_READ_ONLY|HOST_WRITE_ONLY|KERNEL_READ_AND_WRITE|MAP_COUNT|OBJECT_(?:ALLOCATION_FAILURE|BUFFER|IMAGE1D|IMAGE1D_ARRAY|IMAGE1D_BUFFER|IMAGE2D|IMAGE2D_ARRAY|IMAGE3D|PIPE)|OFFSET|READ_ONLY|READ_WRITE|REFERENCE_COUNT|SIZE|SVM_ATOMICS|SVM_FINE_GRAIN_BUFFER|TYPE|USES_SVM_POINTER|USE_HOST_PTR|WRITE_ONLY)|MIGRATE_MEM_OBJECT_(?:CONTENT_UNDEFINED|HOST)|MISALIGNED_SUB_BUFFER_OFFSET|NONE|NON_BLOCKING|OUT_OF_(?:HOST_MEMORY|RESOURCES)|PIPE_(?:MAX_PACKETS|PACKET_SIZE)|PLATFORM_(?:EXTENSIONS|HOST_TIMER_RESOLUTION|NAME|PROFILE|VENDOR|VERSION)|PROFILING_(?:COMMAND_(?:COMPLETE|END|QUEUED|START|SUBMIT)|INFO_NOT_AVAILABLE)|PROGRAM_(?:BINARIES|BINARY_SIZES|BINARY_TYPE(?:_COMPILED_OBJECT|_EXECUTABLE|_LIBRARY|_NONE)?|BUILD_(?:GLOBAL_VARIABLE_TOTAL_SIZE|LOG|OPTIONS|STATUS)|CONTEXT|DEVICES|IL|KERNEL_NAMES|NUM_DEVICES|NUM_KERNELS|REFERENCE_COUNT|SOURCE)|QUEUED|QUEUE_(?:CONTEXT|DEVICE|DEVICE_DEFAULT|ON_DEVICE|ON_DEVICE_DEFAULT|OUT_OF_ORDER_EXEC_MODE_ENABLE|PROFILING_ENABLE|PROPERTIES|REFERENCE_COUNT|SIZE)|R|RA|READ_(?:ONLY|WRITE)_CACHE|RG|RGB|RGBA|RGBx|RGx|RUNNING|Rx|SAMPLER_(?:ADDRESSING_MODE|CONTEXT|FILTER_MODE|LOD_MAX|LOD_MIN|MIP_FILTER_MODE|NORMALIZED_COORDS|REFERENCE_COUNT)|(?:UN)?SIGNED_INT(?:8|16|32)|SNORM_INT(?:8|16)|SUBMITTED|SUCCESS|UNORM_INT(?:16|24|8|_101010|_101010_2)|UNORM_SHORT_(?:555|565)|VERSION_(?:1_0|1_1|1_2|2_0|2_1)|sBGRA|sRGB|sRGBA|sRGBx)\\b/,\n        alias: 'constant'\n      },\n      // Extracted from cl.h (2.0) and http://streamcomputing.eu/downloads/?opencl_host.lang (opencl-host)\n      'function-opencl-host': {\n        pattern: /\\bcl(?:BuildProgram|CloneKernel|CompileProgram|Create(?:Buffer|CommandQueue(?:WithProperties)?|Context|ContextFromType|Image|Image2D|Image3D|Kernel|KernelsInProgram|Pipe|ProgramWith(?:Binary|BuiltInKernels|IL|Source)|Sampler|SamplerWithProperties|SubBuffer|SubDevices|UserEvent)|Enqueue(?:(?:Barrier|Marker)(?:WithWaitList)?|Copy(?:Buffer(?:Rect|ToImage)?|Image(?:ToBuffer)?)|(?:Fill|Map)(?:Buffer|Image)|MigrateMemObjects|NDRangeKernel|NativeKernel|(?:Read|Write)(?:Buffer(?:Rect)?|Image)|SVM(?:Free|Map|MemFill|Memcpy|MigrateMem|Unmap)|Task|UnmapMemObject|WaitForEvents)|Finish|Flush|Get(?:CommandQueueInfo|ContextInfo|Device(?:AndHostTimer|IDs|Info)|Event(?:Profiling)?Info|ExtensionFunctionAddress(?:ForPlatform)?|HostTimer|ImageInfo|Kernel(?:ArgInfo|Info|SubGroupInfo|WorkGroupInfo)|MemObjectInfo|PipeInfo|Platform(?:IDs|Info)|Program(?:Build)?Info|SamplerInfo|SupportedImageFormats)|LinkProgram|(?:Release|Retain)(?:CommandQueue|Context|Device|Event|Kernel|MemObject|Program|Sampler)|SVM(?:Alloc|Free)|Set(?:CommandQueueProperty|DefaultDeviceCommandQueue|EventCallback|Kernel(?:Arg(?:SVMPointer)?|ExecInfo)|Kernel|MemObjectDestructorCallback|UserEventStatus)|Unload(?:Platform)?Compiler|WaitForEvents)\\b/,\n        alias: 'function'\n      }\n      /* OpenCL host API */\n\n    };\n    Prism.languages.insertBefore('c', 'keyword', attributes); // Extracted from doxygen class list http://github.khronos.org/OpenCL-CLHPP/annotated.html\n\n    attributes['type-opencl-host-c++'] = {\n      pattern: /\\b(?:Buffer|BufferGL|BufferRenderGL|CommandQueue|Context|Device|DeviceCommandQueue|EnqueueArgs|Event|Image|Image1D|Image1DArray|Image1DBuffer|Image2D|Image2DArray|Image2DGL|Image3D|Image3DGL|ImageFormat|ImageGL|Kernel|KernelFunctor|LocalSpaceArg|Memory|NDRange|Pipe|Platform|Program|Sampler|SVMAllocator|SVMTraitAtomic|SVMTraitCoarse|SVMTraitFine|SVMTraitReadOnly|SVMTraitReadWrite|SVMTraitWriteOnly|UserEvent)\\b/,\n      alias: 'keyword' // C++ includes everything from the OpenCL C host API plus the classes defined in cl2.h\n\n    };\n    Prism.languages.insertBefore('cpp', 'keyword', attributes);\n  })(Prism);\n}","'use strict';\n\nmodule.exports = oz;\noz.displayName = 'oz';\noz.aliases = [];\n\nfunction oz(Prism) {\n  Prism.languages.oz = {\n    comment: /\\/\\*[\\s\\S]*?\\*\\/|%.*/,\n    string: {\n      pattern: /\"(?:[^\"\\\\]|\\\\[\\s\\S])*\"/,\n      greedy: true\n    },\n    atom: {\n      pattern: /'(?:[^'\\\\]|\\\\[\\s\\S])*'/,\n      greedy: true,\n      alias: 'builtin'\n    },\n    keyword: /[$_]|\\[\\]|\\b(?:at|attr|case|catch|choice|class|cond|declare|define|dis|else(?:case|if)?|end|export|fail|false|feat|finally|from|fun|functor|if|import|in|local|lock|meth|nil|not|of|or|prepare|proc|prop|raise|require|self|skip|then|thread|true|try|unit)\\b/,\n    function: [/[a-z][A-Za-z\\d]*(?=\\()/, {\n      pattern: /(\\{)[A-Z][A-Za-z\\d]*/,\n      lookbehind: true\n    }],\n    number: /\\b(?:0[bx][\\da-f]+|\\d+\\.?\\d*(?:e~?\\d+)?\\b)|&(?:[^\\\\]|\\\\(?:\\d{3}|.))/i,\n    variable: /\\b[A-Z][A-Za-z\\d]*|`(?:[^`\\\\]|\\\\.)+`/,\n    'attr-name': /\\w+(?=:)/,\n    operator: /:(?:=|::?)|<[-:=]?|=(?:=|<?:?)|>=?:?|\\\\=:?|!!?|[|#+\\-*\\/,~^@]|\\b(?:andthen|div|mod|orelse)\\b/,\n    punctuation: /[\\[\\](){}.:;?]/\n  };\n}","'use strict';\n\nmodule.exports = parigp;\nparigp.displayName = 'parigp';\nparigp.aliases = [];\n\nfunction parigp(Prism) {\n  Prism.languages.parigp = {\n    comment: /\\/\\*[\\s\\S]*?\\*\\/|\\\\\\\\.*/,\n    string: {\n      pattern: /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"/,\n      greedy: true\n    },\n    // PARI/GP does not care about white spaces at all\n    // so let's process the keywords to build an appropriate regexp\n    // (e.g. \"b *r *e *a *k\", etc.)\n    keyword: function () {\n      var keywords = ['breakpoint', 'break', 'dbg_down', 'dbg_err', 'dbg_up', 'dbg_x', 'forcomposite', 'fordiv', 'forell', 'forpart', 'forprime', 'forstep', 'forsubgroup', 'forvec', 'for', 'iferr', 'if', 'local', 'my', 'next', 'return', 'until', 'while'];\n      keywords = keywords.map(function (keyword) {\n        return keyword.split('').join(' *');\n      }).join('|');\n      return RegExp('\\\\b(?:' + keywords + ')\\\\b');\n    }(),\n    function: /\\w[\\w ]*?(?= *\\()/,\n    number: {\n      // The lookbehind and the negative lookahead prevent from breaking the .. operator\n      pattern: /((?:\\. *\\. *)?)(?:\\d(?: *\\d)*(?: *(?!\\. *\\.)\\.(?: *\\d)*)?|\\. *\\d(?: *\\d)*)(?: *e *[+-]? *\\d(?: *\\d)*)?/i,\n      lookbehind: true\n    },\n    operator: /\\. *\\.|[*\\/!](?: *=)?|%(?: *=|(?: *#)?(?: *')*)?|\\+(?: *[+=])?|-(?: *[-=>])?|<(?:(?: *<)?(?: *=)?| *>)?|>(?: *>)?(?: *=)?|=(?: *=){0,2}|\\\\(?: *\\/)?(?: *=)?|&(?: *&)?|\\| *\\||['#~^]/,\n    punctuation: /[\\[\\]{}().,:;|]/\n  };\n}","'use strict';\n\nmodule.exports = parser;\nparser.displayName = 'parser';\nparser.aliases = [];\n\nfunction parser(Prism) {\n  Prism.languages.parser = Prism.languages.extend('markup', {\n    keyword: {\n      pattern: /(^|[^^])(?:\\^(?:case|eval|for|if|switch|throw)\\b|@(?:BASE|CLASS|GET(?:_DEFAULT)?|OPTIONS|SET_DEFAULT|USE)\\b)/,\n      lookbehind: true\n    },\n    variable: {\n      pattern: /(^|[^^])\\B\\$(?:\\w+|(?=[.{]))(?:(?:\\.|::?)\\w+)*(?:\\.|::?)?/,\n      lookbehind: true,\n      inside: {\n        punctuation: /\\.|:+/\n      }\n    },\n    function: {\n      pattern: /(^|[^^])\\B[@^]\\w+(?:(?:\\.|::?)\\w+)*(?:\\.|::?)?/,\n      lookbehind: true,\n      inside: {\n        keyword: {\n          pattern: /(^@)(?:GET_|SET_)/,\n          lookbehind: true\n        },\n        punctuation: /\\.|:+/\n      }\n    },\n    escape: {\n      pattern: /\\^(?:[$^;@()\\[\\]{}\"':]|#[a-f\\d]*)/i,\n      alias: 'builtin'\n    },\n    punctuation: /[\\[\\](){};]/\n  });\n  Prism.languages.insertBefore('parser', 'keyword', {\n    'parser-comment': {\n      pattern: /(\\s)#.*/,\n      lookbehind: true,\n      alias: 'comment'\n    },\n    expression: {\n      // Allow for 3 levels of depth\n      pattern: /(^|[^^])\\((?:[^()]|\\((?:[^()]|\\((?:[^()])*\\))*\\))*\\)/,\n      greedy: true,\n      lookbehind: true,\n      inside: {\n        string: {\n          pattern: /(^|[^^])([\"'])(?:(?!\\2)[^^]|\\^[\\s\\S])*\\2/,\n          lookbehind: true\n        },\n        keyword: Prism.languages.parser.keyword,\n        variable: Prism.languages.parser.variable,\n        function: Prism.languages.parser.function,\n        boolean: /\\b(?:true|false)\\b/,\n        number: /\\b(?:0x[a-f\\d]+|\\d+\\.?\\d*(?:e[+-]?\\d+)?)\\b/i,\n        escape: Prism.languages.parser.escape,\n        operator: /[~+*\\/\\\\%]|!(?:\\|\\|?|=)?|&&?|\\|\\|?|==|<[<=]?|>[>=]?|-[fd]?|\\b(?:def|eq|ge|gt|in|is|le|lt|ne)\\b/,\n        punctuation: Prism.languages.parser.punctuation\n      }\n    }\n  });\n  Prism.languages.insertBefore('inside', 'punctuation', {\n    expression: Prism.languages.parser.expression,\n    keyword: Prism.languages.parser.keyword,\n    variable: Prism.languages.parser.variable,\n    function: Prism.languages.parser.function,\n    escape: Prism.languages.parser.escape,\n    'parser-punctuation': {\n      pattern: Prism.languages.parser.punctuation,\n      alias: 'punctuation'\n    }\n  }, Prism.languages.parser['tag'].inside['attr-value']);\n}","'use strict';\n\nmodule.exports = pascal;\npascal.displayName = 'pascal';\npascal.aliases = ['objectpascal'];\n\nfunction pascal(Prism) {\n  // Based on Free Pascal\n\n  /* TODO\n  Support inline asm ?\n  */\n  Prism.languages.pascal = {\n    comment: [/\\(\\*[\\s\\S]+?\\*\\)/, /\\{[\\s\\S]+?\\}/, /\\/\\/.*/],\n    string: {\n      pattern: /(?:'(?:''|[^'\\r\\n])*'|#[&$%]?[a-f\\d]+)+|\\^[a-z]/i,\n      greedy: true\n    },\n    keyword: [{\n      // Turbo Pascal\n      pattern: /(^|[^&])\\b(?:absolute|array|asm|begin|case|const|constructor|destructor|do|downto|else|end|file|for|function|goto|if|implementation|inherited|inline|interface|label|nil|object|of|operator|packed|procedure|program|record|reintroduce|repeat|self|set|string|then|to|type|unit|until|uses|var|while|with)\\b/i,\n      lookbehind: true\n    }, {\n      // Free Pascal\n      pattern: /(^|[^&])\\b(?:dispose|exit|false|new|true)\\b/i,\n      lookbehind: true\n    }, {\n      // Object Pascal\n      pattern: /(^|[^&])\\b(?:class|dispinterface|except|exports|finalization|finally|initialization|inline|library|on|out|packed|property|raise|resourcestring|threadvar|try)\\b/i,\n      lookbehind: true\n    }, {\n      // Modifiers\n      pattern: /(^|[^&])\\b(?:absolute|abstract|alias|assembler|bitpacked|break|cdecl|continue|cppdecl|cvar|default|deprecated|dynamic|enumerator|experimental|export|external|far|far16|forward|generic|helper|implements|index|interrupt|iochecks|local|message|name|near|nodefault|noreturn|nostackframe|oldfpccall|otherwise|overload|override|pascal|platform|private|protected|public|published|read|register|reintroduce|result|safecall|saveregisters|softfloat|specialize|static|stdcall|stored|strict|unaligned|unimplemented|varargs|virtual|write)\\b/i,\n      lookbehind: true\n    }],\n    number: [// Hexadecimal, octal and binary\n    /(?:[&%]\\d+|\\$[a-f\\d]+)/i, // Decimal\n    /\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?/i],\n    operator: [/\\.\\.|\\*\\*|:=|<[<=>]?|>[>=]?|[+\\-*\\/]=?|[@^=]/i, {\n      pattern: /(^|[^&])\\b(?:and|as|div|exclude|in|include|is|mod|not|or|shl|shr|xor)\\b/,\n      lookbehind: true\n    }],\n    punctuation: /\\(\\.|\\.\\)|[()\\[\\]:;,.]/\n  };\n  Prism.languages.objectpascal = Prism.languages.pascal;\n}","'use strict';\n\nmodule.exports = perl;\nperl.displayName = 'perl';\nperl.aliases = [];\n\nfunction perl(Prism) {\n  Prism.languages.perl = {\n    comment: [{\n      // POD\n      pattern: /(^\\s*)=\\w+[\\s\\S]*?=cut.*/m,\n      lookbehind: true\n    }, {\n      pattern: /(^|[^\\\\$])#.*/,\n      lookbehind: true\n    }],\n    // TODO Could be nice to handle Heredoc too.\n    string: [// q/.../\n    {\n      pattern: /\\b(?:q|qq|qx|qw)\\s*([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\n      greedy: true\n    }, // q a...a\n    {\n      pattern: /\\b(?:q|qq|qx|qw)\\s+([a-zA-Z0-9])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\n      greedy: true\n    }, // q(...)\n    {\n      pattern: /\\b(?:q|qq|qx|qw)\\s*\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)/,\n      greedy: true\n    }, // q{...}\n    {\n      pattern: /\\b(?:q|qq|qx|qw)\\s*\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\}/,\n      greedy: true\n    }, // q[...]\n    {\n      pattern: /\\b(?:q|qq|qx|qw)\\s*\\[(?:[^[\\]\\\\]|\\\\[\\s\\S])*\\]/,\n      greedy: true\n    }, // q<...>\n    {\n      pattern: /\\b(?:q|qq|qx|qw)\\s*<(?:[^<>\\\\]|\\\\[\\s\\S])*>/,\n      greedy: true\n    }, // \"...\", `...`\n    {\n      pattern: /(\"|`)(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\n      greedy: true\n    }, // '...'\n    // FIXME Multi-line single-quoted strings are not supported as they would break variables containing '\n    {\n      pattern: /'(?:[^'\\\\\\r\\n]|\\\\.)*'/,\n      greedy: true\n    }],\n    regex: [// m/.../\n    {\n      pattern: /\\b(?:m|qr)\\s*([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1[msixpodualngc]*/,\n      greedy: true\n    }, // m a...a\n    {\n      pattern: /\\b(?:m|qr)\\s+([a-zA-Z0-9])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1[msixpodualngc]*/,\n      greedy: true\n    }, // m(...)\n    {\n      pattern: /\\b(?:m|qr)\\s*\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)[msixpodualngc]*/,\n      greedy: true\n    }, // m{...}\n    {\n      pattern: /\\b(?:m|qr)\\s*\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\}[msixpodualngc]*/,\n      greedy: true\n    }, // m[...]\n    {\n      pattern: /\\b(?:m|qr)\\s*\\[(?:[^[\\]\\\\]|\\\\[\\s\\S])*\\][msixpodualngc]*/,\n      greedy: true\n    }, // m<...>\n    {\n      pattern: /\\b(?:m|qr)\\s*<(?:[^<>\\\\]|\\\\[\\s\\S])*>[msixpodualngc]*/,\n      greedy: true\n    }, // The lookbehinds prevent -s from breaking\n    // FIXME We don't handle change of separator like s(...)[...]\n    // s/.../.../\n    {\n      pattern: /(^|[^-]\\b)(?:s|tr|y)\\s*([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2[msixpodualngcer]*/,\n      lookbehind: true,\n      greedy: true\n    }, // s a...a...a\n    {\n      pattern: /(^|[^-]\\b)(?:s|tr|y)\\s+([a-zA-Z0-9])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2[msixpodualngcer]*/,\n      lookbehind: true,\n      greedy: true\n    }, // s(...)(...)\n    {\n      pattern: /(^|[^-]\\b)(?:s|tr|y)\\s*\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)\\s*\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)[msixpodualngcer]*/,\n      lookbehind: true,\n      greedy: true\n    }, // s{...}{...}\n    {\n      pattern: /(^|[^-]\\b)(?:s|tr|y)\\s*\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\}\\s*\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\}[msixpodualngcer]*/,\n      lookbehind: true,\n      greedy: true\n    }, // s[...][...]\n    {\n      pattern: /(^|[^-]\\b)(?:s|tr|y)\\s*\\[(?:[^[\\]\\\\]|\\\\[\\s\\S])*\\]\\s*\\[(?:[^[\\]\\\\]|\\\\[\\s\\S])*\\][msixpodualngcer]*/,\n      lookbehind: true,\n      greedy: true\n    }, // s<...><...>\n    {\n      pattern: /(^|[^-]\\b)(?:s|tr|y)\\s*<(?:[^<>\\\\]|\\\\[\\s\\S])*>\\s*<(?:[^<>\\\\]|\\\\[\\s\\S])*>[msixpodualngcer]*/,\n      lookbehind: true,\n      greedy: true\n    }, // /.../\n    // The look-ahead tries to prevent two divisions on\n    // the same line from being highlighted as regex.\n    // This does not support multi-line regex.\n    {\n      pattern: /\\/(?:[^\\/\\\\\\r\\n]|\\\\.)*\\/[msixpodualngc]*(?=\\s*(?:$|[\\r\\n,.;})&|\\-+*~<>!?^]|(lt|gt|le|ge|eq|ne|cmp|not|and|or|xor|x)\\b))/,\n      greedy: true\n    }],\n    // FIXME Not sure about the handling of ::, ', and #\n    variable: [// ${^POSTMATCH}\n    /[&*$@%]\\{\\^[A-Z]+\\}/, // $^V\n    /[&*$@%]\\^[A-Z_]/, // ${...}\n    /[&*$@%]#?(?=\\{)/, // $foo\n    /[&*$@%]#?(?:(?:::)*'?(?!\\d)[\\w$]+)+(?:::)*/i, // $1\n    /[&*$@%]\\d+/, // $_, @_, %!\n    // The negative lookahead prevents from breaking the %= operator\n    /(?!%=)[$@%][!\"#$%&'()*+,\\-.\\/:;<=>?@[\\\\\\]^_`{|}~]/],\n    filehandle: {\n      // <>, <FOO>, _\n      pattern: /<(?![<=])\\S*>|\\b_\\b/,\n      alias: 'symbol'\n    },\n    vstring: {\n      // v1.2, 1.2.3\n      pattern: /v\\d+(?:\\.\\d+)*|\\d+(?:\\.\\d+){2,}/,\n      alias: 'string'\n    },\n    function: {\n      pattern: /sub [a-z0-9_]+/i,\n      inside: {\n        keyword: /sub/\n      }\n    },\n    keyword: /\\b(?:any|break|continue|default|delete|die|do|else|elsif|eval|for|foreach|given|goto|if|last|local|my|next|our|package|print|redo|require|say|state|sub|switch|undef|unless|until|use|when|while)\\b/,\n    number: /\\b(?:0x[\\dA-Fa-f](?:_?[\\dA-Fa-f])*|0b[01](?:_?[01])*|(?:\\d(?:_?\\d)*)?\\.?\\d(?:_?\\d)*(?:[Ee][+-]?\\d+)?)\\b/,\n    operator: /-[rwxoRWXOezsfdlpSbctugkTBMAC]\\b|\\+[+=]?|-[-=>]?|\\*\\*?=?|\\/\\/?=?|=[=~>]?|~[~=]?|\\|\\|?=?|&&?=?|<(?:=>?|<=?)?|>>?=?|![~=]?|[%^]=?|\\.(?:=|\\.\\.?)?|[\\\\?]|\\bx(?:=|\\b)|\\b(?:lt|gt|le|ge|eq|ne|cmp|not|and|or|xor)\\b/,\n    punctuation: /[{}[\\];(),:]/\n  };\n}","'use strict';\n\nvar refractorPhp = require('./php.js');\n\nmodule.exports = phpExtras;\nphpExtras.displayName = 'phpExtras';\nphpExtras.aliases = [];\n\nfunction phpExtras(Prism) {\n  Prism.register(refractorPhp);\n  Prism.languages.insertBefore('php', 'variable', {\n    this: /\\$this\\b/,\n    global: /\\$(?:_(?:SERVER|GET|POST|FILES|REQUEST|SESSION|ENV|COOKIE)|GLOBALS|HTTP_RAW_POST_DATA|argc|argv|php_errormsg|http_response_header)\\b/,\n    scope: {\n      pattern: /\\b[\\w\\\\]+::/,\n      inside: {\n        keyword: /static|self|parent/,\n        punctuation: /::|\\\\/\n      }\n    }\n  });\n}","'use strict';\n\nvar refractorSql = require('./sql.js');\n\nmodule.exports = plsql;\nplsql.displayName = 'plsql';\nplsql.aliases = [];\n\nfunction plsql(Prism) {\n  Prism.register(refractorSql);\n  Prism.languages.plsql = Prism.languages.extend('sql', {\n    comment: [/\\/\\*[\\s\\S]*?\\*\\//, /--.*/]\n  });\n\n  if (Prism.util.type(Prism.languages.plsql['keyword']) !== 'Array') {\n    Prism.languages.plsql['keyword'] = [Prism.languages.plsql['keyword']];\n  }\n\n  Prism.languages.plsql['keyword'].unshift(/\\b(?:ACCESS|AGENT|AGGREGATE|ARRAY|ARROW|AT|ATTRIBUTE|AUDIT|AUTHID|BFILE_BASE|BLOB_BASE|BLOCK|BODY|BOTH|BOUND|BYTE|CALLING|CHAR_BASE|CHARSET(?:FORM|ID)|CLOB_BASE|COLAUTH|COLLECT|CLUSTERS?|COMPILED|COMPRESS|CONSTANT|CONSTRUCTOR|CONTEXT|CRASH|CUSTOMDATUM|DANGLING|DATE_BASE|DEFINE|DETERMINISTIC|DURATION|ELEMENT|EMPTY|EXCEPTIONS?|EXCLUSIVE|EXTERNAL|FINAL|FORALL|FORM|FOUND|GENERAL|HEAP|HIDDEN|IDENTIFIED|IMMEDIATE|INCLUDING|INCREMENT|INDICATOR|INDEXES|INDICES|INFINITE|INITIAL|ISOPEN|INSTANTIABLE|INTERFACE|INVALIDATE|JAVA|LARGE|LEADING|LENGTH|LIBRARY|LIKE[24C]|LIMITED|LONG|LOOP|MAP|MAXEXTENTS|MAXLEN|MEMBER|MINUS|MLSLABEL|MULTISET|NAME|NAN|NATIVE|NEW|NOAUDIT|NOCOMPRESS|NOCOPY|NOTFOUND|NOWAIT|NUMBER(?:_BASE)?|OBJECT|OCI(?:COLL|DATE|DATETIME|DURATION|INTERVAL|LOBLOCATOR|NUMBER|RAW|REF|REFCURSOR|ROWID|STRING|TYPE)|OFFLINE|ONLINE|ONLY|OPAQUE|OPERATOR|ORACLE|ORADATA|ORGANIZATION|ORL(?:ANY|VARY)|OTHERS|OVERLAPS|OVERRIDING|PACKAGE|PARALLEL_ENABLE|PARAMETERS?|PASCAL|PCTFREE|PIPE(?:LINED)?|PRAGMA|PRIOR|PRIVATE|RAISE|RANGE|RAW|RECORD|REF|REFERENCE|REM|REMAINDER|RESULT|RESOURCE|RETURNING|REVERSE|ROW(?:ID|NUM|TYPE)|SAMPLE|SB[124]|SEGMENT|SELF|SEPARATE|SEQUENCE|SHORT|SIZE(?:_T)?|SPARSE|SQL(?:CODE|DATA|NAME|STATE)|STANDARD|STATIC|STDDEV|STORED|STRING|STRUCT|STYLE|SUBMULTISET|SUBPARTITION|SUBSTITUTABLE|SUBTYPE|SUCCESSFUL|SYNONYM|SYSDATE|TABAUTH|TDO|THE|TIMEZONE_(?:ABBR|HOUR|MINUTE|REGION)|TRAILING|TRANSAC(?:TIONAL)?|TRUSTED|UB[124]|UID|UNDER|UNTRUSTED|VALIDATE|VALIST|VARCHAR2|VARIABLE|VARIANCE|VARRAY|VIEWS|VOID|WHENEVER|WRAPPED|ZONE)\\b/i);\n\n  if (Prism.util.type(Prism.languages.plsql['operator']) !== 'Array') {\n    Prism.languages.plsql['operator'] = [Prism.languages.plsql['operator']];\n  }\n\n  Prism.languages.plsql['operator'].unshift(/:=/);\n}","'use strict';\n\nmodule.exports = powershell;\npowershell.displayName = 'powershell';\npowershell.aliases = [];\n\nfunction powershell(Prism) {\n  Prism.languages.powershell = {\n    comment: [{\n      pattern: /(^|[^`])<#[\\s\\S]*?#>/,\n      lookbehind: true\n    }, {\n      pattern: /(^|[^`])#.*/,\n      lookbehind: true\n    }],\n    string: [{\n      pattern: /\"(?:`[\\s\\S]|[^`\"])*\"/,\n      greedy: true,\n      inside: {\n        function: {\n          // Allow for one level of nesting\n          pattern: /(^|[^`])\\$\\((?:\\$\\(.*?\\)|(?!\\$\\()[^\\r\\n)])*\\)/,\n          lookbehind: true,\n          // Populated at end of file\n          inside: {}\n        }\n      }\n    }, {\n      pattern: /'(?:[^']|'')*'/,\n      greedy: true\n    }],\n    // Matches name spaces as well as casts, attribute decorators. Force starting with letter to avoid matching array indices\n    // Supports two levels of nested brackets (e.g. `[OutputType([System.Collections.Generic.List[int]])]`)\n    namespace: /\\[[a-z](?:\\[(?:\\[[^\\]]*]|[^\\[\\]])*]|[^\\[\\]])*]/i,\n    boolean: /\\$(?:true|false)\\b/i,\n    variable: /\\$\\w+\\b/i,\n    // Cmdlets and aliases. Aliases should come last, otherwise \"write\" gets preferred over \"write-host\" for example\n    // Get-Command | ?{ $_.ModuleName -match \"Microsoft.PowerShell.(Util|Core|Management)\" }\n    // Get-Alias | ?{ $_.ReferencedCommand.Module.Name -match \"Microsoft.PowerShell.(Util|Core|Management)\" }\n    function: [/\\b(?:Add-(?:Computer|Content|History|Member|PSSnapin|Type)|Checkpoint-Computer|Clear-(?:Content|EventLog|History|Item|ItemProperty|Variable)|Compare-Object|Complete-Transaction|Connect-PSSession|ConvertFrom-(?:Csv|Json|StringData)|Convert-Path|ConvertTo-(?:Csv|Html|Json|Xml)|Copy-(?:Item|ItemProperty)|Debug-Process|Disable-(?:ComputerRestore|PSBreakpoint|PSRemoting|PSSessionConfiguration)|Disconnect-PSSession|Enable-(?:ComputerRestore|PSBreakpoint|PSRemoting|PSSessionConfiguration)|Enter-PSSession|Exit-PSSession|Export-(?:Alias|Clixml|Console|Csv|FormatData|ModuleMember|PSSession)|ForEach-Object|Format-(?:Custom|List|Table|Wide)|Get-(?:Alias|ChildItem|Command|ComputerRestorePoint|Content|ControlPanelItem|Culture|Date|Event|EventLog|EventSubscriber|FormatData|Help|History|Host|HotFix|Item|ItemProperty|Job|Location|Member|Module|Process|PSBreakpoint|PSCallStack|PSDrive|PSProvider|PSSession|PSSessionConfiguration|PSSnapin|Random|Service|TraceSource|Transaction|TypeData|UICulture|Unique|Variable|WmiObject)|Group-Object|Import-(?:Alias|Clixml|Csv|LocalizedData|Module|PSSession)|Invoke-(?:Command|Expression|History|Item|RestMethod|WebRequest|WmiMethod)|Join-Path|Limit-EventLog|Measure-(?:Command|Object)|Move-(?:Item|ItemProperty)|New-(?:Alias|Event|EventLog|Item|ItemProperty|Module|ModuleManifest|Object|PSDrive|PSSession|PSSessionConfigurationFile|PSSessionOption|PSTransportOption|Service|TimeSpan|Variable|WebServiceProxy)|Out-(?:Default|File|GridView|Host|Null|Printer|String)|Pop-Location|Push-Location|Read-Host|Receive-(?:Job|PSSession)|Register-(?:EngineEvent|ObjectEvent|PSSessionConfiguration|WmiEvent)|Remove-(?:Computer|Event|EventLog|Item|ItemProperty|Job|Module|PSBreakpoint|PSDrive|PSSession|PSSnapin|TypeData|Variable|WmiObject)|Rename-(?:Computer|Item|ItemProperty)|Reset-ComputerMachinePassword|Resolve-Path|Restart-(?:Computer|Service)|Restore-Computer|Resume-(?:Job|Service)|Save-Help|Select-(?:Object|String|Xml)|Send-MailMessage|Set-(?:Alias|Content|Date|Item|ItemProperty|Location|PSBreakpoint|PSDebug|PSSessionConfiguration|Service|StrictMode|TraceSource|Variable|WmiInstance)|Show-(?:Command|ControlPanelItem|EventLog)|Sort-Object|Split-Path|Start-(?:Job|Process|Service|Sleep|Transaction)|Stop-(?:Computer|Job|Process|Service)|Suspend-(?:Job|Service)|Tee-Object|Test-(?:ComputerSecureChannel|Connection|ModuleManifest|Path|PSSessionConfigurationFile)|Trace-Command|Unblock-File|Undo-Transaction|Unregister-(?:Event|PSSessionConfiguration)|Update-(?:FormatData|Help|List|TypeData)|Use-Transaction|Wait-(?:Event|Job|Process)|Where-Object|Write-(?:Debug|Error|EventLog|Host|Output|Progress|Verbose|Warning))\\b/i, /\\b(?:ac|cat|chdir|clc|cli|clp|clv|compare|copy|cp|cpi|cpp|cvpa|dbp|del|diff|dir|ebp|echo|epal|epcsv|epsn|erase|fc|fl|ft|fw|gal|gbp|gc|gci|gcs|gdr|gi|gl|gm|gp|gps|group|gsv|gu|gv|gwmi|iex|ii|ipal|ipcsv|ipsn|irm|iwmi|iwr|kill|lp|ls|measure|mi|mount|move|mp|mv|nal|ndr|ni|nv|ogv|popd|ps|pushd|pwd|rbp|rd|rdr|ren|ri|rm|rmdir|rni|rnp|rp|rv|rvpa|rwmi|sal|saps|sasv|sbp|sc|select|set|shcm|si|sl|sleep|sls|sort|sp|spps|spsv|start|sv|swmi|tee|trcm|type|write)\\b/i],\n    // per http://technet.microsoft.com/en-us/library/hh847744.aspx\n    keyword: /\\b(?:Begin|Break|Catch|Class|Continue|Data|Define|Do|DynamicParam|Else|ElseIf|End|Exit|Filter|Finally|For|ForEach|From|Function|If|InlineScript|Parallel|Param|Process|Return|Sequence|Switch|Throw|Trap|Try|Until|Using|Var|While|Workflow)\\b/i,\n    operator: {\n      pattern: /(\\W?)(?:!|-(eq|ne|gt|ge|lt|le|sh[lr]|not|b?(?:and|x?or)|(?:Not)?(?:Like|Match|Contains|In)|Replace|Join|is(?:Not)?|as)\\b|-[-=]?|\\+[+=]?|[*\\/%]=?)/i,\n      lookbehind: true\n    },\n    punctuation: /[|{}[\\];(),.]/ // Variable interpolation inside strings, and nested expressions\n\n  };\n  Prism.languages.powershell.string[0].inside.boolean = Prism.languages.powershell.boolean;\n  Prism.languages.powershell.string[0].inside.variable = Prism.languages.powershell.variable;\n  Prism.languages.powershell.string[0].inside.function.inside = Prism.languages.powershell;\n}","'use strict';\n\nmodule.exports = processing;\nprocessing.displayName = 'processing';\nprocessing.aliases = [];\n\nfunction processing(Prism) {\n  Prism.languages.processing = Prism.languages.extend('clike', {\n    keyword: /\\b(?:break|catch|case|class|continue|default|else|extends|final|for|if|implements|import|new|null|private|public|return|static|super|switch|this|try|void|while)\\b/,\n    operator: /<[<=]?|>[>=]?|&&?|\\|\\|?|[%?]|[!=+\\-*\\/]=?/\n  });\n  Prism.languages.insertBefore('processing', 'number', {\n    // Special case: XML is a type\n    constant: /\\b(?!XML\\b)[A-Z][A-Z\\d_]+\\b/,\n    type: {\n      pattern: /\\b(?:boolean|byte|char|color|double|float|int|XML|[A-Z]\\w*)\\b/,\n      alias: 'variable'\n    }\n  }); // Spaces are allowed between function name and parenthesis\n\n  Prism.languages.processing['function'].pattern = /\\w+(?=\\s*\\()/; // Class-names is not styled by default\n\n  Prism.languages.processing['class-name'].alias = 'variable';\n}","'use strict';\n\nmodule.exports = prolog;\nprolog.displayName = 'prolog';\nprolog.aliases = [];\n\nfunction prolog(Prism) {\n  Prism.languages.prolog = {\n    // Syntax depends on the implementation\n    comment: [/%.+/, /\\/\\*[\\s\\S]*?\\*\\//],\n    // Depending on the implementation, strings may allow escaped newlines and quote-escape\n    string: {\n      pattern: /([\"'])(?:\\1\\1|\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    builtin: /\\b(?:fx|fy|xf[xy]?|yfx?)\\b/,\n    variable: /\\b[A-Z_]\\w*/,\n    // FIXME: Should we list all null-ary predicates (not followed by a parenthesis) like halt, trace, etc.?\n    function: /\\b[a-z]\\w*(?:(?=\\()|\\/\\d+)/,\n    number: /\\b\\d+\\.?\\d*/,\n    // Custom operators are allowed\n    operator: /[:\\\\=><\\-?*@\\/;+^|!$.]+|\\b(?:is|mod|not|xor)\\b/,\n    punctuation: /[(){}\\[\\],]/\n  };\n}","'use strict';\n\nmodule.exports = properties;\nproperties.displayName = 'properties';\nproperties.aliases = [];\n\nfunction properties(Prism) {\n  Prism.languages.properties = {\n    comment: /^[ \\t]*[#!].*$/m,\n    'attr-value': {\n      pattern: /(^[ \\t]*(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\s:=])+?(?: *[=:] *| ))(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])+/m,\n      lookbehind: true\n    },\n    'attr-name': /^[ \\t]*(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\s:=])+?(?= *[=:] *| )/m,\n    punctuation: /[=:]/\n  };\n}","'use strict';\n\nmodule.exports = protobuf;\nprotobuf.displayName = 'protobuf';\nprotobuf.aliases = [];\n\nfunction protobuf(Prism) {\n  Prism.languages.protobuf = Prism.languages.extend('clike', {\n    keyword: /\\b(?:package|import|message|enum)\\b/,\n    builtin: /\\b(?:required|repeated|optional|reserved)\\b/,\n    primitive: {\n      pattern: /\\b(?:double|float|int32|int64|uint32|uint64|sint32|sint64|fixed32|fixed64|sfixed32|sfixed64|bool|string|bytes)\\b/,\n      alias: 'symbol'\n    }\n  });\n}","'use strict';\n\nmodule.exports = pug;\npug.displayName = 'pug';\npug.aliases = [];\n\nfunction pug(Prism) {\n  ;\n\n  (function (Prism) {\n    // TODO:\n    // - Add CSS highlighting inside <style> tags\n    // - Add support for multi-line code blocks\n    // - Add support for interpolation #{} and !{}\n    // - Add support for tag interpolation #[]\n    // - Add explicit support for plain text using |\n    // - Add support for markup embedded in plain text\n    Prism.languages.pug = {\n      // Multiline stuff should appear before the rest\n      // This handles both single-line and multi-line comments\n      comment: {\n        pattern: /(^([\\t ]*))\\/\\/.*(?:(?:\\r?\\n|\\r)\\2[\\t ]+.+)*/m,\n        lookbehind: true\n      },\n      // All the tag-related part is in lookbehind\n      // so that it can be highlighted by the \"tag\" pattern\n      'multiline-script': {\n        pattern: /(^([\\t ]*)script\\b.*\\.[\\t ]*)(?:(?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ]+.+|\\s*?(?=\\r?\\n|\\r)))+/m,\n        lookbehind: true,\n        inside: {\n          rest: Prism.languages.javascript\n        }\n      },\n      // See at the end of the file for known filters\n      filter: {\n        pattern: /(^([\\t ]*)):.+(?:(?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ]+.+|\\s*?(?=\\r?\\n|\\r)))+/m,\n        lookbehind: true,\n        inside: {\n          'filter-name': {\n            pattern: /^:[\\w-]+/,\n            alias: 'variable'\n          }\n        }\n      },\n      'multiline-plain-text': {\n        pattern: /(^([\\t ]*)[\\w\\-#.]+\\.[\\t ]*)(?:(?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ]+.+|\\s*?(?=\\r?\\n|\\r)))+/m,\n        lookbehind: true\n      },\n      markup: {\n        pattern: /(^[\\t ]*)<.+/m,\n        lookbehind: true,\n        inside: {\n          rest: Prism.languages.markup\n        }\n      },\n      doctype: {\n        pattern: /((?:^|\\n)[\\t ]*)doctype(?: .+)?/,\n        lookbehind: true\n      },\n      // This handle all conditional and loop keywords\n      'flow-control': {\n        pattern: /(^[\\t ]*)(?:if|unless|else|case|when|default|each|while)\\b(?: .+)?/m,\n        lookbehind: true,\n        inside: {\n          each: {\n            pattern: /^each .+? in\\b/,\n            inside: {\n              keyword: /\\b(?:each|in)\\b/,\n              punctuation: /,/\n            }\n          },\n          branch: {\n            pattern: /^(?:if|unless|else|case|when|default|while)\\b/,\n            alias: 'keyword'\n          },\n          rest: Prism.languages.javascript\n        }\n      },\n      keyword: {\n        pattern: /(^[\\t ]*)(?:block|extends|include|append|prepend)\\b.+/m,\n        lookbehind: true\n      },\n      mixin: [// Declaration\n      {\n        pattern: /(^[\\t ]*)mixin .+/m,\n        lookbehind: true,\n        inside: {\n          keyword: /^mixin/,\n          function: /\\w+(?=\\s*\\(|\\s*$)/,\n          punctuation: /[(),.]/\n        }\n      }, // Usage\n      {\n        pattern: /(^[\\t ]*)\\+.+/m,\n        lookbehind: true,\n        inside: {\n          name: {\n            pattern: /^\\+\\w+/,\n            alias: 'function'\n          },\n          rest: Prism.languages.javascript\n        }\n      }],\n      script: {\n        pattern: /(^[\\t ]*script(?:(?:&[^(]+)?\\([^)]+\\))*[\\t ]+).+/m,\n        lookbehind: true,\n        inside: {\n          rest: Prism.languages.javascript\n        }\n      },\n      'plain-text': {\n        pattern: /(^[\\t ]*(?!-)[\\w\\-#.]*[\\w\\-](?:(?:&[^(]+)?\\([^)]+\\))*\\/?[\\t ]+).+/m,\n        lookbehind: true\n      },\n      tag: {\n        pattern: /(^[\\t ]*)(?!-)[\\w\\-#.]*[\\w\\-](?:(?:&[^(]+)?\\([^)]+\\))*\\/?:?/m,\n        lookbehind: true,\n        inside: {\n          attributes: [{\n            pattern: /&[^(]+\\([^)]+\\)/,\n            inside: {\n              rest: Prism.languages.javascript\n            }\n          }, {\n            pattern: /\\([^)]+\\)/,\n            inside: {\n              'attr-value': {\n                pattern: /(=\\s*)(?:\\{[^}]*\\}|[^,)\\r\\n]+)/,\n                lookbehind: true,\n                inside: {\n                  rest: Prism.languages.javascript\n                }\n              },\n              'attr-name': /[\\w-]+(?=\\s*!?=|\\s*[,)])/,\n              punctuation: /[!=(),]+/\n            }\n          }],\n          punctuation: /:/\n        }\n      },\n      code: [{\n        pattern: /(^[\\t ]*(?:-|!?=)).+/m,\n        lookbehind: true,\n        inside: {\n          rest: Prism.languages.javascript\n        }\n      }],\n      punctuation: /[.\\-!=|]+/\n    };\n    var filter_pattern = '(^([\\\\t ]*)):{{filter_name}}(?:(?:\\\\r?\\\\n|\\\\r(?!\\\\n))(?:\\\\2[\\\\t ]+.+|\\\\s*?(?=\\\\r?\\\\n|\\\\r)))+'; // Non exhaustive list of available filters and associated languages\n\n    var filters = [{\n      filter: 'atpl',\n      language: 'twig'\n    }, {\n      filter: 'coffee',\n      language: 'coffeescript'\n    }, 'ejs', 'handlebars', 'hogan', 'less', 'livescript', 'markdown', 'mustache', 'plates', {\n      filter: 'sass',\n      language: 'scss'\n    }, 'stylus', 'swig'];\n    var all_filters = {};\n\n    for (var i = 0, l = filters.length; i < l; i++) {\n      var filter = filters[i];\n      filter = typeof filter === 'string' ? {\n        filter: filter,\n        language: filter\n      } : filter;\n\n      if (Prism.languages[filter.language]) {\n        all_filters['filter-' + filter.filter] = {\n          pattern: RegExp(filter_pattern.replace('{{filter_name}}', filter.filter), 'm'),\n          lookbehind: true,\n          inside: {\n            'filter-name': {\n              pattern: /^:[\\w-]+/,\n              alias: 'variable'\n            },\n            rest: Prism.languages[filter.language]\n          }\n        };\n      }\n    }\n\n    Prism.languages.insertBefore('pug', 'filter', all_filters);\n  })(Prism);\n}","'use strict';\n\nmodule.exports = puppet;\npuppet.displayName = 'puppet';\npuppet.aliases = [];\n\nfunction puppet(Prism) {\n  ;\n\n  (function (Prism) {\n    Prism.languages.puppet = {\n      heredoc: [// Matches the content of a quoted heredoc string (subject to interpolation)\n      {\n        pattern: /(@\\(\"([^\"\\r\\n\\/):]+)\"(?:\\/[nrts$uL]*)?\\).*(?:\\r?\\n|\\r))(?:.*(?:\\r?\\n|\\r))*?[ \\t]*\\|?[ \\t]*-?[ \\t]*\\2/,\n        lookbehind: true,\n        alias: 'string',\n        inside: {\n          // Matches the end tag\n          punctuation: /(?=\\S).*\\S(?= *$)/ // See interpolation below\n\n        }\n      }, // Matches the content of an unquoted heredoc string (no interpolation)\n      {\n        pattern: /(@\\(([^\"\\r\\n\\/):]+)(?:\\/[nrts$uL]*)?\\).*(?:\\r?\\n|\\r))(?:.*(?:\\r?\\n|\\r))*?[ \\t]*\\|?[ \\t]*-?[ \\t]*\\2/,\n        lookbehind: true,\n        greedy: true,\n        alias: 'string',\n        inside: {\n          // Matches the end tag\n          punctuation: /(?=\\S).*\\S(?= *$)/\n        }\n      }, // Matches the start tag of heredoc strings\n      {\n        pattern: /@\\(\"?(?:[^\"\\r\\n\\/):]+)\"?(?:\\/[nrts$uL]*)?\\)/,\n        alias: 'string',\n        inside: {\n          punctuation: {\n            pattern: /(\\().+?(?=\\))/,\n            lookbehind: true\n          }\n        }\n      }],\n      'multiline-comment': {\n        pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n        lookbehind: true,\n        greedy: true,\n        alias: 'comment'\n      },\n      regex: {\n        // Must be prefixed with the keyword \"node\" or a non-word char\n        pattern: /((?:\\bnode\\s+|[~=\\(\\[\\{,]\\s*|[=+]>\\s*|^\\s*))\\/(?:[^\\/\\\\]|\\\\[\\s\\S])+\\/(?:[imx]+\\b|\\B)/,\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          // Extended regexes must have the x flag. They can contain single-line comments.\n          'extended-regex': {\n            pattern: /^\\/(?:[^\\/\\\\]|\\\\[\\s\\S])+\\/[im]*x[im]*$/,\n            inside: {\n              comment: /#.*/\n            }\n          }\n        }\n      },\n      comment: {\n        pattern: /(^|[^\\\\])#.*/,\n        lookbehind: true,\n        greedy: true\n      },\n      string: {\n        // Allow for one nested level of double quotes inside interpolation\n        pattern: /([\"'])(?:\\$\\{(?:[^'\"}]|([\"'])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2)+\\}|(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\n        greedy: true,\n        inside: {\n          'double-quoted': {\n            pattern: /^\"[\\s\\S]*\"$/,\n            inside: {// See interpolation below\n            }\n          }\n        }\n      },\n      variable: {\n        pattern: /\\$(?:::)?\\w+(?:::\\w+)*/,\n        inside: {\n          punctuation: /::/\n        }\n      },\n      'attr-name': /(?:\\w+|\\*)(?=\\s*=>)/,\n      function: [{\n        pattern: /(\\.)(?!\\d)\\w+/,\n        lookbehind: true\n      }, /\\b(?:contain|debug|err|fail|include|info|notice|realize|require|tag|warning)\\b|\\b(?!\\d)\\w+(?=\\()/],\n      number: /\\b(?:0x[a-f\\d]+|\\d+(?:\\.\\d+)?(?:e-?\\d+)?)\\b/i,\n      boolean: /\\b(?:true|false)\\b/,\n      // Includes words reserved for future use\n      keyword: /\\b(?:application|attr|case|class|consumes|default|define|else|elsif|function|if|import|inherits|node|private|produces|type|undef|unless)\\b/,\n      datatype: {\n        pattern: /\\b(?:Any|Array|Boolean|Callable|Catalogentry|Class|Collection|Data|Default|Enum|Float|Hash|Integer|NotUndef|Numeric|Optional|Pattern|Regexp|Resource|Runtime|Scalar|String|Struct|Tuple|Type|Undef|Variant)\\b/,\n        alias: 'symbol'\n      },\n      operator: /=[=~>]?|![=~]?|<(?:<\\|?|[=~|-])?|>[>=]?|->?|~>|\\|>?>?|[*\\/%+?]|\\b(?:and|in|or)\\b/,\n      punctuation: /[\\[\\]{}().,;]|:+/\n    };\n    var interpolation = [{\n      // Allow for one nested level of braces inside interpolation\n      pattern: /(^|[^\\\\])\\$\\{(?:[^'\"{}]|\\{[^}]*\\}|([\"'])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2)+\\}/,\n      lookbehind: true,\n      inside: {\n        'short-variable': {\n          // Negative look-ahead prevent wrong highlighting of functions\n          pattern: /(^\\$\\{)(?!\\w+\\()(?:::)?\\w+(?:::\\w+)*/,\n          lookbehind: true,\n          alias: 'variable',\n          inside: {\n            punctuation: /::/\n          }\n        },\n        delimiter: {\n          pattern: /^\\$/,\n          alias: 'variable'\n        },\n        rest: Prism.languages.puppet\n      }\n    }, {\n      pattern: /(^|[^\\\\])\\$(?:::)?\\w+(?:::\\w+)*/,\n      lookbehind: true,\n      alias: 'variable',\n      inside: {\n        punctuation: /::/\n      }\n    }];\n    Prism.languages.puppet['heredoc'][0].inside.interpolation = interpolation;\n    Prism.languages.puppet['string'].inside['double-quoted'].inside.interpolation = interpolation;\n  })(Prism);\n}","'use strict';\n\nvar refractorC = require('./c.js');\n\nmodule.exports = pure;\npure.displayName = 'pure';\npure.aliases = [];\n\nfunction pure(Prism) {\n  Prism.register(refractorC);\n\n  (function (Prism) {\n    Prism.languages.pure = {\n      comment: [{\n        pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n        lookbehind: true\n      }, {\n        pattern: /(^|[^\\\\:])\\/\\/.*/,\n        lookbehind: true\n      }, /#!.+/],\n      'inline-lang': {\n        pattern: /%<[\\s\\S]+?%>/,\n        greedy: true,\n        inside: {\n          lang: {\n            pattern: /(^%< *)-\\*-.+?-\\*-/,\n            lookbehind: true,\n            alias: 'comment'\n          },\n          delimiter: {\n            pattern: /^%<.*|%>$/,\n            alias: 'punctuation'\n          }\n        }\n      },\n      string: {\n        pattern: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n        greedy: true\n      },\n      number: {\n        // The look-behind prevents wrong highlighting of the .. operator\n        pattern: /((?:\\.\\.)?)(?:\\b(?:inf|nan)\\b|\\b0x[\\da-f]+|(?:\\b(?:0b)?\\d+(?:\\.\\d)?|\\B\\.\\d)\\d*(?:e[+-]?\\d+)?L?)/i,\n        lookbehind: true\n      },\n      keyword: /\\b(?:ans|break|bt|case|catch|cd|clear|const|def|del|dump|else|end|exit|extern|false|force|help|if|infix[lr]?|interface|let|ls|mem|namespace|nonfix|NULL|of|otherwise|outfix|override|postfix|prefix|private|public|pwd|quit|run|save|show|stats|then|throw|trace|true|type|underride|using|when|with)\\b/,\n      function: /\\b(?:abs|add_(?:(?:fundef|interface|macdef|typedef)(?:_at)?|addr|constdef|vardef)|all|any|applp?|arity|bigintp?|blob(?:_crc|_size|p)?|boolp?|byte_(?:matrix|pointer)|byte_c?string(?:_pointer)?|calloc|cat|catmap|ceil|char[ps]?|check_ptrtag|chr|clear_sentry|clearsym|closurep?|cmatrixp?|cols?|colcat(?:map)?|colmap|colrev|colvector(?:p|seq)?|complex(?:_float_(?:matrix|pointer)|_matrix(?:_view)?|_pointer|p)?|conj|cookedp?|cst|cstring(?:_(?:dup|list|vector))?|curry3?|cyclen?|del_(?:constdef|fundef|interface|macdef|typedef|vardef)|delete|diag(?:mat)?|dim|dmatrixp?|do|double(?:_matrix(?:_view)?|_pointer|p)?|dowith3?|drop|dropwhile|eval(?:cmd)?|exactp|filter|fix|fixity|flip|float(?:_matrix|_pointer)|floor|fold[lr]1?|frac|free|funp?|functionp?|gcd|get(?:_(?:byte|constdef|double|float|fundef|int(?:64)?|interface(?:_typedef)?|long|macdef|pointer|ptrtag|short|sentry|string|typedef|vardef))?|globsym|hash|head|id|im|imatrixp?|index|inexactp|infp|init|insert|int(?:_matrix(?:_view)?|_pointer|p)?|int64_(?:matrix|pointer)|integerp?|iteraten?|iterwhile|join|keys?|lambdap?|last(?:err(?:pos)?)?|lcd|list[2p]?|listmap|make_ptrtag|malloc|map|matcat|matrixp?|max|member|min|nanp|nargs|nmatrixp?|null|numberp?|ord|pack(?:ed)?|pointer(?:_cast|_tag|_type|p)?|pow|pred|ptrtag|put(?:_(?:byte|double|float|int(?:64)?|long|pointer|short|string))?|rationalp?|re|realp?|realloc|recordp?|redim|reduce(?:_with)?|refp?|repeatn?|reverse|rlistp?|round|rows?|rowcat(?:map)?|rowmap|rowrev|rowvector(?:p|seq)?|same|scan[lr]1?|sentry|sgn|short_(?:matrix|pointer)|slice|smatrixp?|sort|split|str|strcat|stream|stride|string(?:_(?:dup|list|vector)|p)?|subdiag(?:mat)?|submat|subseq2?|substr|succ|supdiag(?:mat)?|symbolp?|tail|take|takewhile|thunkp?|transpose|trunc|tuplep?|typep|ubyte|uint(?:64)?|ulong|uncurry3?|unref|unzip3?|update|ushort|vals?|varp?|vector(?:p|seq)?|void|zip3?|zipwith3?)\\b/,\n      special: {\n        pattern: /\\b__[a-z]+__\\b/i,\n        alias: 'builtin'\n      },\n      // Any combination of operator chars can be an operator\n      operator: /(?=\\b_|[^_])[!\"#$%&'*+,\\-.\\/:<=>?@\\\\^_`|~\\u00a1-\\u00bf\\u00d7-\\u00f7\\u20d0-\\u2bff]+|\\b(?:and|div|mod|not|or)\\b/,\n      // FIXME: How can we prevent | and , to be highlighted as operator when they are used alone?\n      punctuation: /[(){}\\[\\];,|]/\n    };\n    var inlineLanguages = ['c', {\n      lang: 'c++',\n      alias: 'cpp'\n    }, 'fortran', 'ats', 'dsp'];\n    var inlineLanguageRe = '%< *-\\\\*- *{lang}\\\\d* *-\\\\*-[\\\\s\\\\S]+?%>';\n    inlineLanguages.forEach(function (lang) {\n      var alias = lang;\n\n      if (typeof lang !== 'string') {\n        alias = lang.alias;\n        lang = lang.lang;\n      }\n\n      if (Prism.languages[alias]) {\n        var o = {};\n        o['inline-lang-' + alias] = {\n          pattern: RegExp(inlineLanguageRe.replace('{lang}', lang.replace(/([.+*?\\/\\\\(){}\\[\\]])/g, '\\\\$1')), 'i'),\n          inside: Prism.util.clone(Prism.languages.pure['inline-lang'].inside)\n        };\n        o['inline-lang-' + alias].inside.rest = Prism.util.clone(Prism.languages[alias]);\n        Prism.languages.insertBefore('pure', 'inline-lang', o);\n      }\n    }); // C is the default inline language\n\n    if (Prism.languages.c) {\n      Prism.languages.pure['inline-lang'].inside.rest = Prism.util.clone(Prism.languages.c);\n    }\n  })(Prism);\n}","'use strict';\n\nmodule.exports = python;\npython.displayName = 'python';\npython.aliases = [];\n\nfunction python(Prism) {\n  Prism.languages.python = {\n    comment: {\n      pattern: /(^|[^\\\\])#.*/,\n      lookbehind: true\n    },\n    'triple-quoted-string': {\n      pattern: /(\"\"\"|''')[\\s\\S]+?\\1/,\n      greedy: true,\n      alias: 'string'\n    },\n    string: {\n      pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    function: {\n      pattern: /((?:^|\\s)def[ \\t]+)[a-zA-Z_]\\w*(?=\\s*\\()/g,\n      lookbehind: true\n    },\n    'class-name': {\n      pattern: /(\\bclass\\s+)\\w+/i,\n      lookbehind: true\n    },\n    keyword: /\\b(?:as|assert|async|await|break|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|nonlocal|pass|print|raise|return|try|while|with|yield)\\b/,\n    builtin: /\\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\\b/,\n    boolean: /\\b(?:True|False|None)\\b/,\n    number: /(?:\\b(?=\\d)|\\B(?=\\.))(?:0[bo])?(?:(?:\\d|0x[\\da-f])[\\da-f]*\\.?\\d*|\\.\\d+)(?:e[+-]?\\d+)?j?\\b/i,\n    operator: /[-+%=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]|\\b(?:or|and|not)\\b/,\n    punctuation: /[{}[\\];(),.:]/\n  };\n}","'use strict';\n\nmodule.exports = q;\nq.displayName = 'q';\nq.aliases = [];\n\nfunction q(Prism) {\n  Prism.languages.q = {\n    string: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n    comment: [// From http://code.kx.com/wiki/Reference/Slash:\n    // When / is following a space (or a right parenthesis, bracket, or brace), it is ignored with the rest of the line.\n    {\n      pattern: /([\\t )\\]}])\\/.*/,\n      lookbehind: true,\n      greedy: true\n    }, // From http://code.kx.com/wiki/Reference/Slash:\n    // A line which has / as its first character and contains at least one other non-whitespace character is a whole-line comment and is ignored entirely.\n    // A / on a line by itself begins a multiline comment which is terminated by the next \\ on a line by itself.\n    // If a / is not matched by a \\, the multiline comment is unterminated and continues to end of file.\n    // The / and \\ must be the first char on the line, but may be followed by any amount of whitespace.\n    {\n      pattern: /(^|\\r?\\n|\\r)\\/[\\t ]*(?:(?:\\r?\\n|\\r)(?:.*(?:\\r?\\n|\\r))*?(?:\\\\(?=[\\t ]*(?:\\r?\\n|\\r))|$)|\\S.*)/,\n      lookbehind: true,\n      greedy: true\n    }, // From http://code.kx.com/wiki/Reference/Slash:\n    // A \\ on a line by itself with no preceding matching / will comment to end of file.\n    {\n      pattern: /^\\\\[\\t ]*(?:\\r?\\n|\\r)[\\s\\S]+/m,\n      greedy: true\n    }, {\n      pattern: /^#!.+/m,\n      greedy: true\n    }],\n    symbol: /`(?::\\S+|[\\w.]*)/,\n    datetime: {\n      pattern: /0N[mdzuvt]|0W[dtz]|\\d{4}\\.\\d\\d(?:m|\\.\\d\\d(?:T(?:\\d\\d(?::\\d\\d(?::\\d\\d(?:[.:]\\d\\d\\d)?)?)?)?)?[dz]?)|\\d\\d:\\d\\d(?::\\d\\d(?:[.:]\\d\\d\\d)?)?[uvt]?/,\n      alias: 'number'\n    },\n    // The negative look-ahead prevents bad highlighting\n    // of verbs 0: and 1:\n    number: /\\b(?![01]:)(?:0[wn]|0W[hj]?|0N[hje]?|0x[\\da-fA-F]+|\\d+\\.?\\d*(?:e[+-]?\\d+)?[hjfeb]?)/,\n    keyword: /\\\\\\w+\\b|\\b(?:abs|acos|aj0?|all|and|any|asc|asin|asof|atan|attr|avgs?|binr?|by|ceiling|cols|cor|cos|count|cov|cross|csv|cut|delete|deltas|desc|dev|differ|distinct|div|do|dsave|ej|enlist|eval|except|exec|exit|exp|fby|fills|first|fkeys|flip|floor|from|get|getenv|group|gtime|hclose|hcount|hdel|hopen|hsym|iasc|identity|idesc|if|ij|in|insert|inter|inv|keys?|last|like|list|ljf?|load|log|lower|lsq|ltime|ltrim|mavg|maxs?|mcount|md5|mdev|med|meta|mins?|mmax|mmin|mmu|mod|msum|neg|next|not|null|or|over|parse|peach|pj|plist|prds?|prev|prior|rand|rank|ratios|raze|read0|read1|reciprocal|reval|reverse|rload|rotate|rsave|rtrim|save|scan|scov|sdev|select|set|setenv|show|signum|sin|sqrt|ssr?|string|sublist|sums?|sv|svar|system|tables|tan|til|trim|txf|type|uj|ungroup|union|update|upper|upsert|value|var|views?|vs|wavg|where|while|within|wj1?|wsum|ww|xasc|xbar|xcols?|xdesc|xexp|xgroup|xkey|xlog|xprev|xrank)\\b/,\n    adverb: {\n      pattern: /['\\/\\\\]:?|\\beach\\b/,\n      alias: 'function'\n    },\n    verb: {\n      pattern: /(?:\\B\\.\\B|\\b[01]:|<[=>]?|>=?|[:+\\-*%,!?_~=|$&#@^]):?/,\n      alias: 'operator'\n    },\n    punctuation: /[(){}\\[\\];.]/\n  };\n}","'use strict';\n\nmodule.exports = qore;\nqore.displayName = 'qore';\nqore.aliases = [];\n\nfunction qore(Prism) {\n  Prism.languages.qore = Prism.languages.extend('clike', {\n    comment: {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:\\/\\/|#).*)/,\n      lookbehind: true\n    },\n    // Overridden to allow unescaped multi-line strings\n    string: {\n      pattern: /(\"|')(\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n      greedy: true\n    },\n    variable: /\\$(?!\\d)\\w+\\b/,\n    keyword: /\\b(?:abstract|any|assert|binary|bool|boolean|break|byte|case|catch|char|class|code|const|continue|data|default|do|double|else|enum|extends|final|finally|float|for|goto|hash|if|implements|import|inherits|instanceof|int|interface|long|my|native|new|nothing|null|object|our|own|private|reference|rethrow|return|short|soft(?:int|float|number|bool|string|date|list)|static|strictfp|string|sub|super|switch|synchronized|this|throw|throws|transient|try|void|volatile|while)\\b/,\n    number: /\\b(?:0b[01]+|0x[\\da-f]*\\.?[\\da-fp\\-]+|\\d*\\.?\\d+e?\\d*[df]|\\d*\\.?\\d+)\\b/i,\n    boolean: /\\b(?:true|false)\\b/i,\n    operator: {\n      pattern: /(^|[^.])(?:\\+[+=]?|-[-=]?|[!=](?:==?|~)?|>>?=?|<(?:=>?|<=?)?|&[&=]?|\\|[|=]?|[*\\/%^]=?|[~?])/,\n      lookbehind: true\n    },\n    function: /\\$?\\b(?!\\d)\\w+(?=\\()/\n  });\n}","'use strict';\n\nmodule.exports = r;\nr.displayName = 'r';\nr.aliases = [];\n\nfunction r(Prism) {\n  Prism.languages.r = {\n    comment: /#.*/,\n    string: {\n      pattern: /(['\"])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    'percent-operator': {\n      // Includes user-defined operators\n      // and %%, %*%, %/%, %in%, %o%, %x%\n      pattern: /%[^%\\s]*%/,\n      alias: 'operator'\n    },\n    boolean: /\\b(?:TRUE|FALSE)\\b/,\n    ellipsis: /\\.\\.(?:\\.|\\d+)/,\n    number: [/\\b(?:NaN|Inf)\\b/, /(?:\\b0x[\\dA-Fa-f]+(?:\\.\\d*)?|\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[EePp][+-]?\\d+)?[iL]?/],\n    keyword: /\\b(?:if|else|repeat|while|function|for|in|next|break|NULL|NA|NA_integer_|NA_real_|NA_complex_|NA_character_)\\b/,\n    operator: /->?>?|<(?:=|<?-)?|[>=!]=?|::?|&&?|\\|\\|?|[+*\\/^$@~]/,\n    punctuation: /[(){}\\[\\],;]/\n  };\n}","'use strict';\n\nmodule.exports = reason;\nreason.displayName = 'reason';\nreason.aliases = [];\n\nfunction reason(Prism) {\n  Prism.languages.reason = Prism.languages.extend('clike', {\n    comment: {\n      pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n      lookbehind: true\n    },\n    string: {\n      pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"/,\n      greedy: true\n    },\n    // 'class-name' must be matched *after* 'constructor' defined below\n    'class-name': /\\b[A-Z]\\w*/,\n    keyword: /\\b(?:and|as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|sig|struct|switch|then|to|try|type|val|virtual|when|while|with)\\b/,\n    operator: /\\.{3}|:[:=]|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\\-*\\/]\\.?|\\b(?:mod|land|lor|lxor|lsl|lsr|asr)\\b/\n  });\n  Prism.languages.insertBefore('reason', 'class-name', {\n    character: {\n      pattern: /'(?:\\\\x[\\da-f]{2}|\\\\o[0-3][0-7][0-7]|\\\\\\d{3}|\\\\.|[^'\\\\\\r\\n])'/,\n      alias: 'string'\n    },\n    constructor: {\n      // Negative look-ahead prevents from matching things like String.capitalize\n      pattern: /\\b[A-Z]\\w*\\b(?!\\s*\\.)/,\n      alias: 'variable'\n    },\n    label: {\n      pattern: /\\b[a-z]\\w*(?=::)/,\n      alias: 'symbol'\n    }\n  }); // We can't match functions property, so let's not even try.\n\n  delete Prism.languages.reason.function;\n}","'use strict';\n\nmodule.exports = renpy;\nrenpy.displayName = 'renpy';\nrenpy.aliases = [];\n\nfunction renpy(Prism) {\n  Prism.languages.renpy = {\n    // TODO Write tests.\n    comment: {\n      pattern: /(^|[^\\\\])#.+/,\n      lookbehind: true\n    },\n    string: {\n      pattern: /(\"\"\"|''')[\\s\\S]+?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2|(?:^#?(?:(?:[0-9a-fA-F]{2}){3}|(?:[0-9a-fA-F]){3})$)/m,\n      greedy: true\n    },\n    function: /[a-z_]\\w*(?=\\()/i,\n    property: /\\b(?:insensitive|idle|hover|selected_idle|selected_hover|background|position|alt|xpos|ypos|pos|xanchor|yanchor|anchor|xalign|yalign|align|xcenter|ycenter|xofsset|yoffset|ymaximum|maximum|xmaximum|xminimum|yminimum|minimum|xsize|ysizexysize|xfill|yfill|area|antialias|black_color|bold|caret|color|first_indent|font|size|italic|justify|kerning|language|layout|line_leading|line_overlap_split|line_spacing|min_width|newline_indent|outlines|rest_indent|ruby_style|slow_cps|slow_cps_multiplier|strikethrough|text_align|underline|hyperlink_functions|vertical|hinting|foreground|left_margin|xmargin|top_margin|bottom_margin|ymargin|left_padding|right_padding|xpadding|top_padding|bottom_padding|ypadding|size_group|child|hover_sound|activate_sound|mouse|focus_mask|keyboard_focus|bar_vertical|bar_invert|bar_resizing|left_gutter|right_gutter|top_gutter|bottom_gutter|left_bar|right_bar|top_bar|bottom_bar|thumb|thumb_shadow|thumb_offset|unscrollable|spacing|first_spacing|box_reverse|box_wrap|order_reverse|fit_first|ysize|thumbnail_width|thumbnail_height|help|text_ypos|text_xpos|idle_color|hover_color|selected_idle_color|selected_hover_color|insensitive_color|alpha|insensitive_background|hover_background|zorder|value|width|xadjustment|xanchoraround|xaround|xinitial|xoffset|xzoom|yadjustment|yanchoraround|yaround|yinitial|yzoom|zoom|ground|height|text_style|text_y_fudge|selected_insensitive|has_sound|has_music|has_voice|focus|hovered|image_style|length|minwidth|mousewheel|offset|prefix|radius|range|right_margin|rotate|rotate_pad|developer|screen_width|screen_height|window_title|name|version|windows_icon|default_fullscreen|default_text_cps|default_afm_time|main_menu_music|sample_sound|enter_sound|exit_sound|save_directory|enter_transition|exit_transition|intra_transition|main_game_transition|game_main_transition|end_splash_transition|end_game_transition|after_load_transition|window_show_transition|window_hide_transition|adv_nvl_transition|nvl_adv_transition|enter_yesno_transition|exit_yesno_transition|enter_replay_transition|exit_replay_transition|say_attribute_transition|directory_name|executable_name|include_update|window_icon|modal|google_play_key|google_play_salt|drag_name|drag_handle|draggable|dragged|droppable|dropped|narrator_menu|action|default_afm_enable|version_name|version_tuple|inside|fadeout|fadein|layers|layer_clipping|linear|scrollbars|side_xpos|side_ypos|side_spacing|edgescroll|drag_joined|drag_raise|drop_shadow|drop_shadow_color|subpixel|easein|easeout|time|crop|auto|update|get_installed_packages|can_update|UpdateVersion|Update|overlay_functions|translations|window_left_padding|show_side_image|show_two_window)\\b/,\n    tag: /\\b(?:label|image|menu|[hv]box|frame|text|imagemap|imagebutton|bar|vbar|screen|textbutton|buttoscreenn|fixed|grid|input|key|mousearea|side|timer|viewport|window|hotspot|hotbar|self|button|drag|draggroup|tag|mm_menu_frame|nvl|block|parallel)\\b|\\$/,\n    keyword: /\\b(?:as|assert|break|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|pass|print|raise|return|try|while|yield|adjustment|alignaround|allow|angle|around|box_layout|cache|changed|child_size|clicked|clipping|corner1|corner2|default|delay|exclude|scope|slow|slow_abortable|slow_done|sound|style_group|substitute|suffix|transform_anchor|transpose|unhovered|config|theme|mm_root|gm_root|rounded_window|build|disabled_text|disabled|widget_selected|widget_text|widget_hover|widget|updater|behind|call|expression|hide|init|jump|onlayer|python|renpy|scene|set|show|transform|play|queue|stop|pause|define|window|repeat|contains|choice|on|function|event|animation|clockwise|counterclockwise|circles|knot|null|None|random|has|add|use|fade|dissolve|style|store|id|voice|center|left|right|less_rounded|music|movie|clear|persistent|ui)\\b/,\n    boolean: /\\b(?:[Tt]rue|[Ff]alse)\\b/,\n    number: /(?:\\b(?:0[bo])?(?:(?:\\d|0x[\\da-f])[\\da-f]*\\.?\\d*)|\\B\\.\\d+)(?:e[+-]?\\d+)?j?/i,\n    operator: /[-+%=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]|\\b(?:or|and|not|with|at)\\b/,\n    punctuation: /[{}[\\];(),.:]/\n  };\n}","'use strict';\n\nmodule.exports = rest;\nrest.displayName = 'rest';\nrest.aliases = [];\n\nfunction rest(Prism) {\n  Prism.languages.rest = {\n    table: [{\n      pattern: /(\\s*)(?:\\+[=-]+)+\\+(?:\\r?\\n|\\r)(?:\\1(?:[+|].+)+[+|](?:\\r?\\n|\\r))+\\1(?:\\+[=-]+)+\\+/,\n      lookbehind: true,\n      inside: {\n        punctuation: /\\||(?:\\+[=-]+)+\\+/\n      }\n    }, {\n      pattern: /(\\s*)(?:=+ +)+=+(?:(?:\\r?\\n|\\r)\\1.+)+(?:\\r?\\n|\\r)\\1(?:=+ +)+=+(?=(?:\\r?\\n|\\r){2}|\\s*$)/,\n      lookbehind: true,\n      inside: {\n        punctuation: /[=-]+/\n      }\n    }],\n    // Directive-like patterns\n    'substitution-def': {\n      pattern: /(^\\s*\\.\\. )\\|(?:[^|\\s](?:[^|]*[^|\\s])?)\\| [^:]+::/m,\n      lookbehind: true,\n      inside: {\n        substitution: {\n          pattern: /^\\|(?:[^|\\s]|[^|\\s][^|]*[^|\\s])\\|/,\n          alias: 'attr-value',\n          inside: {\n            punctuation: /^\\||\\|$/\n          }\n        },\n        directive: {\n          pattern: /( +)[^:]+::/,\n          lookbehind: true,\n          alias: 'function',\n          inside: {\n            punctuation: /::$/\n          }\n        }\n      }\n    },\n    'link-target': [{\n      pattern: /(^\\s*\\.\\. )\\[[^\\]]+\\]/m,\n      lookbehind: true,\n      alias: 'string',\n      inside: {\n        punctuation: /^\\[|\\]$/\n      }\n    }, {\n      pattern: /(^\\s*\\.\\. )_(?:`[^`]+`|(?:[^:\\\\]|\\\\.)+):/m,\n      lookbehind: true,\n      alias: 'string',\n      inside: {\n        punctuation: /^_|:$/\n      }\n    }],\n    directive: {\n      pattern: /(^\\s*\\.\\. )[^:]+::/m,\n      lookbehind: true,\n      alias: 'function',\n      inside: {\n        punctuation: /::$/\n      }\n    },\n    comment: {\n      // The two alternatives try to prevent highlighting of blank comments\n      pattern: /(^\\s*\\.\\.)(?:(?: .+)?(?:(?:\\r?\\n|\\r).+)+| .+)(?=(?:\\r?\\n|\\r){2}|$)/m,\n      lookbehind: true\n    },\n    title: [// Overlined and underlined\n    {\n      pattern: /^(([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\2+)(?:\\r?\\n|\\r).+(?:\\r?\\n|\\r)\\1$/m,\n      inside: {\n        punctuation: /^[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+|[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+$/,\n        important: /.+/\n      }\n    }, // Underlined only\n    {\n      pattern: /(^|(?:\\r?\\n|\\r){2}).+(?:\\r?\\n|\\r)([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\2+(?=\\r?\\n|\\r|$)/,\n      lookbehind: true,\n      inside: {\n        punctuation: /[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+$/,\n        important: /.+/\n      }\n    }],\n    hr: {\n      pattern: /((?:\\r?\\n|\\r){2})([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\2{3,}(?=(?:\\r?\\n|\\r){2})/,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    field: {\n      pattern: /(^\\s*):[^:\\r\\n]+:(?= )/m,\n      lookbehind: true,\n      alias: 'attr-name'\n    },\n    'command-line-option': {\n      pattern: /(^\\s*)(?:[+-][a-z\\d]|(?:--|\\/)[a-z\\d-]+)(?:[ =](?:[a-z][\\w-]*|<[^<>]+>))?(?:, (?:[+-][a-z\\d]|(?:--|\\/)[a-z\\d-]+)(?:[ =](?:[a-z][\\w-]*|<[^<>]+>))?)*(?=(?:\\r?\\n|\\r)? {2,}\\S)/im,\n      lookbehind: true,\n      alias: 'symbol'\n    },\n    'literal-block': {\n      pattern: /::(?:\\r?\\n|\\r){2}([ \\t]+).+(?:(?:\\r?\\n|\\r)\\1.+)*/,\n      inside: {\n        'literal-block-punctuation': {\n          pattern: /^::/,\n          alias: 'punctuation'\n        }\n      }\n    },\n    'quoted-literal-block': {\n      pattern: /::(?:\\r?\\n|\\r){2}([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]).*(?:(?:\\r?\\n|\\r)\\1.*)*/,\n      inside: {\n        'literal-block-punctuation': {\n          pattern: /^(?:::|([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\1*)/m,\n          alias: 'punctuation'\n        }\n      }\n    },\n    'list-bullet': {\n      pattern: /(^\\s*)(?:[*+\\-•‣⁃]|\\(?(?:\\d+|[a-z]|[ivxdclm]+)\\)|(?:\\d+|[a-z]|[ivxdclm]+)\\.)(?= )/im,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    'doctest-block': {\n      pattern: /(^\\s*)>>> .+(?:(?:\\r?\\n|\\r).+)*/m,\n      lookbehind: true,\n      inside: {\n        punctuation: /^>>>/\n      }\n    },\n    inline: [{\n      pattern: /(^|[\\s\\-:\\/'\"<(\\[{])(?::[^:]+:`.*?`|`.*?`:[^:]+:|(\\*\\*?|``?|\\|)(?!\\s).*?[^\\s]\\2(?=[\\s\\-.,:;!?\\\\\\/'\")\\]}]|$))/m,\n      lookbehind: true,\n      inside: {\n        bold: {\n          pattern: /(^\\*\\*).+(?=\\*\\*$)/,\n          lookbehind: true\n        },\n        italic: {\n          pattern: /(^\\*).+(?=\\*$)/,\n          lookbehind: true\n        },\n        'inline-literal': {\n          pattern: /(^``).+(?=``$)/,\n          lookbehind: true,\n          alias: 'symbol'\n        },\n        role: {\n          pattern: /^:[^:]+:|:[^:]+:$/,\n          alias: 'function',\n          inside: {\n            punctuation: /^:|:$/\n          }\n        },\n        'interpreted-text': {\n          pattern: /(^`).+(?=`$)/,\n          lookbehind: true,\n          alias: 'attr-value'\n        },\n        substitution: {\n          pattern: /(^\\|).+(?=\\|$)/,\n          lookbehind: true,\n          alias: 'attr-value'\n        },\n        punctuation: /\\*\\*?|``?|\\|/\n      }\n    }],\n    link: [{\n      pattern: /\\[[^\\]]+\\]_(?=[\\s\\-.,:;!?\\\\\\/'\")\\]}]|$)/,\n      alias: 'string',\n      inside: {\n        punctuation: /^\\[|\\]_$/\n      }\n    }, {\n      pattern: /(?:\\b[a-z\\d](?:[_.:+]?[a-z\\d]+)*_?_|`[^`]+`_?_|_`[^`]+`)(?=[\\s\\-.,:;!?\\\\\\/'\")\\]}]|$)/i,\n      alias: 'string',\n      inside: {\n        punctuation: /^_?`|`$|`?_?_$/\n      }\n    }],\n    // Line block start,\n    // quote attribution,\n    // explicit markup start,\n    // and anonymous hyperlink target shortcut (__)\n    punctuation: {\n      pattern: /(^\\s*)(?:\\|(?= |$)|(?:---?|—|\\.\\.|__)(?= )|\\.\\.$)/m,\n      lookbehind: true\n    }\n  };\n}","'use strict';\n\nmodule.exports = rip;\nrip.displayName = 'rip';\nrip.aliases = [];\n\nfunction rip(Prism) {\n  Prism.languages.rip = {\n    comment: /#.*/,\n    keyword: /(?:=>|->)|\\b(?:class|if|else|switch|case|return|exit|try|catch|finally|raise)\\b/,\n    builtin: /@|\\bSystem\\b/,\n    boolean: /\\b(?:true|false)\\b/,\n    date: /\\b\\d{4}-\\d{2}-\\d{2}\\b/,\n    time: /\\b\\d{2}:\\d{2}:\\d{2}\\b/,\n    datetime: /\\b\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\b/,\n    character: /\\B`[^\\s`'\",.:;#\\/\\\\()<>\\[\\]{}]\\b/,\n    regex: {\n      pattern: /(^|[^/])\\/(?!\\/)(\\[.+?]|\\\\.|[^/\\\\\\r\\n])+\\/(?=\\s*($|[\\r\\n,.;})]))/,\n      lookbehind: true,\n      greedy: true\n    },\n    symbol: /:[^\\d\\s`'\",.:;#\\/\\\\()<>\\[\\]{}][^\\s`'\",.:;#\\/\\\\()<>\\[\\]{}]*/,\n    string: {\n      pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    number: /[+-]?(?:(?:\\d+\\.\\d+)|(?:\\d+))/,\n    punctuation: /(?:\\.{2,3})|[`,.:;=\\/\\\\()<>\\[\\]{}]/,\n    reference: /[^\\d\\s`'\",.:;#\\/\\\\()<>\\[\\]{}][^\\s`'\",.:;#\\/\\\\()<>\\[\\]{}]*/\n  };\n}","'use strict';\n\nmodule.exports = roboconf;\nroboconf.displayName = 'roboconf';\nroboconf.aliases = [];\n\nfunction roboconf(Prism) {\n  Prism.languages.roboconf = {\n    comment: /#.*/,\n    keyword: {\n      pattern: /(^|\\s)(?:(?:facet|instance of)(?=[ \\t]+[\\w-]+[ \\t]*\\{)|(?:external|import)\\b)/,\n      lookbehind: true\n    },\n    component: {\n      pattern: /[\\w-]+(?=[ \\t]*\\{)/,\n      alias: 'variable'\n    },\n    property: /[\\w.-]+(?=[ \\t]*:)/,\n    value: {\n      pattern: /(=[ \\t]*)[^,;]+/,\n      lookbehind: true,\n      alias: 'attr-value'\n    },\n    optional: {\n      pattern: /\\(optional\\)/,\n      alias: 'builtin'\n    },\n    wildcard: {\n      pattern: /(\\.)\\*/,\n      lookbehind: true,\n      alias: 'operator'\n    },\n    punctuation: /[{},.;:=]/\n  };\n}","'use strict';\n\nmodule.exports = rust;\nrust.displayName = 'rust';\nrust.aliases = [];\n\nfunction rust(Prism) {\n  /* TODO\n  Add support for Markdown notation inside doc comments\n  Add support for nested block comments...\n  Match closure params even when not followed by dash or brace\n  Add better support for macro definition\n  */\n  Prism.languages.rust = {\n    comment: [{\n      pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n      lookbehind: true\n    }, {\n      pattern: /(^|[^\\\\:])\\/\\/.*/,\n      lookbehind: true\n    }],\n    string: [{\n      pattern: /b?r(#*)\"(?:\\\\.|(?!\"\\1)[^\\\\\\r\\n])*\"\\1/,\n      greedy: true\n    }, {\n      pattern: /b?\"(?:\\\\.|[^\\\\\\r\\n\"])*\"/,\n      greedy: true\n    }],\n    char: {\n      pattern: /b?'(?:\\\\(?:x[0-7][\\da-fA-F]|u{(?:[\\da-fA-F]_*){1,6}|.)|[^\\\\\\r\\n\\t'])'/,\n      alias: 'string'\n    },\n    'lifetime-annotation': {\n      pattern: /'[^\\s>']+/,\n      alias: 'symbol'\n    },\n    keyword: /\\b(?:abstract|alignof|as|be|box|break|const|continue|crate|do|else|enum|extern|false|final|fn|for|if|impl|in|let|loop|match|mod|move|mut|offsetof|once|override|priv|pub|pure|ref|return|sizeof|static|self|struct|super|true|trait|type|typeof|unsafe|unsized|use|virtual|where|while|yield)\\b/,\n    attribute: {\n      pattern: /#!?\\[.+?\\]/,\n      greedy: true,\n      alias: 'attr-name'\n    },\n    function: [/\\w+(?=\\s*\\()/, // Macros can use parens or brackets\n    /\\w+!(?=\\s*\\(|\\[)/],\n    'macro-rules': {\n      pattern: /\\w+!/,\n      alias: 'function'\n    },\n    // Hex, oct, bin, dec numbers with visual separators and type suffix\n    number: /\\b(?:0x[\\dA-Fa-f](?:_?[\\dA-Fa-f])*|0o[0-7](?:_?[0-7])*|0b[01](?:_?[01])*|(\\d(?:_?\\d)*)?\\.?\\d(?:_?\\d)*(?:[Ee][+-]?\\d+)?)(?:_?(?:[iu](?:8|16|32|64)?|f32|f64))?\\b/,\n    // Closure params should not be confused with bitwise OR |\n    'closure-params': {\n      pattern: /\\|[^|]*\\|(?=\\s*[{-])/,\n      inside: {\n        punctuation: /[|:,]/,\n        operator: /[&*]/\n      }\n    },\n    punctuation: /[{}[\\];(),:]|\\.+|->/,\n    operator: /[-+*\\/%!^]=?|=[=>]?|@|&[&=]?|\\|[|=]?|<<?=?|>>?=?/\n  };\n}","'use strict';\n\nmodule.exports = sas;\nsas.displayName = 'sas';\nsas.aliases = [];\n\nfunction sas(Prism) {\n  Prism.languages.sas = {\n    datalines: {\n      pattern: /^\\s*(?:(?:data)?lines|cards);[\\s\\S]+?(?:\\r?\\n|\\r);/im,\n      alias: 'string',\n      inside: {\n        keyword: {\n          pattern: /^(\\s*)(?:(?:data)?lines|cards)/i,\n          lookbehind: true\n        },\n        punctuation: /;/\n      }\n    },\n    comment: [{\n      pattern: /(^\\s*|;\\s*)\\*.*;/m,\n      lookbehind: true\n    }, /\\/\\*[\\s\\S]+?\\*\\//],\n    datetime: {\n      // '1jan2013'd, '9:25:19pm't, '18jan2003:9:27:05am'dt\n      pattern: /'[^']+'(?:dt?|t)\\b/i,\n      alias: 'number'\n    },\n    string: {\n      pattern: /([\"'])(?:\\1\\1|(?!\\1)[\\s\\S])*\\1/,\n      greedy: true\n    },\n    keyword: /\\b(?:data|else|format|if|input|proc\\s\\w+|quit|run|then)\\b/i,\n    // Decimal (1.2e23), hexadecimal (0c1x)\n    number: /\\b(?:[\\da-f]+x|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)/i,\n    operator: /\\*\\*?|\\|\\|?|!!?|¦¦?|<[>=]?|>[<=]?|[-+\\/=&]|[~¬^]=?|\\b(?:eq|ne|gt|lt|ge|le|in|not)\\b/i,\n    punctuation: /[$%@.(){}\\[\\];,\\\\]/\n  };\n}","'use strict';\n\nmodule.exports = sass;\nsass.displayName = 'sass';\nsass.aliases = [];\n\nfunction sass(Prism) {\n  ;\n\n  (function (Prism) {\n    Prism.languages.sass = Prism.languages.extend('css', {\n      // Sass comments don't need to be closed, only indented\n      comment: {\n        pattern: /^([ \\t]*)\\/[\\/*].*(?:(?:\\r?\\n|\\r)\\1[ \\t]+.+)*/m,\n        lookbehind: true\n      }\n    });\n    Prism.languages.insertBefore('sass', 'atrule', {\n      // We want to consume the whole line\n      'atrule-line': {\n        // Includes support for = and + shortcuts\n        pattern: /^(?:[ \\t]*)[@+=].+/m,\n        inside: {\n          atrule: /(?:@[\\w-]+|[+=])/m\n        }\n      }\n    });\n    delete Prism.languages.sass.atrule;\n    var variable = /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/;\n    var operator = [/[+*\\/%]|[=!]=|<=?|>=?|\\b(?:and|or|not)\\b/, {\n      pattern: /(\\s+)-(?=\\s)/,\n      lookbehind: true\n    }];\n    Prism.languages.insertBefore('sass', 'property', {\n      // We want to consume the whole line\n      'variable-line': {\n        pattern: /^[ \\t]*\\$.+/m,\n        inside: {\n          punctuation: /:/,\n          variable: variable,\n          operator: operator\n        }\n      },\n      // We want to consume the whole line\n      'property-line': {\n        pattern: /^[ \\t]*(?:[^:\\s]+ *:.*|:[^:\\s]+.*)/m,\n        inside: {\n          property: [/[^:\\s]+(?=\\s*:)/, {\n            pattern: /(:)[^:\\s]+/,\n            lookbehind: true\n          }],\n          punctuation: /:/,\n          variable: variable,\n          operator: operator,\n          important: Prism.languages.sass.important\n        }\n      }\n    });\n    delete Prism.languages.sass.property;\n    delete Prism.languages.sass.important; // Now that whole lines for other patterns are consumed,\n    // what's left should be selectors\n\n    delete Prism.languages.sass.selector;\n    Prism.languages.insertBefore('sass', 'punctuation', {\n      selector: {\n        pattern: /([ \\t]*)\\S(?:,?[^,\\r\\n]+)*(?:,(?:\\r?\\n|\\r)\\1[ \\t]+\\S(?:,?[^,\\r\\n]+)*)*/,\n        lookbehind: true\n      }\n    });\n  })(Prism);\n}","'use strict';\n\nvar refractorJava = require('./java.js');\n\nmodule.exports = scala;\nscala.displayName = 'scala';\nscala.aliases = [];\n\nfunction scala(Prism) {\n  Prism.register(refractorJava);\n  Prism.languages.scala = Prism.languages.extend('java', {\n    keyword: /<-|=>|\\b(?:abstract|case|catch|class|def|do|else|extends|final|finally|for|forSome|if|implicit|import|lazy|match|new|null|object|override|package|private|protected|return|sealed|self|super|this|throw|trait|try|type|val|var|while|with|yield)\\b/,\n    string: [{\n      pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n      greedy: true\n    }, {\n      pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    }],\n    builtin: /\\b(?:String|Int|Long|Short|Byte|Boolean|Double|Float|Char|Any|AnyRef|AnyVal|Unit|Nothing)\\b/,\n    number: /\\b0x[\\da-f]*\\.?[\\da-f]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e\\d+)?[dfl]?/i,\n    symbol: /'[^\\d\\s\\\\]\\w*/\n  });\n  delete Prism.languages.scala['class-name'];\n  delete Prism.languages.scala['function'];\n}","'use strict';\n\nmodule.exports = scheme;\nscheme.displayName = 'scheme';\nscheme.aliases = [];\n\nfunction scheme(Prism) {\n  Prism.languages.scheme = {\n    comment: /;.*/,\n    string: {\n      pattern: /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'[^('\\s]*/,\n      greedy: true\n    },\n    keyword: {\n      pattern: /(\\()(?:define(?:-syntax|-library|-values)?|(?:case-)?lambda|let(?:\\*|rec)?(?:-values)?|else|if|cond|begin|delay(?:-force)?|parameterize|guard|set!|(?:quasi-)?quote|syntax-rules)/,\n      lookbehind: true\n    },\n    builtin: {\n      pattern: /(\\()(?:(?:cons|car|cdr|list|call-with-current-continuation|call\\/cc|append|abs|apply|eval)\\b|null\\?|pair\\?|boolean\\?|eof-object\\?|char\\?|procedure\\?|number\\?|port\\?|string\\?|vector\\?|symbol\\?|bytevector\\?)/,\n      lookbehind: true\n    },\n    number: {\n      pattern: /(\\s|[()])[-+]?\\d*\\.?\\d+(?:\\s*[-+]\\s*\\d*\\.?\\d+i)?\\b/,\n      lookbehind: true\n    },\n    boolean: /#[tf]/,\n    operator: {\n      pattern: /(\\()(?:[-+*%\\/]|[<>]=?|=>?)/,\n      lookbehind: true\n    },\n    function: {\n      pattern: /(\\()[^\\s()]*(?=\\s)/,\n      lookbehind: true\n    },\n    punctuation: /[()]/\n  };\n}","'use strict';\n\nmodule.exports = scss;\nscss.displayName = 'scss';\nscss.aliases = [];\n\nfunction scss(Prism) {\n  Prism.languages.scss = Prism.languages.extend('css', {\n    comment: {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n      lookbehind: true\n    },\n    atrule: {\n      pattern: /@[\\w-]+(?:\\([^()]+\\)|[^(])*?(?=\\s+[{;])/,\n      inside: {\n        rule: /@[\\w-]+/ // See rest below\n\n      }\n    },\n    // url, compassified\n    url: /(?:[-a-z]+-)*url(?=\\()/i,\n    // CSS selector regex is not appropriate for Sass\n    // since there can be lot more things (var, @ directive, nesting..)\n    // a selector must start at the end of a property or after a brace (end of other rules or nesting)\n    // it can contain some characters that aren't used for defining rules or end of selector, & (parent selector), or interpolated variable\n    // the end of a selector is found when there is no rules in it ( {} or {\\s}) or if there is a property (because an interpolated var\n    // can \"pass\" as a selector- e.g: proper#{$erty})\n    // this one was hard to do, so please be careful if you edit this one :)\n    selector: {\n      // Initial look-ahead is used to prevent matching of blank selectors\n      pattern: /(?=\\S)[^@;{}()]?(?:[^@;{}()]|&|#\\{\\$[-\\w]+\\})+(?=\\s*\\{(?:\\}|\\s|[^}]+[:{][^}]+))/m,\n      inside: {\n        parent: {\n          pattern: /&/,\n          alias: 'important'\n        },\n        placeholder: /%[-\\w]+/,\n        variable: /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n      }\n    }\n  });\n  Prism.languages.insertBefore('scss', 'atrule', {\n    keyword: [/@(?:if|else(?: if)?|for|each|while|import|extend|debug|warn|mixin|include|function|return|content)/i, {\n      pattern: /( +)(?:from|through)(?= )/,\n      lookbehind: true\n    }]\n  });\n  Prism.languages.scss.property = {\n    pattern: /(?:[\\w-]|\\$[-\\w]+|#\\{\\$[-\\w]+\\})+(?=\\s*:)/i,\n    inside: {\n      variable: /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n    }\n  };\n  Prism.languages.insertBefore('scss', 'important', {\n    // var and interpolated vars\n    variable: /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n  });\n  Prism.languages.insertBefore('scss', 'function', {\n    placeholder: {\n      pattern: /%[-\\w]+/,\n      alias: 'selector'\n    },\n    statement: {\n      pattern: /\\B!(?:default|optional)\\b/i,\n      alias: 'keyword'\n    },\n    boolean: /\\b(?:true|false)\\b/,\n    null: /\\bnull\\b/,\n    operator: {\n      pattern: /(\\s)(?:[-+*\\/%]|[=!]=|<=?|>=?|and|or|not)(?=\\s)/,\n      lookbehind: true\n    }\n  });\n  Prism.languages.scss['atrule'].inside.rest = Prism.languages.scss;\n}","'use strict';\n\nmodule.exports = smalltalk;\nsmalltalk.displayName = 'smalltalk';\nsmalltalk.aliases = [];\n\nfunction smalltalk(Prism) {\n  Prism.languages.smalltalk = {\n    comment: /\"(?:\"\"|[^\"])+\"/,\n    string: /'(?:''|[^'])+'/,\n    symbol: /#[\\da-z]+|#(?:-|([+\\/\\\\*~<>=@%|&?!])\\1?)|#(?=\\()/i,\n    'block-arguments': {\n      pattern: /(\\[\\s*):[^\\[|]*\\|/,\n      lookbehind: true,\n      inside: {\n        variable: /:[\\da-z]+/i,\n        punctuation: /\\|/\n      }\n    },\n    'temporary-variables': {\n      pattern: /\\|[^|]+\\|/,\n      inside: {\n        variable: /[\\da-z]+/i,\n        punctuation: /\\|/\n      }\n    },\n    keyword: /\\b(?:nil|true|false|self|super|new)\\b/,\n    character: {\n      pattern: /\\$./,\n      alias: 'string'\n    },\n    number: [/\\d+r-?[\\dA-Z]+(?:\\.[\\dA-Z]+)?(?:e-?\\d+)?/, /\\b\\d+(?:\\.\\d+)?(?:e-?\\d+)?/],\n    operator: /[<=]=?|:=|~[~=]|\\/\\/?|\\\\\\\\|>[>=]?|[!^+\\-*&|,@]/,\n    punctuation: /[.;:?\\[\\](){}]/\n  };\n}","'use strict';\n\nmodule.exports = smarty;\nsmarty.displayName = 'smarty';\nsmarty.aliases = [];\n\nfunction smarty(Prism) {\n  /* TODO\n  Add support for variables inside double quoted strings\n  Add support for {php}\n  */\n  ;\n\n  (function (Prism) {\n    Prism.languages.smarty = {\n      comment: /\\{\\*[\\s\\S]*?\\*\\}/,\n      delimiter: {\n        pattern: /^\\{|\\}$/i,\n        alias: 'punctuation'\n      },\n      string: /([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      number: /\\b0x[\\dA-Fa-f]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee][-+]?\\d+)?/,\n      variable: [/\\$(?!\\d)\\w+/, /#(?!\\d)\\w+#/, {\n        pattern: /(\\.|->)(?!\\d)\\w+/,\n        lookbehind: true\n      }, {\n        pattern: /(\\[)(?!\\d)\\w+(?=\\])/,\n        lookbehind: true\n      }],\n      function: [{\n        pattern: /(\\|\\s*)@?(?!\\d)\\w+/,\n        lookbehind: true\n      }, /^\\/?(?!\\d)\\w+/, /(?!\\d)\\w+(?=\\()/],\n      'attr-name': {\n        // Value is made optional because it may have already been tokenized\n        pattern: /\\w+\\s*=\\s*(?:(?!\\d)\\w+)?/,\n        inside: {\n          variable: {\n            pattern: /(=\\s*)(?!\\d)\\w+/,\n            lookbehind: true\n          },\n          operator: /=/\n        }\n      },\n      punctuation: [/[\\[\\]().,:`]|->/],\n      operator: [/[+\\-*\\/%]|==?=?|[!<>]=?|&&|\\|\\|?/, /\\bis\\s+(?:not\\s+)?(?:div|even|odd)(?:\\s+by)?\\b/, /\\b(?:eq|neq?|gt|lt|gt?e|lt?e|not|mod|or|and)\\b/],\n      keyword: /\\b(?:false|off|on|no|true|yes)\\b/ // Comments are inserted at top so that they can\n      // surround markup\n\n    };\n    Prism.languages.insertBefore('smarty', 'tag', {\n      'smarty-comment': {\n        pattern: /\\{\\*[\\s\\S]*?\\*\\}/,\n        alias: ['smarty', 'comment']\n      }\n    }); // Tokenize all inline Smarty expressions\n\n    Prism.hooks.add('before-tokenize', function (env) {\n      var smartyPattern = /\\{\\*[\\s\\S]*?\\*\\}|\\{[\\s\\S]+?\\}/g;\n      var smartyLitteralStart = '{literal}';\n      var smartyLitteralEnd = '{/literal}';\n      var smartyLitteralMode = false;\n      Prism.languages['markup-templating'].buildPlaceholders(env, 'smarty', smartyPattern, function (match) {\n        // Smarty tags inside {literal} block are ignored\n        if (match === smartyLitteralEnd) {\n          smartyLitteralMode = false;\n        }\n\n        if (!smartyLitteralMode) {\n          if (match === smartyLitteralStart) {\n            smartyLitteralMode = true;\n          }\n\n          return true;\n        }\n\n        return false;\n      });\n    }); // Re-insert the tokens after tokenizing\n\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'smarty');\n    });\n  })(Prism);\n}","'use strict';\n\nmodule.exports = soy;\nsoy.displayName = 'soy';\nsoy.aliases = [];\n\nfunction soy(Prism) {\n  ;\n\n  (function (Prism) {\n    var stringPattern = /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/;\n    var numberPattern = /\\b\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\b|\\b0x[\\dA-F]+\\b/;\n    Prism.languages.soy = {\n      comment: [/\\/\\*[\\s\\S]*?\\*\\//, {\n        pattern: /(\\s)\\/\\/.*/,\n        lookbehind: true,\n        greedy: true\n      }],\n      'command-arg': {\n        pattern: /({+\\/?\\s*(?:alias|call|delcall|delpackage|deltemplate|namespace|template)\\s+)\\.?[\\w.]+/,\n        lookbehind: true,\n        alias: 'string',\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      parameter: {\n        pattern: /({+\\/?\\s*@?param\\??\\s+)\\.?[\\w.]+/,\n        lookbehind: true,\n        alias: 'variable'\n      },\n      keyword: [{\n        pattern: /({+\\/?[^\\S\\r\\n]*)(?:\\\\[nrt]|alias|call|case|css|default|delcall|delpackage|deltemplate|else(?:if)?|fallbackmsg|for(?:each)?|if(?:empty)?|lb|let|literal|msg|namespace|nil|@?param\\??|rb|sp|switch|template|xid)/,\n        lookbehind: true\n      }, /\\b(?:any|as|attributes|bool|css|float|in|int|js|html|list|map|null|number|string|uri)\\b/],\n      delimiter: {\n        pattern: /^{+\\/?|\\/?}+$/,\n        alias: 'punctuation'\n      },\n      property: /\\w+(?==)/,\n      variable: {\n        pattern: /\\$[^\\W\\d]\\w*(?:\\??(?:\\.\\w+|\\[[^\\]]+]))*/,\n        inside: {\n          string: {\n            pattern: stringPattern,\n            greedy: true\n          },\n          number: numberPattern,\n          punctuation: /[\\[\\].?]/\n        }\n      },\n      string: {\n        pattern: stringPattern,\n        greedy: true\n      },\n      function: [/\\w+(?=\\()/, {\n        pattern: /(\\|[^\\S\\r\\n]*)\\w+/,\n        lookbehind: true\n      }],\n      boolean: /\\b(?:true|false)\\b/,\n      number: numberPattern,\n      operator: /\\?:?|<=?|>=?|==?|!=|[+*/%-]|\\b(?:and|not|or)\\b/,\n      punctuation: /[{}()\\[\\]|.,:]/ // Tokenize all inline Soy expressions\n\n    };\n    Prism.hooks.add('before-tokenize', function (env) {\n      var soyPattern = /{{.+?}}|{.+?}|\\s\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//g;\n      var soyLitteralStart = '{literal}';\n      var soyLitteralEnd = '{/literal}';\n      var soyLitteralMode = false;\n      Prism.languages['markup-templating'].buildPlaceholders(env, 'soy', soyPattern, function (match) {\n        // Soy tags inside {literal} block are ignored\n        if (match === soyLitteralEnd) {\n          soyLitteralMode = false;\n        }\n\n        if (!soyLitteralMode) {\n          if (match === soyLitteralStart) {\n            soyLitteralMode = true;\n          }\n\n          return true;\n        }\n\n        return false;\n      });\n    }); // Re-insert the tokens after tokenizing\n\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'soy');\n    });\n  })(Prism);\n}","'use strict';\n\nmodule.exports = stylus;\nstylus.displayName = 'stylus';\nstylus.aliases = [];\n\nfunction stylus(Prism) {\n  ;\n\n  (function (Prism) {\n    var inside = {\n      url: /url\\(([\"']?).*?\\1\\)/i,\n      string: {\n        pattern: /(\"|')(?:(?!\\1)[^\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\\1/,\n        greedy: true\n      },\n      interpolation: null,\n      // See below\n      func: null,\n      // See below\n      important: /\\B!(?:important|optional)\\b/i,\n      keyword: {\n        pattern: /(^|\\s+)(?:(?:if|else|for|return|unless)(?=\\s+|$)|@[\\w-]+)/,\n        lookbehind: true\n      },\n      hexcode: /#[\\da-f]{3,6}/i,\n      number: /\\b\\d+(?:\\.\\d+)?%?/,\n      boolean: /\\b(?:true|false)\\b/,\n      operator: [// We want non-word chars around \"-\" because it is\n      // accepted in property names.\n      /~|[+!\\/%<>?=]=?|[-:]=|\\*[*=]?|\\.+|&&|\\|\\||\\B-\\B|\\b(?:and|in|is(?: a| defined| not|nt)?|not|or)\\b/],\n      punctuation: /[{}()\\[\\];:,]/\n    };\n    inside['interpolation'] = {\n      pattern: /\\{[^\\r\\n}:]+\\}/,\n      alias: 'variable',\n      inside: {\n        delimiter: {\n          pattern: /^{|}$/,\n          alias: 'punctuation'\n        },\n        rest: inside\n      }\n    };\n    inside['func'] = {\n      pattern: /[\\w-]+\\([^)]*\\).*/,\n      inside: {\n        function: /^[^(]+/,\n        rest: inside\n      }\n    };\n    Prism.languages.stylus = {\n      comment: {\n        pattern: /(^|[^\\\\])(\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n        lookbehind: true\n      },\n      'atrule-declaration': {\n        pattern: /(^\\s*)@.+/m,\n        lookbehind: true,\n        inside: {\n          atrule: /^@[\\w-]+/,\n          rest: inside\n        }\n      },\n      'variable-declaration': {\n        pattern: /(^[ \\t]*)[\\w$-]+\\s*.?=[ \\t]*(?:(?:\\{[^}]*\\}|.+)|$)/m,\n        lookbehind: true,\n        inside: {\n          variable: /^\\S+/,\n          rest: inside\n        }\n      },\n      statement: {\n        pattern: /(^[ \\t]*)(?:if|else|for|return|unless)[ \\t]+.+/m,\n        lookbehind: true,\n        inside: {\n          keyword: /^\\S+/,\n          rest: inside\n        }\n      },\n      // A property/value pair cannot end with a comma or a brace\n      // It cannot have indented content unless it ended with a semicolon\n      'property-declaration': {\n        pattern: /((?:^|\\{)([ \\t]*))(?:[\\w-]|\\{[^}\\r\\n]+\\})+(?:\\s*:\\s*|[ \\t]+)[^{\\r\\n]*(?:;|[^{\\r\\n,](?=$)(?!(\\r?\\n|\\r)(?:\\{|\\2[ \\t]+)))/m,\n        lookbehind: true,\n        inside: {\n          property: {\n            pattern: /^[^\\s:]+/,\n            inside: {\n              interpolation: inside.interpolation\n            }\n          },\n          rest: inside\n        }\n      },\n      // A selector can contain parentheses only as part of a pseudo-element\n      // It can span multiple lines.\n      // It must end with a comma or an accolade or have indented content.\n      selector: {\n        pattern: /(^[ \\t]*)(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\))?|\\{[^}\\r\\n]+\\})+)(?:(?:\\r?\\n|\\r)(?:\\1(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\))?|\\{[^}\\r\\n]+\\})+)))*(?:,$|\\{|(?=(?:\\r?\\n|\\r)(?:\\{|\\1[ \\t]+)))/m,\n        lookbehind: true,\n        inside: {\n          interpolation: inside.interpolation,\n          punctuation: /[{},]/\n        }\n      },\n      func: inside.func,\n      string: inside.string,\n      interpolation: inside.interpolation,\n      punctuation: /[{}()\\[\\];:.]/\n    };\n  })(Prism);\n}","'use strict';\n\nmodule.exports = swift;\nswift.displayName = 'swift';\nswift.aliases = [];\n\nfunction swift(Prism) {\n  // issues: nested multiline comments\n  Prism.languages.swift = Prism.languages.extend('clike', {\n    string: {\n      pattern: /(\"|')(\\\\(?:\\((?:[^()]|\\([^)]+\\))+\\)|\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern: /\\\\\\((?:[^()]|\\([^)]+\\))+\\)/,\n          inside: {\n            delimiter: {\n              pattern: /^\\\\\\(|\\)$/,\n              alias: 'variable' // See rest below\n\n            }\n          }\n        }\n      }\n    },\n    keyword: /\\b(?:as|associativity|break|case|catch|class|continue|convenience|default|defer|deinit|didSet|do|dynamic(?:Type)?|else|enum|extension|fallthrough|final|for|func|get|guard|if|import|in|infix|init|inout|internal|is|lazy|left|let|mutating|new|none|nonmutating|operator|optional|override|postfix|precedence|prefix|private|protocol|public|repeat|required|rethrows|return|right|safe|self|Self|set|static|struct|subscript|super|switch|throws?|try|Type|typealias|unowned|unsafe|var|weak|where|while|willSet|__(?:COLUMN__|FILE__|FUNCTION__|LINE__))\\b/,\n    number: /\\b(?:[\\d_]+(?:\\.[\\de_]+)?|0x[a-f0-9_]+(?:\\.[a-f0-9p_]+)?|0b[01_]+|0o[0-7_]+)\\b/i,\n    constant: /\\b(?:nil|[A-Z_]{2,}|k[A-Z][A-Za-z_]+)\\b/,\n    atrule: /@\\b(?:IB(?:Outlet|Designable|Action|Inspectable)|class_protocol|exported|noreturn|NS(?:Copying|Managed)|objc|UIApplicationMain|auto_closure)\\b/,\n    builtin: /\\b(?:[A-Z]\\S+|abs|advance|alignof(?:Value)?|assert|contains|count(?:Elements)?|debugPrint(?:ln)?|distance|drop(?:First|Last)|dump|enumerate|equal|filter|find|first|getVaList|indices|isEmpty|join|last|lexicographicalCompare|map|max(?:Element)?|min(?:Element)?|numericCast|overlaps|partition|print(?:ln)?|reduce|reflect|reverse|sizeof(?:Value)?|sort(?:ed)?|split|startsWith|stride(?:of(?:Value)?)?|suffix|swap|toDebugString|toString|transcode|underestimateCount|unsafeBitCast|with(?:ExtendedLifetime|Unsafe(?:MutablePointers?|Pointers?)|VaList))\\b/\n  });\n  Prism.languages.swift['string'].inside['interpolation'].inside.rest = Prism.languages.swift;\n}","'use strict';\n\nmodule.exports = tap;\ntap.displayName = 'tap';\ntap.aliases = [];\n\nfunction tap(Prism) {\n  Prism.languages.tap = {\n    fail: /not ok[^#{\\n\\r]*/,\n    pass: /ok[^#{\\n\\r]*/,\n    pragma: /pragma [+-][a-z]+/,\n    bailout: /bail out!.*/i,\n    version: /TAP version \\d+/i,\n    plan: /\\d+\\.\\.\\d+(?: +#.*)?/,\n    subtest: {\n      pattern: /# Subtest(?:: .*)?/,\n      greedy: true\n    },\n    punctuation: /[{}]/,\n    directive: /#.*/,\n    yamlish: {\n      pattern: /(^[^\\S\\r\\n]*)---(?:\\r\\n?|\\n)(?:.*(?:\\r\\n?|\\n))*?[^\\S\\r\\n]*\\.\\.\\.$/m,\n      lookbehind: true,\n      inside: Prism.languages.yaml,\n      alias: 'language-yaml'\n    }\n  };\n}","'use strict';\n\nmodule.exports = tcl;\ntcl.displayName = 'tcl';\ntcl.aliases = [];\n\nfunction tcl(Prism) {\n  Prism.languages.tcl = {\n    comment: {\n      pattern: /(^|[^\\\\])#.*/,\n      lookbehind: true\n    },\n    string: {\n      pattern: /\"(?:[^\"\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\"/,\n      greedy: true\n    },\n    variable: [{\n      pattern: /(\\$)(?:::)?(?:[a-zA-Z0-9]+::)*\\w+/,\n      lookbehind: true\n    }, {\n      pattern: /(\\$){[^}]+}/,\n      lookbehind: true\n    }, {\n      pattern: /(^\\s*set[ \\t]+)(?:::)?(?:[a-zA-Z0-9]+::)*\\w+/m,\n      lookbehind: true\n    }],\n    function: {\n      pattern: /(^\\s*proc[ \\t]+)[^\\s]+/m,\n      lookbehind: true\n    },\n    builtin: [{\n      pattern: /(^\\s*)(?:proc|return|class|error|eval|exit|for|foreach|if|switch|while|break|continue)\\b/m,\n      lookbehind: true\n    }, /\\b(?:elseif|else)\\b/],\n    scope: {\n      pattern: /(^\\s*)(?:global|upvar|variable)\\b/m,\n      lookbehind: true,\n      alias: 'constant'\n    },\n    keyword: {\n      pattern: /(^\\s*|\\[)(?:after|append|apply|array|auto_(?:execok|import|load|mkindex|qualify|reset)|automkindex_old|bgerror|binary|catch|cd|chan|clock|close|concat|dde|dict|encoding|eof|exec|expr|fblocked|fconfigure|fcopy|file(?:event|name)?|flush|gets|glob|history|http|incr|info|interp|join|lappend|lassign|lindex|linsert|list|llength|load|lrange|lrepeat|lreplace|lreverse|lsearch|lset|lsort|math(?:func|op)|memory|msgcat|namespace|open|package|parray|pid|pkg_mkIndex|platform|puts|pwd|re_syntax|read|refchan|regexp|registry|regsub|rename|Safe_Base|scan|seek|set|socket|source|split|string|subst|Tcl|tcl(?:_endOfWord|_findLibrary|startOf(?:Next|Previous)Word|wordBreak(?:After|Before)|test|vars)|tell|time|tm|trace|unknown|unload|unset|update|uplevel|vwait)\\b/m,\n      lookbehind: true\n    },\n    operator: /!=?|\\*\\*?|==|&&?|\\|\\|?|<[=<]?|>[=>]?|[-+~\\/%?^]|\\b(?:eq|ne|in|ni)\\b/,\n    punctuation: /[{}()\\[\\]]/\n  };\n}","'use strict';\n\nmodule.exports = textile;\ntextile.displayName = 'textile';\ntextile.aliases = [];\n\nfunction textile(Prism) {\n  ;\n\n  (function (Prism) {\n    // We don't allow for pipes inside parentheses\n    // to not break table pattern |(. foo |). bar |\n    var modifierRegex = '(?:\\\\([^|)]+\\\\)|\\\\[[^\\\\]]+\\\\]|\\\\{[^}]+\\\\})+';\n    var modifierTokens = {\n      css: {\n        pattern: /\\{[^}]+\\}/,\n        inside: {\n          rest: Prism.languages.css\n        }\n      },\n      'class-id': {\n        pattern: /(\\()[^)]+(?=\\))/,\n        lookbehind: true,\n        alias: 'attr-value'\n      },\n      lang: {\n        pattern: /(\\[)[^\\]]+(?=\\])/,\n        lookbehind: true,\n        alias: 'attr-value'\n      },\n      // Anything else is punctuation (the first pattern is for row/col spans inside tables)\n      punctuation: /[\\\\\\/]\\d+|\\S/\n    };\n    Prism.languages.textile = Prism.languages.extend('markup', {\n      phrase: {\n        pattern: /(^|\\r|\\n)\\S[\\s\\S]*?(?=$|\\r?\\n\\r?\\n|\\r\\r)/,\n        lookbehind: true,\n        inside: {\n          // h1. Header 1\n          'block-tag': {\n            pattern: RegExp('^[a-z]\\\\w*(?:' + modifierRegex + '|[<>=()])*\\\\.'),\n            inside: {\n              modifier: {\n                pattern: RegExp('(^[a-z]\\\\w*)(?:' + modifierRegex + '|[<>=()])+(?=\\\\.)'),\n                lookbehind: true,\n                inside: modifierTokens\n              },\n              tag: /^[a-z]\\w*/,\n              punctuation: /\\.$/\n            }\n          },\n          // # List item\n          // * List item\n          list: {\n            pattern: RegExp('^[*#]+(?:' + modifierRegex + ')?\\\\s+.+', 'm'),\n            inside: {\n              modifier: {\n                pattern: RegExp('(^[*#]+)' + modifierRegex),\n                lookbehind: true,\n                inside: modifierTokens\n              },\n              punctuation: /^[*#]+/\n            }\n          },\n          // | cell | cell | cell |\n          table: {\n            // Modifiers can be applied to the row: {color:red}.|1|2|3|\n            // or the cell: |{color:red}.1|2|3|\n            pattern: RegExp('^(?:(?:' + modifierRegex + '|[<>=()^~])+\\\\.\\\\s*)?(?:\\\\|(?:(?:' + modifierRegex + '|[<>=()^~_]|[\\\\\\\\/]\\\\d+)+\\\\.)?[^|]*)+\\\\|', 'm'),\n            inside: {\n              modifier: {\n                // Modifiers for rows after the first one are\n                // preceded by a pipe and a line feed\n                pattern: RegExp('(^|\\\\|(?:\\\\r?\\\\n|\\\\r)?)(?:' + modifierRegex + '|[<>=()^~_]|[\\\\\\\\/]\\\\d+)+(?=\\\\.)'),\n                lookbehind: true,\n                inside: modifierTokens\n              },\n              punctuation: /\\||^\\./\n            }\n          },\n          inline: {\n            pattern: RegExp('(\\\\*\\\\*|__|\\\\?\\\\?|[*_%@+\\\\-^~])(?:' + modifierRegex + ')?.+?\\\\1'),\n            inside: {\n              // Note: superscripts and subscripts are not handled specifically\n              // *bold*, **bold**\n              bold: {\n                pattern: RegExp('(^(\\\\*\\\\*?)(?:' + modifierRegex + ')?).+?(?=\\\\2)'),\n                lookbehind: true\n              },\n              // _italic_, __italic__\n              italic: {\n                pattern: RegExp('(^(__?)(?:' + modifierRegex + ')?).+?(?=\\\\2)'),\n                lookbehind: true\n              },\n              // ??cite??\n              cite: {\n                pattern: RegExp('(^\\\\?\\\\?(?:' + modifierRegex + ')?).+?(?=\\\\?\\\\?)'),\n                lookbehind: true,\n                alias: 'string'\n              },\n              // @code@\n              code: {\n                pattern: RegExp('(^@(?:' + modifierRegex + ')?).+?(?=@)'),\n                lookbehind: true,\n                alias: 'keyword'\n              },\n              // +inserted+\n              inserted: {\n                pattern: RegExp('(^\\\\+(?:' + modifierRegex + ')?).+?(?=\\\\+)'),\n                lookbehind: true\n              },\n              // -deleted-\n              deleted: {\n                pattern: RegExp('(^-(?:' + modifierRegex + ')?).+?(?=-)'),\n                lookbehind: true\n              },\n              // %span%\n              span: {\n                pattern: RegExp('(^%(?:' + modifierRegex + ')?).+?(?=%)'),\n                lookbehind: true\n              },\n              modifier: {\n                pattern: RegExp('(^\\\\*\\\\*|__|\\\\?\\\\?|[*_%@+\\\\-^~])' + modifierRegex),\n                lookbehind: true,\n                inside: modifierTokens\n              },\n              punctuation: /[*_%?@+\\-^~]+/\n            }\n          },\n          // [alias]http://example.com\n          'link-ref': {\n            pattern: /^\\[[^\\]]+\\]\\S+$/m,\n            inside: {\n              string: {\n                pattern: /(\\[)[^\\]]+(?=\\])/,\n                lookbehind: true\n              },\n              url: {\n                pattern: /(\\])\\S+$/,\n                lookbehind: true\n              },\n              punctuation: /[\\[\\]]/\n            }\n          },\n          // \"text\":http://example.com\n          // \"text\":link-ref\n          link: {\n            pattern: RegExp('\"(?:' + modifierRegex + ')?[^\"]+\":.+?(?=[^\\\\w/]?(?:\\\\s|$))'),\n            inside: {\n              text: {\n                pattern: RegExp('(^\"(?:' + modifierRegex + ')?)[^\"]+(?=\")'),\n                lookbehind: true\n              },\n              modifier: {\n                pattern: RegExp('(^\")' + modifierRegex),\n                lookbehind: true,\n                inside: modifierTokens\n              },\n              url: {\n                pattern: /(:).+/,\n                lookbehind: true\n              },\n              punctuation: /[\":]/\n            }\n          },\n          // !image.jpg!\n          // !image.jpg(Title)!:http://example.com\n          image: {\n            pattern: RegExp('!(?:' + modifierRegex + '|[<>=()])*[^!\\\\s()]+(?:\\\\([^)]+\\\\))?!(?::.+?(?=[^\\\\w/]?(?:\\\\s|$)))?'),\n            inside: {\n              source: {\n                pattern: RegExp('(^!(?:' + modifierRegex + '|[<>=()])*)[^!\\\\s()]+(?:\\\\([^)]+\\\\))?(?=!)'),\n                lookbehind: true,\n                alias: 'url'\n              },\n              modifier: {\n                pattern: RegExp('(^!)(?:' + modifierRegex + '|[<>=()])+'),\n                lookbehind: true,\n                inside: modifierTokens\n              },\n              url: {\n                pattern: /(:).+/,\n                lookbehind: true\n              },\n              punctuation: /[!:]/\n            }\n          },\n          // Footnote[1]\n          footnote: {\n            pattern: /\\b\\[\\d+\\]/,\n            alias: 'comment',\n            inside: {\n              punctuation: /\\[|\\]/\n            }\n          },\n          // CSS(Cascading Style Sheet)\n          acronym: {\n            pattern: /\\b[A-Z\\d]+\\([^)]+\\)/,\n            inside: {\n              comment: {\n                pattern: /(\\()[^)]+(?=\\))/,\n                lookbehind: true\n              },\n              punctuation: /[()]/\n            }\n          },\n          // Prism(C)\n          mark: {\n            pattern: /\\b\\((?:TM|R|C)\\)/,\n            alias: 'comment',\n            inside: {\n              punctuation: /[()]/\n            }\n          }\n        }\n      }\n    });\n    var nestedPatterns = {\n      inline: Prism.languages.textile['phrase'].inside['inline'],\n      link: Prism.languages.textile['phrase'].inside['link'],\n      image: Prism.languages.textile['phrase'].inside['image'],\n      footnote: Prism.languages.textile['phrase'].inside['footnote'],\n      acronym: Prism.languages.textile['phrase'].inside['acronym'],\n      mark: Prism.languages.textile['phrase'].inside['mark'] // Only allow alpha-numeric HTML tags, not XML tags\n\n    };\n    Prism.languages.textile.tag.pattern = /<\\/?(?!\\d)[a-z0-9]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i; // Allow some nesting\n\n    Prism.languages.textile['phrase'].inside['inline'].inside['bold'].inside = nestedPatterns;\n    Prism.languages.textile['phrase'].inside['inline'].inside['italic'].inside = nestedPatterns;\n    Prism.languages.textile['phrase'].inside['inline'].inside['inserted'].inside = nestedPatterns;\n    Prism.languages.textile['phrase'].inside['inline'].inside['deleted'].inside = nestedPatterns;\n    Prism.languages.textile['phrase'].inside['inline'].inside['span'].inside = nestedPatterns; // Allow some styles inside table cells\n\n    Prism.languages.textile['phrase'].inside['table'].inside['inline'] = nestedPatterns['inline'];\n    Prism.languages.textile['phrase'].inside['table'].inside['link'] = nestedPatterns['link'];\n    Prism.languages.textile['phrase'].inside['table'].inside['image'] = nestedPatterns['image'];\n    Prism.languages.textile['phrase'].inside['table'].inside['footnote'] = nestedPatterns['footnote'];\n    Prism.languages.textile['phrase'].inside['table'].inside['acronym'] = nestedPatterns['acronym'];\n    Prism.languages.textile['phrase'].inside['table'].inside['mark'] = nestedPatterns['mark'];\n  })(Prism);\n}","'use strict';\n\nvar refractorJsx = require('./jsx.js');\n\nvar refractorTypescript = require('./typescript.js');\n\nmodule.exports = tsx;\ntsx.displayName = 'tsx';\ntsx.aliases = [];\n\nfunction tsx(Prism) {\n  Prism.register(refractorJsx);\n  Prism.register(refractorTypescript);\n  var typescript = Prism.util.clone(Prism.languages.typescript);\n  Prism.languages.tsx = Prism.languages.extend('jsx', typescript);\n}","'use strict';\n\nmodule.exports = tt2;\ntt2.displayName = 'tt2';\ntt2.aliases = [];\n\nfunction tt2(Prism) {\n  ;\n\n  (function (Prism) {\n    Prism.languages.tt2 = Prism.languages.extend('clike', {\n      comment: {\n        pattern: /#.*|\\[%#[\\s\\S]*?%\\]/,\n        lookbehind: true\n      },\n      keyword: /\\b(?:BLOCK|CALL|CASE|CATCH|CLEAR|DEBUG|DEFAULT|ELSE|ELSIF|END|FILTER|FINAL|FOREACH|GET|IF|IN|INCLUDE|INSERT|LAST|MACRO|META|NEXT|PERL|PROCESS|RAWPERL|RETURN|SET|STOP|TAGS|THROW|TRY|SWITCH|UNLESS|USE|WHILE|WRAPPER)\\b/,\n      punctuation: /[[\\]{},()]/\n    });\n    delete Prism.languages.tt2['operator'];\n    delete Prism.languages.tt2['variable'];\n    Prism.languages.insertBefore('tt2', 'number', {\n      operator: /=[>=]?|!=?|<=?|>=?|&&|\\|\\|?|\\b(?:and|or|not)\\b/,\n      variable: {\n        pattern: /[a-z]\\w*(?:\\s*\\.\\s*(?:\\d+|\\$?[a-z]\\w*))*/i\n      }\n    });\n    delete Prism.languages.tt2['delimiter'];\n    Prism.languages.insertBefore('tt2', 'keyword', {\n      delimiter: {\n        pattern: /^(?:\\[%|%%)-?|-?%]$/,\n        alias: 'punctuation'\n      }\n    });\n    Prism.languages.insertBefore('tt2', 'string', {\n      'single-quoted-string': {\n        pattern: /'[^\\\\']*(?:\\\\[\\s\\S][^\\\\']*)*'/,\n        greedy: true,\n        alias: 'string'\n      },\n      'double-quoted-string': {\n        pattern: /\"[^\\\\\"]*(?:\\\\[\\s\\S][^\\\\\"]*)*\"/,\n        greedy: true,\n        alias: 'string',\n        inside: {\n          variable: {\n            pattern: /\\$(?:[a-z]\\w*(?:\\.(?:\\d+|\\$?[a-z]\\w*))*)/i\n          }\n        }\n      }\n    }); // The different types of TT2 strings \"replace\" the C-like standard string\n\n    delete Prism.languages.tt2.string;\n    Prism.hooks.add('before-tokenize', function (env) {\n      var tt2Pattern = /\\[%[\\s\\S]+?%\\]/g;\n      Prism.languages['markup-templating'].buildPlaceholders(env, 'tt2', tt2Pattern);\n    });\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'tt2');\n    });\n  })(Prism);\n}","'use strict';\n\nmodule.exports = twig;\ntwig.displayName = 'twig';\ntwig.aliases = [];\n\nfunction twig(Prism) {\n  Prism.languages.twig = {\n    comment: /\\{#[\\s\\S]*?#\\}/,\n    tag: {\n      pattern: /\\{\\{[\\s\\S]*?\\}\\}|\\{%[\\s\\S]*?%\\}/,\n      inside: {\n        ld: {\n          pattern: /^(?:\\{\\{-?|\\{%-?\\s*\\w+)/,\n          inside: {\n            punctuation: /^(?:\\{\\{|\\{%)-?/,\n            keyword: /\\w+/\n          }\n        },\n        rd: {\n          pattern: /-?(?:%\\}|\\}\\})$/,\n          inside: {\n            punctuation: /.*/\n          }\n        },\n        string: {\n          pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n          inside: {\n            punctuation: /^['\"]|['\"]$/\n          }\n        },\n        keyword: /\\b(?:even|if|odd)\\b/,\n        boolean: /\\b(?:true|false|null)\\b/,\n        number: /\\b0x[\\dA-Fa-f]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee][-+]?\\d+)?/,\n        operator: [{\n          pattern: /(\\s)(?:and|b-and|b-xor|b-or|ends with|in|is|matches|not|or|same as|starts with)(?=\\s)/,\n          lookbehind: true\n        }, /[=<>]=?|!=|\\*\\*?|\\/\\/?|\\?:?|[-+~%|]/],\n        property: /\\b[a-zA-Z_]\\w*\\b/,\n        punctuation: /[()\\[\\]{}:.,]/\n      }\n    },\n    // The rest can be parsed as HTML\n    other: {\n      // We want non-blank matches\n      pattern: /\\S(?:[\\s\\S]*\\S)?/,\n      inside: Prism.languages.markup\n    }\n  };\n}","'use strict';\n\nvar refractorBasic = require('./basic.js');\n\nmodule.exports = vbnet;\nvbnet.displayName = 'vbnet';\nvbnet.aliases = [];\n\nfunction vbnet(Prism) {\n  Prism.register(refractorBasic);\n  Prism.languages.vbnet = Prism.languages.extend('basic', {\n    keyword: /(?:\\b(?:ADDHANDLER|ADDRESSOF|ALIAS|AND|ANDALSO|AS|BEEP|BLOAD|BOOLEAN|BSAVE|BYREF|BYTE|BYVAL|CALL(?: ABSOLUTE)?|CASE|CATCH|CBOOL|CBYTE|CCHAR|CDATE|CDEC|CDBL|CHAIN|CHAR|CHDIR|CINT|CLASS|CLEAR|CLNG|CLOSE|CLS|COBJ|COM|COMMON|CONST|CONTINUE|CSBYTE|CSHORT|CSNG|CSTR|CTYPE|CUINT|CULNG|CUSHORT|DATA|DATE|DECIMAL|DECLARE|DEFAULT|DEF(?: FN| SEG|DBL|INT|LNG|SNG|STR)|DELEGATE|DIM|DIRECTCAST|DO|DOUBLE|ELSE|ELSEIF|END|ENUM|ENVIRON|ERASE|ERROR|EVENT|EXIT|FALSE|FIELD|FILES|FINALLY|FOR(?: EACH)?|FRIEND|FUNCTION|GET|GETTYPE|GETXMLNAMESPACE|GLOBAL|GOSUB|GOTO|HANDLES|IF|IMPLEMENTS|IMPORTS|IN|INHERITS|INPUT|INTEGER|INTERFACE|IOCTL|IS|ISNOT|KEY|KILL|LINE INPUT|LET|LIB|LIKE|LOCATE|LOCK|LONG|LOOP|LSET|ME|MKDIR|MOD|MODULE|MUSTINHERIT|MUSTOVERRIDE|MYBASE|MYCLASS|NAME|NAMESPACE|NARROWING|NEW|NEXT|NOT|NOTHING|NOTINHERITABLE|NOTOVERRIDABLE|OBJECT|OF|OFF|ON(?: COM| ERROR| KEY| TIMER)?|OPERATOR|OPEN|OPTION(?: BASE)?|OPTIONAL|OR|ORELSE|OUT|OVERLOADS|OVERRIDABLE|OVERRIDES|PARAMARRAY|PARTIAL|POKE|PRIVATE|PROPERTY|PROTECTED|PUBLIC|PUT|RAISEEVENT|READ|READONLY|REDIM|REM|REMOVEHANDLER|RESTORE|RESUME|RETURN|RMDIR|RSET|RUN|SBYTE|SELECT(?: CASE)?|SET|SHADOWS|SHARED|SHORT|SINGLE|SHELL|SLEEP|STATIC|STEP|STOP|STRING|STRUCTURE|SUB|SYNCLOCK|SWAP|SYSTEM|THEN|THROW|TIMER|TO|TROFF|TRON|TRUE|TRY|TRYCAST|TYPE|TYPEOF|UINTEGER|ULONG|UNLOCK|UNTIL|USHORT|USING|VIEW PRINT|WAIT|WEND|WHEN|WHILE|WIDENING|WITH|WITHEVENTS|WRITE|WRITEONLY|XOR)|\\B(?:#CONST|#ELSE|#ELSEIF|#END|#IF))(?:\\$|\\b)/i,\n    comment: [{\n      pattern: /(?:!|REM\\b).+/i,\n      inside: {\n        keyword: /^REM/i\n      }\n    }, {\n      pattern: /(^|[^\\\\:])'.*/,\n      lookbehind: true\n    }]\n  });\n}","'use strict';\n\nmodule.exports = velocity;\nvelocity.displayName = 'velocity';\nvelocity.aliases = [];\n\nfunction velocity(Prism) {\n  ;\n\n  (function (Prism) {\n    Prism.languages.velocity = Prism.languages.extend('markup', {});\n    var velocity = {\n      variable: {\n        pattern: /(^|[^\\\\](?:\\\\\\\\)*)\\$!?(?:[a-z][\\w-]*(?:\\([^)]*\\))?(?:\\.[a-z][\\w-]*(?:\\([^)]*\\))?|\\[[^\\]]+])*|{[^}]+})/i,\n        lookbehind: true,\n        inside: {} // See below\n\n      },\n      string: {\n        pattern: /\"[^\"]*\"|'[^']*'/,\n        greedy: true\n      },\n      number: /\\b\\d+\\b/,\n      boolean: /\\b(?:true|false)\\b/,\n      operator: /[=!<>]=?|[+*/%-]|&&|\\|\\||\\.\\.|\\b(?:eq|g[et]|l[et]|n(?:e|ot))\\b/,\n      punctuation: /[(){}[\\]:,.]/\n    };\n    velocity.variable.inside = {\n      string: velocity['string'],\n      function: {\n        pattern: /([^\\w-])[a-z][\\w-]*(?=\\()/,\n        lookbehind: true\n      },\n      number: velocity['number'],\n      boolean: velocity['boolean'],\n      punctuation: velocity['punctuation']\n    };\n    Prism.languages.insertBefore('velocity', 'comment', {\n      unparsed: {\n        pattern: /(^|[^\\\\])#\\[\\[[\\s\\S]*?]]#/,\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          punctuation: /^#\\[\\[|]]#$/\n        }\n      },\n      'velocity-comment': [{\n        pattern: /(^|[^\\\\])#\\*[\\s\\S]*?\\*#/,\n        lookbehind: true,\n        greedy: true,\n        alias: 'comment'\n      }, {\n        pattern: /(^|[^\\\\])##.*/,\n        lookbehind: true,\n        greedy: true,\n        alias: 'comment'\n      }],\n      directive: {\n        pattern: /(^|[^\\\\](?:\\\\\\\\)*)#@?(?:[a-z][\\w-]*|{[a-z][\\w-]*})(?:\\s*\\((?:[^()]|\\([^()]*\\))*\\))?/i,\n        lookbehind: true,\n        inside: {\n          keyword: {\n            pattern: /^#@?(?:[a-z][\\w-]*|{[a-z][\\w-]*})|\\bin\\b/,\n            inside: {\n              punctuation: /[{}]/\n            }\n          },\n          rest: velocity\n        }\n      },\n      variable: velocity['variable']\n    });\n    Prism.languages.velocity['tag'].inside['attr-value'].inside.rest = Prism.languages.velocity;\n  })(Prism);\n}","'use strict';\n\nmodule.exports = verilog;\nverilog.displayName = 'verilog';\nverilog.aliases = [];\n\nfunction verilog(Prism) {\n  Prism.languages.verilog = {\n    comment: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n    string: {\n      pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n      greedy: true\n    },\n    // support for any kernel function (ex: $display())\n    property: /\\B\\$\\w+\\b/,\n    // support for user defined constants (ex: `define)\n    constant: /\\B`\\w+\\b/,\n    function: /\\w+(?=\\()/,\n    // support for verilog and system verilog keywords\n    keyword: /\\b(?:alias|and|assert|assign|assume|automatic|before|begin|bind|bins|binsof|bit|break|buf|bufif0|bufif1|byte|class|case|casex|casez|cell|chandle|clocking|cmos|config|const|constraint|context|continue|cover|covergroup|coverpoint|cross|deassign|default|defparam|design|disable|dist|do|edge|else|end|endcase|endclass|endclocking|endconfig|endfunction|endgenerate|endgroup|endinterface|endmodule|endpackage|endprimitive|endprogram|endproperty|endspecify|endsequence|endtable|endtask|enum|event|expect|export|extends|extern|final|first_match|for|force|foreach|forever|fork|forkjoin|function|generate|genvar|highz0|highz1|if|iff|ifnone|ignore_bins|illegal_bins|import|incdir|include|initial|inout|input|inside|instance|int|integer|interface|intersect|join|join_any|join_none|large|liblist|library|local|localparam|logic|longint|macromodule|matches|medium|modport|module|nand|negedge|new|nmos|nor|noshowcancelled|not|notif0|notif1|null|or|output|package|packed|parameter|pmos|posedge|primitive|priority|program|property|protected|pull0|pull1|pulldown|pullup|pulsestyle_onevent|pulsestyle_ondetect|pure|rand|randc|randcase|randsequence|rcmos|real|realtime|ref|reg|release|repeat|return|rnmos|rpmos|rtran|rtranif0|rtranif1|scalared|sequence|shortint|shortreal|showcancelled|signed|small|solve|specify|specparam|static|string|strong0|strong1|struct|super|supply0|supply1|table|tagged|task|this|throughout|time|timeprecision|timeunit|tran|tranif0|tranif1|tri|tri0|tri1|triand|trior|trireg|type|typedef|union|unique|unsigned|use|uwire|var|vectored|virtual|void|wait|wait_order|wand|weak0|weak1|while|wildcard|wire|with|within|wor|xnor|xor)\\b/,\n    // bold highlighting for all verilog and system verilog logic blocks\n    important: /\\b(?:always_latch|always_comb|always_ff|always)\\b ?@?/,\n    // support for time ticks, vectors, and real numbers\n    number: /\\B##?\\d+|(?:\\b\\d+)?'[odbh] ?[\\da-fzx_?]+|\\b\\d*[._]?\\d+(?:e[-+]?\\d+)?/i,\n    operator: /[-+{}^~%*\\/?=!<>&|]+/,\n    punctuation: /[[\\];(),.:]/\n  };\n}","'use strict';\n\nmodule.exports = vhdl;\nvhdl.displayName = 'vhdl';\nvhdl.aliases = [];\n\nfunction vhdl(Prism) {\n  Prism.languages.vhdl = {\n    comment: /--.+/,\n    // support for all logic vectors\n    'vhdl-vectors': {\n      pattern: /\\b[oxb]\"[\\da-f_]+\"|\"[01uxzwlh-]+\"/i,\n      alias: 'number'\n    },\n    // support for operator overloading included\n    'quoted-function': {\n      pattern: /\"\\S+?\"(?=\\()/,\n      alias: 'function'\n    },\n    string: /\"(?:[^\\\\\"\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\"/,\n    constant: /\\b(?:use|library)\\b/i,\n    // support for predefined attributes included\n    keyword: /\\b(?:'active|'ascending|'base|'delayed|'driving|'driving_value|'event|'high|'image|'instance_name|'last_active|'last_event|'last_value|'left|'leftof|'length|'low|'path_name|'pos|'pred|'quiet|'range|'reverse_range|'right|'rightof|'simple_name|'stable|'succ|'transaction|'val|'value|access|after|alias|all|architecture|array|assert|attribute|begin|block|body|buffer|bus|case|component|configuration|constant|disconnect|downto|else|elsif|end|entity|exit|file|for|function|generate|generic|group|guarded|if|impure|in|inertial|inout|is|label|library|linkage|literal|loop|map|new|next|null|of|on|open|others|out|package|port|postponed|procedure|process|pure|range|record|register|reject|report|return|select|severity|shared|signal|subtype|then|to|transport|type|unaffected|units|until|use|variable|wait|when|while|with)\\b/i,\n    boolean: /\\b(?:true|false)\\b/i,\n    function: /\\w+(?=\\()/,\n    // decimal, based, physical, and exponential numbers supported\n    number: /'[01uxzwlh-]'|\\b(?:\\d+#[\\da-f_.]+#|\\d[\\d_.]*)(?:e[-+]?\\d+)?/i,\n    operator: /[<>]=?|:=|[-+*/&=]|\\b(?:abs|not|mod|rem|sll|srl|sla|sra|rol|ror|and|or|nand|xnor|xor|nor)\\b/i,\n    punctuation: /[{}[\\];(),.:]/\n  };\n}","'use strict';\n\nmodule.exports = vim;\nvim.displayName = 'vim';\nvim.aliases = [];\n\nfunction vim(Prism) {\n  Prism.languages.vim = {\n    string: /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\r\\n]|'')*'/,\n    comment: /\".*/,\n    function: /\\w+(?=\\()/,\n    keyword: /\\b(?:ab|abbreviate|abc|abclear|abo|aboveleft|al|all|arga|argadd|argd|argdelete|argdo|arge|argedit|argg|argglobal|argl|arglocal|ar|args|argu|argument|as|ascii|bad|badd|ba|ball|bd|bdelete|be|bel|belowright|bf|bfirst|bl|blast|bm|bmodified|bn|bnext|bN|bNext|bo|botright|bp|bprevious|brea|break|breaka|breakadd|breakd|breakdel|breakl|breaklist|br|brewind|bro|browse|bufdo|b|buffer|buffers|bun|bunload|bw|bwipeout|ca|cabbrev|cabc|cabclear|caddb|caddbuffer|cad|caddexpr|caddf|caddfile|cal|call|cat|catch|cb|cbuffer|cc|ccl|cclose|cd|ce|center|cex|cexpr|cf|cfile|cfir|cfirst|cgetb|cgetbuffer|cgete|cgetexpr|cg|cgetfile|c|change|changes|chd|chdir|che|checkpath|checkt|checktime|cla|clast|cl|clist|clo|close|cmapc|cmapclear|cnew|cnewer|cn|cnext|cN|cNext|cnf|cnfile|cNfcNfile|cnorea|cnoreabbrev|col|colder|colo|colorscheme|comc|comclear|comp|compiler|conf|confirm|con|continue|cope|copen|co|copy|cpf|cpfile|cp|cprevious|cq|cquit|cr|crewind|cuna|cunabbrev|cu|cunmap|cw|cwindow|debugg|debuggreedy|delc|delcommand|d|delete|delf|delfunction|delm|delmarks|diffg|diffget|diffoff|diffpatch|diffpu|diffput|diffsplit|diffthis|diffu|diffupdate|dig|digraphs|di|display|dj|djump|dl|dlist|dr|drop|ds|dsearch|dsp|dsplit|earlier|echoe|echoerr|echom|echomsg|echon|e|edit|el|else|elsei|elseif|em|emenu|endfo|endfor|endf|endfunction|endfun|en|endif|endt|endtry|endw|endwhile|ene|enew|ex|exi|exit|exu|exusage|f|file|files|filetype|fina|finally|fin|find|fini|finish|fir|first|fix|fixdel|fo|fold|foldc|foldclose|folddoc|folddoclosed|foldd|folddoopen|foldo|foldopen|for|fu|fun|function|go|goto|gr|grep|grepa|grepadd|ha|hardcopy|h|help|helpf|helpfind|helpg|helpgrep|helpt|helptags|hid|hide|his|history|ia|iabbrev|iabc|iabclear|if|ij|ijump|il|ilist|imapc|imapclear|in|inorea|inoreabbrev|isearch|isp|isplit|iuna|iunabbrev|iu|iunmap|j|join|ju|jumps|k|keepalt|keepj|keepjumps|kee|keepmarks|laddb|laddbuffer|lad|laddexpr|laddf|laddfile|lan|language|la|last|later|lb|lbuffer|lc|lcd|lch|lchdir|lcl|lclose|let|left|lefta|leftabove|lex|lexpr|lf|lfile|lfir|lfirst|lgetb|lgetbuffer|lgete|lgetexpr|lg|lgetfile|lgr|lgrep|lgrepa|lgrepadd|lh|lhelpgrep|l|list|ll|lla|llast|lli|llist|lmak|lmake|lm|lmap|lmapc|lmapclear|lnew|lnewer|lne|lnext|lN|lNext|lnf|lnfile|lNf|lNfile|ln|lnoremap|lo|loadview|loc|lockmarks|lockv|lockvar|lol|lolder|lop|lopen|lpf|lpfile|lp|lprevious|lr|lrewind|ls|lt|ltag|lu|lunmap|lv|lvimgrep|lvimgrepa|lvimgrepadd|lw|lwindow|mak|make|ma|mark|marks|mat|match|menut|menutranslate|mk|mkexrc|mks|mksession|mksp|mkspell|mkvie|mkview|mkv|mkvimrc|mod|mode|m|move|mzf|mzfile|mz|mzscheme|nbkey|new|n|next|N|Next|nmapc|nmapclear|noh|nohlsearch|norea|noreabbrev|nu|number|nun|nunmap|omapc|omapclear|on|only|o|open|opt|options|ou|ounmap|pc|pclose|ped|pedit|pe|perl|perld|perldo|po|pop|popu|popup|pp|ppop|pre|preserve|prev|previous|p|print|P|Print|profd|profdel|prof|profile|promptf|promptfind|promptr|promptrepl|ps|psearch|pta|ptag|ptf|ptfirst|ptj|ptjump|ptl|ptlast|ptn|ptnext|ptN|ptNext|ptp|ptprevious|ptr|ptrewind|pts|ptselect|pu|put|pw|pwd|pyf|pyfile|py|python|qa|qall|q|quit|quita|quitall|r|read|rec|recover|redi|redir|red|redo|redr|redraw|redraws|redrawstatus|reg|registers|res|resize|ret|retab|retu|return|rew|rewind|ri|right|rightb|rightbelow|rub|ruby|rubyd|rubydo|rubyf|rubyfile|ru|runtime|rv|rviminfo|sal|sall|san|sandbox|sa|sargument|sav|saveas|sba|sball|sbf|sbfirst|sbl|sblast|sbm|sbmodified|sbn|sbnext|sbN|sbNext|sbp|sbprevious|sbr|sbrewind|sb|sbuffer|scripte|scriptencoding|scrip|scriptnames|se|set|setf|setfiletype|setg|setglobal|setl|setlocal|sf|sfind|sfir|sfirst|sh|shell|sign|sil|silent|sim|simalt|sla|slast|sl|sleep|sm|smagic|sm|smap|smapc|smapclear|sme|smenu|sn|snext|sN|sNext|sni|sniff|sno|snomagic|snor|snoremap|snoreme|snoremenu|sor|sort|so|source|spelld|spelldump|spe|spellgood|spelli|spellinfo|spellr|spellrepall|spellu|spellundo|spellw|spellwrong|sp|split|spr|sprevious|sre|srewind|sta|stag|startg|startgreplace|star|startinsert|startr|startreplace|stj|stjump|st|stop|stopi|stopinsert|sts|stselect|sun|sunhide|sunm|sunmap|sus|suspend|sv|sview|syncbind|t|tab|tabc|tabclose|tabd|tabdo|tabe|tabedit|tabf|tabfind|tabfir|tabfirst|tabl|tablast|tabm|tabmove|tabnew|tabn|tabnext|tabN|tabNext|tabo|tabonly|tabp|tabprevious|tabr|tabrewind|tabs|ta|tag|tags|tc|tcl|tcld|tcldo|tclf|tclfile|te|tearoff|tf|tfirst|th|throw|tj|tjump|tl|tlast|tm|tm|tmenu|tn|tnext|tN|tNext|to|topleft|tp|tprevious|tr|trewind|try|ts|tselect|tu|tu|tunmenu|una|unabbreviate|u|undo|undoj|undojoin|undol|undolist|unh|unhide|unlet|unlo|unlockvar|unm|unmap|up|update|verb|verbose|ve|version|vert|vertical|vie|view|vim|vimgrep|vimgrepa|vimgrepadd|vi|visual|viu|viusage|vmapc|vmapclear|vne|vnew|vs|vsplit|vu|vunmap|wa|wall|wh|while|winc|wincmd|windo|winp|winpos|win|winsize|wn|wnext|wN|wNext|wp|wprevious|wq|wqa|wqall|w|write|ws|wsverb|wv|wviminfo|X|xa|xall|x|xit|xm|xmap|xmapc|xmapclear|xme|xmenu|XMLent|XMLns|xn|xnoremap|xnoreme|xnoremenu|xu|xunmap|y|yank)\\b/,\n    builtin: /\\b(?:autocmd|acd|ai|akm|aleph|allowrevins|altkeymap|ambiwidth|ambw|anti|antialias|arab|arabic|arabicshape|ari|arshape|autochdir|autoindent|autoread|autowrite|autowriteall|aw|awa|background|backspace|backup|backupcopy|backupdir|backupext|backupskip|balloondelay|ballooneval|balloonexpr|bdir|bdlay|beval|bex|bexpr|bg|bh|bin|binary|biosk|bioskey|bk|bkc|bomb|breakat|brk|browsedir|bs|bsdir|bsk|bt|bufhidden|buflisted|buftype|casemap|ccv|cdpath|cedit|cfu|ch|charconvert|ci|cin|cindent|cink|cinkeys|cino|cinoptions|cinw|cinwords|clipboard|cmdheight|cmdwinheight|cmp|cms|columns|com|comments|commentstring|compatible|complete|completefunc|completeopt|consk|conskey|copyindent|cot|cpo|cpoptions|cpt|cscopepathcomp|cscopeprg|cscopequickfix|cscopetag|cscopetagorder|cscopeverbose|cspc|csprg|csqf|cst|csto|csverb|cuc|cul|cursorcolumn|cursorline|cwh|debug|deco|def|define|delcombine|dex|dg|dict|dictionary|diff|diffexpr|diffopt|digraph|dip|dir|directory|dy|ea|ead|eadirection|eb|ed|edcompatible|ef|efm|ei|ek|enc|encoding|endofline|eol|ep|equalalways|equalprg|errorbells|errorfile|errorformat|esckeys|et|eventignore|expandtab|exrc|fcl|fcs|fdc|fde|fdi|fdl|fdls|fdm|fdn|fdo|fdt|fen|fenc|fencs|fex|ff|ffs|fileencoding|fileencodings|fileformat|fileformats|fillchars|fk|fkmap|flp|fml|fmr|foldcolumn|foldenable|foldexpr|foldignore|foldlevel|foldlevelstart|foldmarker|foldmethod|foldminlines|foldnestmax|foldtext|formatexpr|formatlistpat|formatoptions|formatprg|fp|fs|fsync|ft|gcr|gd|gdefault|gfm|gfn|gfs|gfw|ghr|gp|grepformat|grepprg|gtl|gtt|guicursor|guifont|guifontset|guifontwide|guiheadroom|guioptions|guipty|guitablabel|guitabtooltip|helpfile|helpheight|helplang|hf|hh|hi|hidden|highlight|hk|hkmap|hkmapp|hkp|hl|hlg|hls|hlsearch|ic|icon|iconstring|ignorecase|im|imactivatekey|imak|imc|imcmdline|imd|imdisable|imi|iminsert|ims|imsearch|inc|include|includeexpr|incsearch|inde|indentexpr|indentkeys|indk|inex|inf|infercase|insertmode|isf|isfname|isi|isident|isk|iskeyword|isprint|joinspaces|js|key|keymap|keymodel|keywordprg|km|kmp|kp|langmap|langmenu|laststatus|lazyredraw|lbr|lcs|linebreak|lines|linespace|lisp|lispwords|listchars|loadplugins|lpl|lsp|lz|macatsui|magic|makeef|makeprg|matchpairs|matchtime|maxcombine|maxfuncdepth|maxmapdepth|maxmem|maxmempattern|maxmemtot|mco|mef|menuitems|mfd|mh|mis|mkspellmem|ml|mls|mm|mmd|mmp|mmt|modeline|modelines|modifiable|modified|more|mouse|mousef|mousefocus|mousehide|mousem|mousemodel|mouses|mouseshape|mouset|mousetime|mp|mps|msm|mzq|mzquantum|nf|nrformats|numberwidth|nuw|odev|oft|ofu|omnifunc|opendevice|operatorfunc|opfunc|osfiletype|pa|para|paragraphs|paste|pastetoggle|patchexpr|patchmode|path|pdev|penc|pex|pexpr|pfn|ph|pheader|pi|pm|pmbcs|pmbfn|popt|preserveindent|previewheight|previewwindow|printdevice|printencoding|printexpr|printfont|printheader|printmbcharset|printmbfont|printoptions|prompt|pt|pumheight|pvh|pvw|qe|quoteescape|readonly|remap|report|restorescreen|revins|rightleft|rightleftcmd|rl|rlc|ro|rs|rtp|ruf|ruler|rulerformat|runtimepath|sbo|sc|scb|scr|scroll|scrollbind|scrolljump|scrolloff|scrollopt|scs|sect|sections|secure|sel|selection|selectmode|sessionoptions|sft|shcf|shellcmdflag|shellpipe|shellquote|shellredir|shellslash|shelltemp|shelltype|shellxquote|shiftround|shiftwidth|shm|shortmess|shortname|showbreak|showcmd|showfulltag|showmatch|showmode|showtabline|shq|si|sidescroll|sidescrolloff|siso|sj|slm|smartcase|smartindent|smarttab|smc|smd|softtabstop|sol|spc|spell|spellcapcheck|spellfile|spelllang|spellsuggest|spf|spl|splitbelow|splitright|sps|sr|srr|ss|ssl|ssop|stal|startofline|statusline|stl|stmp|su|sua|suffixes|suffixesadd|sw|swapfile|swapsync|swb|swf|switchbuf|sws|sxq|syn|synmaxcol|syntax|tabline|tabpagemax|tabstop|tagbsearch|taglength|tagrelative|tagstack|tal|tb|tbi|tbidi|tbis|tbs|tenc|term|termbidi|termencoding|terse|textauto|textmode|textwidth|tgst|thesaurus|tildeop|timeout|timeoutlen|title|titlelen|titleold|titlestring|toolbar|toolbariconsize|top|tpm|tsl|tsr|ttimeout|ttimeoutlen|ttm|tty|ttybuiltin|ttyfast|ttym|ttymouse|ttyscroll|ttytype|tw|tx|uc|ul|undolevels|updatecount|updatetime|ut|vb|vbs|vdir|verbosefile|vfile|viewdir|viewoptions|viminfo|virtualedit|visualbell|vop|wak|warn|wb|wc|wcm|wd|weirdinvert|wfh|wfw|whichwrap|wi|wig|wildchar|wildcharm|wildignore|wildmenu|wildmode|wildoptions|wim|winaltkeys|window|winfixheight|winfixwidth|winheight|winminheight|winminwidth|winwidth|wiv|wiw|wm|wmh|wmnu|wmw|wop|wrap|wrapmargin|wrapscan|writeany|writebackup|writedelay|ww|noacd|noai|noakm|noallowrevins|noaltkeymap|noanti|noantialias|noar|noarab|noarabic|noarabicshape|noari|noarshape|noautochdir|noautoindent|noautoread|noautowrite|noautowriteall|noaw|noawa|nobackup|noballooneval|nobeval|nobin|nobinary|nobiosk|nobioskey|nobk|nobl|nobomb|nobuflisted|nocf|noci|nocin|nocindent|nocompatible|noconfirm|noconsk|noconskey|nocopyindent|nocp|nocscopetag|nocscopeverbose|nocst|nocsverb|nocuc|nocul|nocursorcolumn|nocursorline|nodeco|nodelcombine|nodg|nodiff|nodigraph|nodisable|noea|noeb|noed|noedcompatible|noek|noendofline|noeol|noequalalways|noerrorbells|noesckeys|noet|noex|noexpandtab|noexrc|nofen|nofk|nofkmap|nofoldenable|nogd|nogdefault|noguipty|nohid|nohidden|nohk|nohkmap|nohkmapp|nohkp|nohls|noic|noicon|noignorecase|noim|noimc|noimcmdline|noimd|noincsearch|noinf|noinfercase|noinsertmode|nois|nojoinspaces|nojs|nolazyredraw|nolbr|nolinebreak|nolisp|nolist|noloadplugins|nolpl|nolz|noma|nomacatsui|nomagic|nomh|noml|nomod|nomodeline|nomodifiable|nomodified|nomore|nomousef|nomousefocus|nomousehide|nonu|nonumber|noodev|noopendevice|nopaste|nopi|nopreserveindent|nopreviewwindow|noprompt|nopvw|noreadonly|noremap|norestorescreen|norevins|nori|norightleft|norightleftcmd|norl|norlc|noro|nors|noru|noruler|nosb|nosc|noscb|noscrollbind|noscs|nosecure|nosft|noshellslash|noshelltemp|noshiftround|noshortname|noshowcmd|noshowfulltag|noshowmatch|noshowmode|nosi|nosm|nosmartcase|nosmartindent|nosmarttab|nosmd|nosn|nosol|nospell|nosplitbelow|nosplitright|nospr|nosr|nossl|nosta|nostartofline|nostmp|noswapfile|noswf|nota|notagbsearch|notagrelative|notagstack|notbi|notbidi|notbs|notermbidi|noterse|notextauto|notextmode|notf|notgst|notildeop|notimeout|notitle|noto|notop|notr|nottimeout|nottybuiltin|nottyfast|notx|novb|novisualbell|nowa|nowarn|nowb|noweirdinvert|nowfh|nowfw|nowildmenu|nowinfixheight|nowinfixwidth|nowiv|nowmnu|nowrap|nowrapscan|nowrite|nowriteany|nowritebackup|nows|invacd|invai|invakm|invallowrevins|invaltkeymap|invanti|invantialias|invar|invarab|invarabic|invarabicshape|invari|invarshape|invautochdir|invautoindent|invautoread|invautowrite|invautowriteall|invaw|invawa|invbackup|invballooneval|invbeval|invbin|invbinary|invbiosk|invbioskey|invbk|invbl|invbomb|invbuflisted|invcf|invci|invcin|invcindent|invcompatible|invconfirm|invconsk|invconskey|invcopyindent|invcp|invcscopetag|invcscopeverbose|invcst|invcsverb|invcuc|invcul|invcursorcolumn|invcursorline|invdeco|invdelcombine|invdg|invdiff|invdigraph|invdisable|invea|inveb|inved|invedcompatible|invek|invendofline|inveol|invequalalways|inverrorbells|invesckeys|invet|invex|invexpandtab|invexrc|invfen|invfk|invfkmap|invfoldenable|invgd|invgdefault|invguipty|invhid|invhidden|invhk|invhkmap|invhkmapp|invhkp|invhls|invhlsearch|invic|invicon|invignorecase|invim|invimc|invimcmdline|invimd|invincsearch|invinf|invinfercase|invinsertmode|invis|invjoinspaces|invjs|invlazyredraw|invlbr|invlinebreak|invlisp|invlist|invloadplugins|invlpl|invlz|invma|invmacatsui|invmagic|invmh|invml|invmod|invmodeline|invmodifiable|invmodified|invmore|invmousef|invmousefocus|invmousehide|invnu|invnumber|invodev|invopendevice|invpaste|invpi|invpreserveindent|invpreviewwindow|invprompt|invpvw|invreadonly|invremap|invrestorescreen|invrevins|invri|invrightleft|invrightleftcmd|invrl|invrlc|invro|invrs|invru|invruler|invsb|invsc|invscb|invscrollbind|invscs|invsecure|invsft|invshellslash|invshelltemp|invshiftround|invshortname|invshowcmd|invshowfulltag|invshowmatch|invshowmode|invsi|invsm|invsmartcase|invsmartindent|invsmarttab|invsmd|invsn|invsol|invspell|invsplitbelow|invsplitright|invspr|invsr|invssl|invsta|invstartofline|invstmp|invswapfile|invswf|invta|invtagbsearch|invtagrelative|invtagstack|invtbi|invtbidi|invtbs|invtermbidi|invterse|invtextauto|invtextmode|invtf|invtgst|invtildeop|invtimeout|invtitle|invto|invtop|invtr|invttimeout|invttybuiltin|invttyfast|invtx|invvb|invvisualbell|invwa|invwarn|invwb|invweirdinvert|invwfh|invwfw|invwildmenu|invwinfixheight|invwinfixwidth|invwiv|invwmnu|invwrap|invwrapscan|invwrite|invwriteany|invwritebackup|invws|t_AB|t_AF|t_al|t_AL|t_bc|t_cd|t_ce|t_Ce|t_cl|t_cm|t_Co|t_cs|t_Cs|t_CS|t_CV|t_da|t_db|t_dl|t_DL|t_EI|t_F1|t_F2|t_F3|t_F4|t_F5|t_F6|t_F7|t_F8|t_F9|t_fs|t_IE|t_IS|t_k1|t_K1|t_k2|t_k3|t_K3|t_k4|t_K4|t_k5|t_K5|t_k6|t_K6|t_k7|t_K7|t_k8|t_K8|t_k9|t_K9|t_KA|t_kb|t_kB|t_KB|t_KC|t_kd|t_kD|t_KD|t_ke|t_KE|t_KF|t_KG|t_kh|t_KH|t_kI|t_KI|t_KJ|t_KK|t_kl|t_KL|t_kN|t_kP|t_kr|t_ks|t_ku|t_le|t_mb|t_md|t_me|t_mr|t_ms|t_nd|t_op|t_RI|t_RV|t_Sb|t_se|t_Sf|t_SI|t_so|t_sr|t_te|t_ti|t_ts|t_ue|t_us|t_ut|t_vb|t_ve|t_vi|t_vs|t_WP|t_WS|t_xs|t_ZH|t_ZR)\\b/,\n    number: /\\b(?:0x[\\da-f]+|\\d+(?:\\.\\d+)?)\\b/i,\n    operator: /\\|\\||&&|[-+.]=?|[=!](?:[=~][#?]?)?|[<>]=?[#?]?|[*\\/%?]|\\b(?:is(?:not)?)\\b/,\n    punctuation: /[{}[\\](),;:]/\n  };\n}","'use strict';\n\nmodule.exports = visualBasic;\nvisualBasic.displayName = 'visualBasic';\nvisualBasic.aliases = [];\n\nfunction visualBasic(Prism) {\n  Prism.languages['visual-basic'] = {\n    comment: {\n      pattern: /(?:['‘’]|REM\\b).*/i,\n      inside: {\n        keyword: /^REM/i\n      }\n    },\n    directive: {\n      pattern: /#(?:Const|Else|ElseIf|End|ExternalChecksum|ExternalSource|If|Region)(?:[^\\S\\r\\n]_[^\\S\\r\\n]*(?:\\r\\n?|\\n)|.)+/i,\n      alias: 'comment',\n      greedy: true\n    },\n    string: {\n      pattern: /[\"“”](?:[\"“”]{2}|[^\"“”])*[\"“”]C?/i,\n      greedy: true\n    },\n    date: {\n      pattern: /#[^\\S\\r\\n]*(?:\\d+([/-])\\d+\\1\\d+(?:[^\\S\\r\\n]+(?:\\d+[^\\S\\r\\n]*(?:AM|PM)|\\d+:\\d+(?::\\d+)?(?:[^\\S\\r\\n]*(?:AM|PM))?))?|(?:\\d+[^\\S\\r\\n]*(?:AM|PM)|\\d+:\\d+(?::\\d+)?(?:[^\\S\\r\\n]*(?:AM|PM))?))[^\\S\\r\\n]*#/i,\n      alias: 'builtin'\n    },\n    number: /(?:(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)(?:E[+-]?\\d+)?|&[HO][\\dA-F]+)(?:U?[ILS]|[FRD])?/i,\n    boolean: /\\b(?:True|False|Nothing)\\b/i,\n    keyword: /\\b(?:AddHandler|AddressOf|Alias|And(?:Also)?|As|Boolean|ByRef|Byte|ByVal|Call|Case|Catch|C(?:Bool|Byte|Char|Date|Dbl|Dec|Int|Lng|Obj|SByte|Short|Sng|Str|Type|UInt|ULng|UShort)|Char|Class|Const|Continue|Date|Decimal|Declare|Default|Delegate|Dim|DirectCast|Do|Double|Each|Else(?:If)?|End(?:If)?|Enum|Erase|Error|Event|Exit|Finally|For|Friend|Function|Get(?:Type|XMLNamespace)?|Global|GoSub|GoTo|Handles|If|Implements|Imports|In|Inherits|Integer|Interface|Is|IsNot|Let|Lib|Like|Long|Loop|Me|Mod|Module|Must(?:Inherit|Override)|My(?:Base|Class)|Namespace|Narrowing|New|Next|Not(?:Inheritable|Overridable)?|Object|Of|On|Operator|Option(?:al)?|Or(?:Else)?|Out|Overloads|Overridable|Overrides|ParamArray|Partial|Private|Property|Protected|Public|RaiseEvent|ReadOnly|ReDim|RemoveHandler|Resume|Return|SByte|Select|Set|Shadows|Shared|short|Single|Static|Step|Stop|String|Structure|Sub|SyncLock|Then|Throw|To|Try|TryCast|TypeOf|U(?:Integer|Long|Short)|Using|Variant|Wend|When|While|Widening|With(?:Events)?|WriteOnly|Xor)\\b/i,\n    operator: [/[+\\-*/\\\\^<=>&#@$%!]/, {\n      pattern: /([^\\S\\r\\n])_(?=[^\\S\\r\\n]*[\\r\\n])/,\n      lookbehind: true\n    }],\n    punctuation: /[{}().,:?]/\n  };\n  Prism.languages.vb = Prism.languages['visual-basic'];\n}","'use strict';\n\nmodule.exports = wasm;\nwasm.displayName = 'wasm';\nwasm.aliases = [];\n\nfunction wasm(Prism) {\n  Prism.languages.wasm = {\n    comment: [/\\(;[\\s\\S]*?;\\)/, {\n      pattern: /;;.*/,\n      greedy: true\n    }],\n    string: {\n      pattern: /\"(?:\\\\[\\s\\S]|[^\"\\\\])*\"/,\n      greedy: true\n    },\n    keyword: [{\n      pattern: /\\b(?:align|offset)=/,\n      inside: {\n        operator: /=/\n      }\n    }, {\n      pattern: /\\b(?:(?:f32|f64|i32|i64)(?:\\.(?:abs|add|and|ceil|clz|const|convert_[su]\\/i(?:32|64)|copysign|ctz|demote\\/f64|div(?:_[su])?|eqz?|extend_[su]\\/i32|floor|ge(?:_[su])?|gt(?:_[su])?|le(?:_[su])?|load(?:(?:8|16|32)_[su])?|lt(?:_[su])?|max|min|mul|nearest|neg?|or|popcnt|promote\\/f32|reinterpret\\/[fi](?:32|64)|rem_[su]|rot[lr]|shl|shr_[su]|store(?:8|16|32)?|sqrt|sub|trunc(?:_[su]\\/f(?:32|64))?|wrap\\/i64|xor))?|memory\\.(?:grow|size))\\b/,\n      inside: {\n        punctuation: /\\./\n      }\n    }, /\\b(?:anyfunc|block|br(?:_if|_table)?|call(?:_indirect)?|data|drop|elem|else|end|export|func|get_(?:global|local)|global|if|import|local|loop|memory|module|mut|nop|offset|param|result|return|select|set_(?:global|local)|start|table|tee_local|then|type|unreachable)\\b/],\n    variable: /\\$[\\w!#$%&'*+\\-./:<=>?@\\\\^_`|~]+/i,\n    number: /[+-]?\\b(?:\\d(?:_?\\d)*(?:\\.\\d(?:_?\\d)*)?(?:[eE][+-]?\\d(?:_?\\d)*)?|0x[\\da-fA-F](?:_?[\\da-fA-F])*(?:\\.[\\da-fA-F](?:_?[\\da-fA-D])*)?(?:[pP][+-]?\\d(?:_?\\d)*)?)\\b|\\binf\\b|\\bnan(?::0x[\\da-fA-F](?:_?[\\da-fA-D])*)?\\b/,\n    punctuation: /[()]/\n  };\n}","'use strict';\n\nmodule.exports = wiki;\nwiki.displayName = 'wiki';\nwiki.aliases = [];\n\nfunction wiki(Prism) {\n  Prism.languages.wiki = Prism.languages.extend('markup', {\n    'block-comment': {\n      pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n      lookbehind: true,\n      alias: 'comment'\n    },\n    heading: {\n      pattern: /^(=+).+?\\1/m,\n      inside: {\n        punctuation: /^=+|=+$/,\n        important: /.+/\n      }\n    },\n    emphasis: {\n      // TODO Multi-line\n      pattern: /('{2,5}).+?\\1/,\n      inside: {\n        'bold italic': {\n          pattern: /(''''').+?(?=\\1)/,\n          lookbehind: true\n        },\n        bold: {\n          pattern: /(''')[^'](?:.*?[^'])?(?=\\1)/,\n          lookbehind: true\n        },\n        italic: {\n          pattern: /('')[^'](?:.*?[^'])?(?=\\1)/,\n          lookbehind: true\n        },\n        punctuation: /^''+|''+$/\n      }\n    },\n    hr: {\n      pattern: /^-{4,}/m,\n      alias: 'punctuation'\n    },\n    url: [/ISBN +(?:97[89][ -]?)?(?:\\d[ -]?){9}[\\dx]\\b|(?:RFC|PMID) +\\d+/i, /\\[\\[.+?\\]\\]|\\[.+?\\]/],\n    variable: [/__[A-Z]+__/, // FIXME Nested structures should be handled\n    // {{formatnum:{{#expr:{{{3}}}}}}}\n    /\\{{3}.+?\\}{3}/, /\\{\\{.+?\\}\\}/],\n    symbol: [/^#redirect/im, /~{3,5}/],\n    // Handle table attrs:\n    // {|\n    // ! style=\"text-align:left;\"| Item\n    // |}\n    'table-tag': {\n      pattern: /((?:^|[|!])[|!])[^|\\r\\n]+\\|(?!\\|)/m,\n      lookbehind: true,\n      inside: {\n        'table-bar': {\n          pattern: /\\|$/,\n          alias: 'punctuation'\n        },\n        rest: Prism.languages.markup['tag'].inside\n      }\n    },\n    punctuation: /^(?:\\{\\||\\|\\}|\\|-|[*#:;!|])|\\|\\||!!/m\n  });\n  Prism.languages.insertBefore('wiki', 'tag', {\n    // Prevent highlighting inside <nowiki>, <source> and <pre> tags\n    nowiki: {\n      pattern: /<(nowiki|pre|source)\\b[\\s\\S]*?>[\\s\\S]*?<\\/\\1>/i,\n      inside: {\n        tag: {\n          pattern: /<(?:nowiki|pre|source)\\b[\\s\\S]*?>|<\\/(?:nowiki|pre|source)>/i,\n          inside: Prism.languages.markup['tag'].inside\n        }\n      }\n    }\n  });\n}","'use strict';\n\nmodule.exports = xeora;\nxeora.displayName = 'xeora';\nxeora.aliases = ['xeoracube'];\n\nfunction xeora(Prism) {\n  ;\n\n  (function (Prism) {\n    Prism.languages.xeora = Prism.languages.extend('markup', {\n      constant: {\n        pattern: /\\$(?:DomainContents|PageRenderDuration)\\$/,\n        inside: {\n          punctuation: {\n            pattern: /\\$/\n          }\n        }\n      },\n      variable: {\n        pattern: /\\$@?(?:#+|[-+*~=^])?[\\w.]+\\$/,\n        inside: {\n          punctuation: {\n            pattern: /[$.]/\n          },\n          operator: {\n            pattern: /#+|[-+*~=^@]/\n          }\n        }\n      },\n      'function-inline': {\n        pattern: /\\$F:[-\\w.]+\\?[-\\w.]+(?:,(?:\\|?(?:[-#.^+*~]*(?:[\\w+][^$]*)|=(?:[\\S+][^$]*)|@[-#]*(?:\\w+.)[\\w+.]+)?)*)?\\$/,\n        inside: {\n          variable: {\n            pattern: /(?:[,|])@?(?:#+|[-+*~=^])?[\\w.]+/,\n            inside: {\n              punctuation: {\n                pattern: /[,.|]/\n              },\n              operator: {\n                pattern: /#+|[-+*~=^@]/\n              }\n            }\n          },\n          punctuation: {\n            pattern: /\\$\\w:|[$:?.,|]/\n          }\n        },\n        alias: 'function'\n      },\n      'function-block': {\n        pattern: /\\$XF:{[-\\w.]+\\?[-\\w.]+(?:,(?:\\|?(?:[-#.^+*~]*(?:[\\w+][^$]*)|=(?:[\\S+][^$]*)|@[-#]*(?:\\w+.)[\\w+.]+)?)*)?}:XF\\$/,\n        inside: {\n          punctuation: {\n            pattern: /[$:{}?.,|]/\n          }\n        },\n        alias: 'function'\n      },\n      'directive-inline': {\n        pattern: /\\$\\w(?:#\\d+\\+?)?(?:\\[[-\\w.]+])?:[-\\/\\w.]+\\$/,\n        inside: {\n          punctuation: {\n            pattern: /\\$(?:\\w:|C(?:\\[|#\\d))?|[:{[\\]]/,\n            inside: {\n              tag: {\n                pattern: /#\\d/\n              }\n            }\n          }\n        },\n        alias: 'function'\n      },\n      'directive-block-open': {\n        pattern: /\\$\\w+:{|\\$\\w(?:#\\d+\\+?)?(?:\\[[-\\w.]+])?:[-\\w.]+:{(![A-Z]+)?/,\n        inside: {\n          punctuation: {\n            pattern: /\\$(?:\\w:|C(?:\\[|#\\d))?|[:{[\\]]/,\n            inside: {\n              tag: {\n                pattern: /#\\d/\n              }\n            }\n          },\n          attribute: {\n            pattern: /![A-Z]+$/,\n            inside: {\n              punctuation: {\n                pattern: /!/\n              }\n            },\n            alias: 'keyword'\n          }\n        },\n        alias: 'function'\n      },\n      'directive-block-separator': {\n        pattern: /}:[-\\w.]+:{/,\n        inside: {\n          punctuation: {\n            pattern: /[:{}]/\n          }\n        },\n        alias: 'function'\n      },\n      'directive-block-close': {\n        pattern: /}:[-\\w.]+\\$/,\n        inside: {\n          punctuation: {\n            pattern: /[:{}$]/\n          }\n        },\n        alias: 'function'\n      }\n    });\n    Prism.languages.insertBefore('inside', 'punctuation', {\n      variable: Prism.languages.xeora['function-inline'].inside['variable']\n    }, Prism.languages.xeora['function-block']);\n    Prism.languages.xeoracube = Prism.languages.xeora;\n  })(Prism);\n}","'use strict';\n\nmodule.exports = xojo;\nxojo.displayName = 'xojo';\nxojo.aliases = [];\n\nfunction xojo(Prism) {\n  Prism.languages.xojo = {\n    comment: {\n      pattern: /(?:'|\\/\\/|Rem\\b).+/i,\n      inside: {\n        keyword: /^Rem/i\n      }\n    },\n    string: {\n      pattern: /\"(?:\"\"|[^\"])*\"/,\n      greedy: true\n    },\n    number: [/(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:E[+-]?\\d+)?/i, /&[bchou][a-z\\d]+/i],\n    symbol: /#(?:If|Else|ElseIf|Endif|Pragma)\\b/i,\n    keyword: /\\b(?:AddHandler|App|Array|As(?:signs)?|By(?:Ref|Val)|Break|Call|Case|Catch|Const|Continue|CurrentMethodName|Declare|Dim|Do(?:wnTo)?|Each|Else(?:If)?|End|Exit|Extends|False|Finally|For|Global|If|In|Lib|Loop|Me|Next|Nil|Optional|ParamArray|Raise(?:Event)?|ReDim|Rem|RemoveHandler|Return|Select|Self|Soft|Static|Step|Super|Then|To|True|Try|Ubound|Until|Using|Wend|While)\\b/i,\n    operator: /<[=>]?|>=?|[+\\-*\\/\\\\^=]|\\b(?:AddressOf|And|Ctype|IsA?|Mod|New|Not|Or|Xor|WeakAddressOf)\\b/i,\n    punctuation: /[.,;:()]/\n  };\n}","'use strict';\n\nmodule.exports = xquery;\nxquery.displayName = 'xquery';\nxquery.aliases = [];\n\nfunction xquery(Prism) {\n  ;\n\n  (function (Prism) {\n    Prism.languages.xquery = Prism.languages.extend('markup', {\n      'xquery-comment': {\n        pattern: /\\(:[\\s\\S]*?:\\)/,\n        greedy: true,\n        alias: 'comment'\n      },\n      string: {\n        pattern: /([\"'])(?:\\1\\1|(?!\\1)[\\s\\S])*\\1/,\n        greedy: true\n      },\n      extension: {\n        pattern: /\\(#.+?#\\)/,\n        alias: 'symbol'\n      },\n      variable: /\\$[\\w-:]+/,\n      axis: {\n        pattern: /(^|[^-])(?:ancestor(?:-or-self)?|attribute|child|descendant(?:-or-self)?|following(?:-sibling)?|parent|preceding(?:-sibling)?|self)(?=::)/,\n        lookbehind: true,\n        alias: 'operator'\n      },\n      'keyword-operator': {\n        pattern: /(^|[^:-])\\b(?:and|castable as|div|eq|except|ge|gt|idiv|instance of|intersect|is|le|lt|mod|ne|or|union)\\b(?=$|[^:-])/,\n        lookbehind: true,\n        alias: 'operator'\n      },\n      keyword: {\n        pattern: /(^|[^:-])\\b(?:as|ascending|at|base-uri|boundary-space|case|cast as|collation|construction|copy-namespaces|declare|default|descending|else|empty (?:greatest|least)|encoding|every|external|for|function|if|import|in|inherit|lax|let|map|module|namespace|no-inherit|no-preserve|option|order(?: by|ed|ing)?|preserve|return|satisfies|schema|some|stable|strict|strip|then|to|treat as|typeswitch|unordered|validate|variable|version|where|xquery)\\b(?=$|[^:-])/,\n        lookbehind: true\n      },\n      function: /[\\w-]+(?::[\\w-]+)*(?=\\s*\\()/,\n      'xquery-element': {\n        pattern: /(element\\s+)[\\w-]+(?::[\\w-]+)*/,\n        lookbehind: true,\n        alias: 'tag'\n      },\n      'xquery-attribute': {\n        pattern: /(attribute\\s+)[\\w-]+(?::[\\w-]+)*/,\n        lookbehind: true,\n        alias: 'attr-name'\n      },\n      builtin: {\n        pattern: /(^|[^:-])\\b(?:attribute|comment|document|element|processing-instruction|text|xs:(?:anyAtomicType|anyType|anyURI|base64Binary|boolean|byte|date|dateTime|dayTimeDuration|decimal|double|duration|ENTITIES|ENTITY|float|gDay|gMonth|gMonthDay|gYear|gYearMonth|hexBinary|ID|IDREFS?|int|integer|language|long|Name|NCName|negativeInteger|NMTOKENS?|nonNegativeInteger|nonPositiveInteger|normalizedString|NOTATION|positiveInteger|QName|short|string|time|token|unsigned(?:Byte|Int|Long|Short)|untyped(?:Atomic)?|yearMonthDuration))\\b(?=$|[^:-])/,\n        lookbehind: true\n      },\n      number: /\\b\\d+(?:\\.\\d+)?(?:E[+-]?\\d+)?/,\n      operator: [/[+*=?|@]|\\.\\.?|:=|!=|<[=<]?|>[=>]?/, {\n        pattern: /(\\s)-(?=\\s)/,\n        lookbehind: true\n      }],\n      punctuation: /[[\\](){},;:/]/\n    });\n    Prism.languages.xquery.tag.pattern = /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|{(?!{)(?:{(?:{[^}]*}|[^}])*}|[^}])+}|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i;\n    Prism.languages.xquery['tag'].inside['attr-value'].pattern = /=(?:(\"|')(?:\\\\[\\s\\S]|{(?!{)(?:{(?:{[^}]*}|[^}])*}|[^}])+}|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+)/i;\n    Prism.languages.xquery['tag'].inside['attr-value'].inside['punctuation'] = /^=\"|\"$/;\n    Prism.languages.xquery['tag'].inside['attr-value'].inside['expression'] = {\n      // Allow for two levels of nesting\n      pattern: /{(?!{)(?:{(?:{[^}]*}|[^}])*}|[^}])+}/,\n      inside: {\n        rest: Prism.languages.xquery\n      },\n      alias: 'language-xquery' // The following will handle plain text inside tags\n\n    };\n\n    var stringifyToken = function stringifyToken(token) {\n      if (typeof token === 'string') {\n        return token;\n      }\n\n      if (typeof token.content === 'string') {\n        return token.content;\n      }\n\n      return token.content.map(stringifyToken).join('');\n    };\n\n    var walkTokens = function walkTokens(tokens) {\n      var openedTags = [];\n\n      for (var i = 0; i < tokens.length; i++) {\n        var token = tokens[i];\n        var notTagNorBrace = false;\n\n        if (typeof token !== 'string') {\n          if (token.type === 'tag' && token.content[0] && token.content[0].type === 'tag') {\n            // We found a tag, now find its kind\n            if (token.content[0].content[0].content === '</') {\n              // Closing tag\n              if (openedTags.length > 0 && openedTags[openedTags.length - 1].tagName === stringifyToken(token.content[0].content[1])) {\n                // Pop matching opening tag\n                openedTags.pop();\n              }\n            } else {\n              if (token.content[token.content.length - 1].content === '/>') {// Autoclosed tag, ignore\n              } else {\n                // Opening tag\n                openedTags.push({\n                  tagName: stringifyToken(token.content[0].content[1]),\n                  openedBraces: 0\n                });\n              }\n            }\n          } else if (openedTags.length > 0 && token.type === 'punctuation' && token.content === '{' && ( // Ignore `{{`\n          !tokens[i + 1] || tokens[i + 1].type !== 'punctuation' || tokens[i + 1].content !== '{') && (!tokens[i - 1] || tokens[i - 1].type !== 'plain-text' || tokens[i - 1].content !== '{')) {\n            // Here we might have entered an XQuery expression inside a tag\n            openedTags[openedTags.length - 1].openedBraces++;\n          } else if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces > 0 && token.type === 'punctuation' && token.content === '}') {\n            // Here we might have left an XQuery expression inside a tag\n            openedTags[openedTags.length - 1].openedBraces--;\n          } else if (token.type !== 'comment') {\n            notTagNorBrace = true;\n          }\n        }\n\n        if (notTagNorBrace || typeof token === 'string') {\n          if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces === 0) {\n            // Here we are inside a tag, and not inside an XQuery expression.\n            // That's plain text: drop any tokens matched.\n            var plainText = stringifyToken(token); // And merge text with adjacent text\n\n            if (i < tokens.length - 1 && (typeof tokens[i + 1] === 'string' || tokens[i + 1].type === 'plain-text')) {\n              plainText += stringifyToken(tokens[i + 1]);\n              tokens.splice(i + 1, 1);\n            }\n\n            if (i > 0 && (typeof tokens[i - 1] === 'string' || tokens[i - 1].type === 'plain-text')) {\n              plainText = stringifyToken(tokens[i - 1]) + plainText;\n              tokens.splice(i - 1, 1);\n              i--;\n            }\n\n            if (/^\\s+$/.test(plainText)) {\n              tokens[i] = plainText;\n            } else {\n              tokens[i] = new Prism.Token('plain-text', plainText, null, plainText);\n            }\n          }\n        }\n\n        if (token.content && typeof token.content !== 'string') {\n          walkTokens(token.content);\n        }\n      }\n    };\n\n    Prism.hooks.add('after-tokenize', function (env) {\n      if (env.language !== 'xquery') {\n        return;\n      }\n\n      walkTokens(env.tokens);\n    });\n  })(Prism);\n}","'use strict';\n\nmodule.exports = yaml;\nyaml.displayName = 'yaml';\nyaml.aliases = [];\n\nfunction yaml(Prism) {\n  Prism.languages.yaml = {\n    scalar: {\n      pattern: /([\\-:]\\s*(?:![^\\s]+)?[ \\t]*[|>])[ \\t]*(?:((?:\\r?\\n|\\r)[ \\t]+)[^\\r\\n]+(?:\\2[^\\r\\n]+)*)/,\n      lookbehind: true,\n      alias: 'string'\n    },\n    comment: /#.*/,\n    key: {\n      pattern: /(\\s*(?:^|[:\\-,[{\\r\\n?])[ \\t]*(?:![^\\s]+)?[ \\t]*)[^\\r\\n{[\\]},#\\s]+?(?=\\s*:\\s)/,\n      lookbehind: true,\n      alias: 'atrule'\n    },\n    directive: {\n      pattern: /(^[ \\t]*)%.+/m,\n      lookbehind: true,\n      alias: 'important'\n    },\n    datetime: {\n      pattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(?:\\d{4}-\\d\\d?-\\d\\d?(?:[tT]|[ \\t]+)\\d\\d?:\\d{2}:\\d{2}(?:\\.\\d*)?[ \\t]*(?:Z|[-+]\\d\\d?(?::\\d{2})?)?|\\d{4}-\\d{2}-\\d{2}|\\d\\d?:\\d{2}(?::\\d{2}(?:\\.\\d*)?)?)(?=[ \\t]*(?:$|,|]|}))/m,\n      lookbehind: true,\n      alias: 'number'\n    },\n    boolean: {\n      pattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(?:true|false)[ \\t]*(?=$|,|]|})/im,\n      lookbehind: true,\n      alias: 'important'\n    },\n    null: {\n      pattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(?:null|~)[ \\t]*(?=$|,|]|})/im,\n      lookbehind: true,\n      alias: 'important'\n    },\n    string: {\n      pattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(\"|')(?:(?!\\2)[^\\\\\\r\\n]|\\\\.)*\\2(?=[ \\t]*(?:$|,|]|}))/m,\n      lookbehind: true,\n      greedy: true\n    },\n    number: {\n      pattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)[+-]?(?:0x[\\da-f]+|0o[0-7]+|(?:\\d+\\.?\\d*|\\.?\\d+)(?:e[+-]?\\d+)?|\\.inf|\\.nan)[ \\t]*(?=$|,|]|})/im,\n      lookbehind: true\n    },\n    tag: /![^\\s]+/,\n    important: /[&*][\\w]+/,\n    punctuation: /---|[:[\\]{}\\-,|>?]|\\.\\.\\./\n  };\n}","var objectWithoutPropertiesLoose = require(\"./objectWithoutPropertiesLoose\");\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nmodule.exports = _objectWithoutProperties;","function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nmodule.exports = _objectWithoutPropertiesLoose;","function _extends() {\n  module.exports = _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nmodule.exports = _extends;","var defineProperty = require(\"./defineProperty\");\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nmodule.exports = _objectSpread;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","export default {\n  \"code[class*=\\\"language-\\\"]\": {\n    \"color\": \"#f8f8f2\",\n    \"background\": \"none\",\n    \"textShadow\": \"0 1px rgba(0, 0, 0, 0.3)\",\n    \"fontFamily\": \"Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace\",\n    \"textAlign\": \"left\",\n    \"whiteSpace\": \"pre\",\n    \"wordSpacing\": \"normal\",\n    \"wordBreak\": \"normal\",\n    \"wordWrap\": \"normal\",\n    \"lineHeight\": \"1.5\",\n    \"MozTabSize\": \"4\",\n    \"OTabSize\": \"4\",\n    \"tabSize\": \"4\",\n    \"WebkitHyphens\": \"none\",\n    \"MozHyphens\": \"none\",\n    \"msHyphens\": \"none\",\n    \"hyphens\": \"none\"\n  },\n  \"pre[class*=\\\"language-\\\"]\": {\n    \"color\": \"#f8f8f2\",\n    \"background\": \"#272822\",\n    \"textShadow\": \"0 1px rgba(0, 0, 0, 0.3)\",\n    \"fontFamily\": \"Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace\",\n    \"textAlign\": \"left\",\n    \"whiteSpace\": \"pre\",\n    \"wordSpacing\": \"normal\",\n    \"wordBreak\": \"normal\",\n    \"wordWrap\": \"normal\",\n    \"lineHeight\": \"1.5\",\n    \"MozTabSize\": \"4\",\n    \"OTabSize\": \"4\",\n    \"tabSize\": \"4\",\n    \"WebkitHyphens\": \"none\",\n    \"MozHyphens\": \"none\",\n    \"msHyphens\": \"none\",\n    \"hyphens\": \"none\",\n    \"padding\": \"1em\",\n    \"margin\": \".5em 0\",\n    \"overflow\": \"auto\",\n    \"borderRadius\": \"0.3em\"\n  },\n  \":not(pre) > code[class*=\\\"language-\\\"]\": {\n    \"background\": \"#272822\",\n    \"padding\": \".1em\",\n    \"borderRadius\": \".3em\",\n    \"whiteSpace\": \"normal\"\n  },\n  \"comment\": {\n    \"color\": \"slategray\"\n  },\n  \"prolog\": {\n    \"color\": \"slategray\"\n  },\n  \"doctype\": {\n    \"color\": \"slategray\"\n  },\n  \"cdata\": {\n    \"color\": \"slategray\"\n  },\n  \"punctuation\": {\n    \"color\": \"#f8f8f2\"\n  },\n  \".namespace\": {\n    \"Opacity\": \".7\"\n  },\n  \"property\": {\n    \"color\": \"#f92672\"\n  },\n  \"tag\": {\n    \"color\": \"#f92672\"\n  },\n  \"constant\": {\n    \"color\": \"#f92672\"\n  },\n  \"symbol\": {\n    \"color\": \"#f92672\"\n  },\n  \"deleted\": {\n    \"color\": \"#f92672\"\n  },\n  \"boolean\": {\n    \"color\": \"#ae81ff\"\n  },\n  \"number\": {\n    \"color\": \"#ae81ff\"\n  },\n  \"selector\": {\n    \"color\": \"#a6e22e\"\n  },\n  \"attr-name\": {\n    \"color\": \"#a6e22e\"\n  },\n  \"string\": {\n    \"color\": \"#a6e22e\"\n  },\n  \"char\": {\n    \"color\": \"#a6e22e\"\n  },\n  \"builtin\": {\n    \"color\": \"#a6e22e\"\n  },\n  \"inserted\": {\n    \"color\": \"#a6e22e\"\n  },\n  \"operator\": {\n    \"color\": \"#f8f8f2\"\n  },\n  \"entity\": {\n    \"color\": \"#f8f8f2\",\n    \"cursor\": \"help\"\n  },\n  \"url\": {\n    \"color\": \"#f8f8f2\"\n  },\n  \".language-css .token.string\": {\n    \"color\": \"#f8f8f2\"\n  },\n  \".style .token.string\": {\n    \"color\": \"#f8f8f2\"\n  },\n  \"variable\": {\n    \"color\": \"#f8f8f2\"\n  },\n  \"atrule\": {\n    \"color\": \"#e6db74\"\n  },\n  \"attr-value\": {\n    \"color\": \"#e6db74\"\n  },\n  \"function\": {\n    \"color\": \"#e6db74\"\n  },\n  \"class-name\": {\n    \"color\": \"#e6db74\"\n  },\n  \"keyword\": {\n    \"color\": \"#66d9ef\"\n  },\n  \"regex\": {\n    \"color\": \"#fd971f\"\n  },\n  \"important\": {\n    \"color\": \"#fd971f\",\n    \"fontWeight\": \"bold\"\n  },\n  \"bold\": {\n    \"fontWeight\": \"bold\"\n  },\n  \"italic\": {\n    \"fontStyle\": \"italic\"\n  }\n};","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport React from 'react';\nexport function createStyleObject(classNames) {\n  var elementStyle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var stylesheet = arguments.length > 2 ? arguments[2] : undefined;\n  return classNames.reduce(function (styleObject, className) {\n    return _objectSpread({}, styleObject, stylesheet[className]);\n  }, elementStyle);\n}\nexport function createClassNameString(classNames) {\n  return classNames.join(' ');\n}\nexport function createChildren(stylesheet, useInlineStyles) {\n  var childrenCount = 0;\n  return function (children) {\n    childrenCount += 1;\n    return children.map(function (child, i) {\n      return createElement({\n        node: child,\n        stylesheet: stylesheet,\n        useInlineStyles: useInlineStyles,\n        key: \"code-segment-\".concat(childrenCount, \"-\").concat(i)\n      });\n    });\n  };\n}\nexport default function createElement(_ref) {\n  var node = _ref.node,\n      stylesheet = _ref.stylesheet,\n      _ref$style = _ref.style,\n      style = _ref$style === void 0 ? {} : _ref$style,\n      useInlineStyles = _ref.useInlineStyles,\n      key = _ref.key;\n  var properties = node.properties,\n      type = node.type,\n      TagName = node.tagName,\n      value = node.value;\n\n  if (type === 'text') {\n    return value;\n  } else if (TagName) {\n    var childrenCreator = createChildren(stylesheet, useInlineStyles);\n    var nonStylesheetClassNames = useInlineStyles && properties.className && properties.className.filter(function (className) {\n      return !stylesheet[className];\n    });\n    var className = nonStylesheetClassNames && nonStylesheetClassNames.length ? nonStylesheetClassNames : undefined;\n    var props = useInlineStyles ? _objectSpread({}, properties, {\n      className: className\n    }, {\n      style: createStyleObject(properties.className, Object.assign({}, properties.style, style), stylesheet)\n    }) : _objectSpread({}, properties, {\n      className: createClassNameString(properties.className)\n    });\n    var children = childrenCreator(node.children);\n    return React.createElement(TagName, _extends({\n      key: key\n    }, props), children);\n  }\n}","import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React from 'react';\nimport createElement from './create-element';\nvar newLineRegex = /\\n/g;\n\nfunction getNewLines(str) {\n  return str.match(newLineRegex);\n}\n\nfunction getLineNumbers(_ref) {\n  var lines = _ref.lines,\n      startingLineNumber = _ref.startingLineNumber,\n      style = _ref.style;\n  return lines.map(function (_, i) {\n    var number = i + startingLineNumber;\n    return React.createElement(\"span\", {\n      key: \"line-\".concat(i),\n      className: \"react-syntax-highlighter-line-number\",\n      style: typeof style === 'function' ? style(number) : style\n    }, \"\".concat(number, \"\\n\"));\n  });\n}\n\nfunction LineNumbers(_ref2) {\n  var codeString = _ref2.codeString,\n      codeStyle = _ref2.codeStyle,\n      _ref2$containerStyle = _ref2.containerStyle,\n      containerStyle = _ref2$containerStyle === void 0 ? {\n    float: 'left',\n    paddingRight: '10px'\n  } : _ref2$containerStyle,\n      _ref2$numberStyle = _ref2.numberStyle,\n      numberStyle = _ref2$numberStyle === void 0 ? {} : _ref2$numberStyle,\n      startingLineNumber = _ref2.startingLineNumber;\n  return React.createElement(\"code\", {\n    style: Object.assign({}, codeStyle, containerStyle)\n  }, getLineNumbers({\n    lines: codeString.replace(/\\n$/, '').split('\\n'),\n    style: numberStyle,\n    startingLineNumber: startingLineNumber\n  }));\n}\n\nfunction createLineElement(_ref3) {\n  var children = _ref3.children,\n      lineNumber = _ref3.lineNumber,\n      lineProps = _ref3.lineProps,\n      _ref3$className = _ref3.className,\n      className = _ref3$className === void 0 ? [] : _ref3$className;\n  var properties = (typeof lineProps === 'function' ? lineProps(lineNumber) : lineProps) || {};\n  properties.className = properties.className ? className.concat(properties.className) : className;\n  return {\n    type: 'element',\n    tagName: 'span',\n    properties: properties,\n    children: children\n  };\n}\n\nfunction flattenCodeTree(tree) {\n  var className = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var newTree = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n\n  for (var i = 0; i < tree.length; i++) {\n    var node = tree[i];\n\n    if (node.type === 'text') {\n      newTree.push(createLineElement({\n        children: [node],\n        className: className\n      }));\n    } else if (node.children) {\n      var classNames = className.concat(node.properties.className);\n      newTree = newTree.concat(flattenCodeTree(node.children, classNames));\n    }\n  }\n\n  return newTree;\n}\n\nfunction wrapLinesInSpan(codeTree, lineProps) {\n  var tree = flattenCodeTree(codeTree.value);\n  var newTree = [];\n  var lastLineBreakIndex = -1;\n  var index = 0;\n\n  var _loop = function _loop() {\n    var node = tree[index];\n    var value = node.children[0].value;\n    var newLines = getNewLines(value);\n\n    if (newLines) {\n      var splitValue = value.split('\\n');\n      splitValue.forEach(function (text, i) {\n        var lineNumber = newTree.length + 1;\n        var newChild = {\n          type: 'text',\n          value: \"\".concat(text, \"\\n\")\n        };\n\n        if (i === 0) {\n          var _children = tree.slice(lastLineBreakIndex + 1, index).concat(createLineElement({\n            children: [newChild],\n            className: node.properties.className\n          }));\n\n          newTree.push(createLineElement({\n            children: _children,\n            lineNumber: lineNumber,\n            lineProps: lineProps\n          }));\n        } else if (i === splitValue.length - 1) {\n          var stringChild = tree[index + 1] && tree[index + 1].children && tree[index + 1].children[0];\n\n          if (stringChild) {\n            var lastLineInPreviousSpan = {\n              type: 'text',\n              value: \"\".concat(text)\n            };\n            var newElem = createLineElement({\n              children: [lastLineInPreviousSpan],\n              className: node.properties.className\n            });\n            tree.splice(index + 1, 0, newElem);\n          } else {\n            newTree.push(createLineElement({\n              children: [newChild],\n              lineNumber: lineNumber,\n              lineProps: lineProps,\n              className: node.properties.className\n            }));\n          }\n        } else {\n          newTree.push(createLineElement({\n            children: [newChild],\n            lineNumber: lineNumber,\n            lineProps: lineProps,\n            className: node.properties.className\n          }));\n        }\n      });\n      lastLineBreakIndex = index;\n    }\n\n    index++;\n  };\n\n  while (index < tree.length) {\n    _loop();\n  }\n\n  if (lastLineBreakIndex !== tree.length - 1) {\n    var children = tree.slice(lastLineBreakIndex + 1, tree.length);\n\n    if (children && children.length) {\n      newTree.push(createLineElement({\n        children: children,\n        lineNumber: newTree.length + 1,\n        lineProps: lineProps\n      }));\n    }\n  }\n\n  return newTree;\n}\n\nfunction defaultRenderer(_ref4) {\n  var rows = _ref4.rows,\n      stylesheet = _ref4.stylesheet,\n      useInlineStyles = _ref4.useInlineStyles;\n  return rows.map(function (node, i) {\n    return createElement({\n      node: node,\n      stylesheet: stylesheet,\n      useInlineStyles: useInlineStyles,\n      key: \"code-segement\".concat(i)\n    });\n  });\n}\n\nfunction getCodeTree(_ref5) {\n  var astGenerator = _ref5.astGenerator,\n      language = _ref5.language,\n      code = _ref5.code,\n      defaultCodeValue = _ref5.defaultCodeValue;\n\n  if (astGenerator.getLanguage) {\n    var hasLanguage = language && astGenerator.getLanguage(language);\n\n    if (language === 'text') {\n      return {\n        value: defaultCodeValue,\n        language: 'text'\n      };\n    } else if (hasLanguage) {\n      return astGenerator.highlight(language, code);\n    } else {\n      return astGenerator.highlightAuto(code);\n    }\n  }\n\n  try {\n    return language && language !== 'text' ? {\n      value: astGenerator.highlight(code, language)\n    } : {\n      value: defaultCodeValue\n    };\n  } catch (e) {\n    return {\n      value: defaultCodeValue\n    };\n  }\n}\n\nexport default function (defaultAstGenerator, defaultStyle) {\n  return function SyntaxHighlighter(_ref6) {\n    var language = _ref6.language,\n        children = _ref6.children,\n        _ref6$style = _ref6.style,\n        style = _ref6$style === void 0 ? defaultStyle : _ref6$style,\n        _ref6$customStyle = _ref6.customStyle,\n        customStyle = _ref6$customStyle === void 0 ? {} : _ref6$customStyle,\n        _ref6$codeTagProps = _ref6.codeTagProps,\n        codeTagProps = _ref6$codeTagProps === void 0 ? {\n      style: style['code[class*=\"language-\"]']\n    } : _ref6$codeTagProps,\n        _ref6$useInlineStyles = _ref6.useInlineStyles,\n        useInlineStyles = _ref6$useInlineStyles === void 0 ? true : _ref6$useInlineStyles,\n        _ref6$showLineNumbers = _ref6.showLineNumbers,\n        showLineNumbers = _ref6$showLineNumbers === void 0 ? false : _ref6$showLineNumbers,\n        _ref6$startingLineNum = _ref6.startingLineNumber,\n        startingLineNumber = _ref6$startingLineNum === void 0 ? 1 : _ref6$startingLineNum,\n        lineNumberContainerStyle = _ref6.lineNumberContainerStyle,\n        lineNumberStyle = _ref6.lineNumberStyle,\n        wrapLines = _ref6.wrapLines,\n        _ref6$lineProps = _ref6.lineProps,\n        lineProps = _ref6$lineProps === void 0 ? {} : _ref6$lineProps,\n        renderer = _ref6.renderer,\n        _ref6$PreTag = _ref6.PreTag,\n        PreTag = _ref6$PreTag === void 0 ? 'pre' : _ref6$PreTag,\n        _ref6$CodeTag = _ref6.CodeTag,\n        CodeTag = _ref6$CodeTag === void 0 ? 'code' : _ref6$CodeTag,\n        _ref6$code = _ref6.code,\n        code = _ref6$code === void 0 ? Array.isArray(children) ? children[0] : children : _ref6$code,\n        astGenerator = _ref6.astGenerator,\n        rest = _objectWithoutProperties(_ref6, [\"language\", \"children\", \"style\", \"customStyle\", \"codeTagProps\", \"useInlineStyles\", \"showLineNumbers\", \"startingLineNumber\", \"lineNumberContainerStyle\", \"lineNumberStyle\", \"wrapLines\", \"lineProps\", \"renderer\", \"PreTag\", \"CodeTag\", \"code\", \"astGenerator\"]);\n\n    astGenerator = astGenerator || defaultAstGenerator;\n    var lineNumbers = showLineNumbers ? React.createElement(LineNumbers, {\n      containerStyle: lineNumberContainerStyle,\n      codeStyle: codeTagProps.style || {},\n      numberStyle: lineNumberStyle,\n      startingLineNumber: startingLineNumber,\n      codeString: code\n    }) : null;\n    var defaultPreStyle = style.hljs || style['pre[class*=\"language-\"]'] || {\n      backgroundColor: '#fff'\n    };\n    var preProps = useInlineStyles ? Object.assign({}, rest, {\n      style: Object.assign({}, defaultPreStyle, customStyle)\n    }) : Object.assign({}, rest, {\n      className: 'hljs'\n    });\n\n    if (!astGenerator) {\n      return React.createElement(PreTag, preProps, lineNumbers, React.createElement(CodeTag, codeTagProps, code));\n    }\n    /*\n     * some custom renderers rely on individual row elements so we need to turn wrapLines on\n     * if renderer is provided and wrapLines is undefined\n     */\n\n\n    wrapLines = renderer && wrapLines === undefined ? true : wrapLines;\n    renderer = renderer || defaultRenderer;\n    var defaultCodeValue = [{\n      type: 'text',\n      value: code\n    }];\n    var codeTree = getCodeTree({\n      astGenerator: astGenerator,\n      language: language,\n      code: code,\n      defaultCodeValue: defaultCodeValue\n    });\n\n    if (codeTree.language === null) {\n      codeTree.value = defaultCodeValue;\n    }\n\n    var tree = wrapLines ? wrapLinesInSpan(codeTree, lineProps) : codeTree.value;\n    return React.createElement(PreTag, preProps, lineNumbers, React.createElement(CodeTag, codeTagProps, renderer({\n      rows: tree,\n      stylesheet: style,\n      useInlineStyles: useInlineStyles\n    })));\n  };\n}","import highlight from './highlight';\nimport defaultStyle from './styles/prism/prism';\nimport refractor from 'refractor';\nimport supportedLanguages from './languages/prism/supported-languages';\nvar highlighter = highlight(refractor, defaultStyle);\nhighlighter.supportedLanguages = supportedLanguages;\nexport default highlighter;","export default {\n  \"code[class*=\\\"language-\\\"]\": {\n    \"color\": \"black\",\n    \"background\": \"none\",\n    \"textShadow\": \"0 1px white\",\n    \"fontFamily\": \"Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace\",\n    \"textAlign\": \"left\",\n    \"whiteSpace\": \"pre\",\n    \"wordSpacing\": \"normal\",\n    \"wordBreak\": \"normal\",\n    \"wordWrap\": \"normal\",\n    \"lineHeight\": \"1.5\",\n    \"MozTabSize\": \"4\",\n    \"OTabSize\": \"4\",\n    \"tabSize\": \"4\",\n    \"WebkitHyphens\": \"none\",\n    \"MozHyphens\": \"none\",\n    \"msHyphens\": \"none\",\n    \"hyphens\": \"none\"\n  },\n  \"pre[class*=\\\"language-\\\"]\": {\n    \"color\": \"black\",\n    \"background\": \"#f5f2f0\",\n    \"textShadow\": \"0 1px white\",\n    \"fontFamily\": \"Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace\",\n    \"textAlign\": \"left\",\n    \"whiteSpace\": \"pre\",\n    \"wordSpacing\": \"normal\",\n    \"wordBreak\": \"normal\",\n    \"wordWrap\": \"normal\",\n    \"lineHeight\": \"1.5\",\n    \"MozTabSize\": \"4\",\n    \"OTabSize\": \"4\",\n    \"tabSize\": \"4\",\n    \"WebkitHyphens\": \"none\",\n    \"MozHyphens\": \"none\",\n    \"msHyphens\": \"none\",\n    \"hyphens\": \"none\",\n    \"padding\": \"1em\",\n    \"margin\": \".5em 0\",\n    \"overflow\": \"auto\"\n  },\n  \"pre[class*=\\\"language-\\\"]::-moz-selection\": {\n    \"textShadow\": \"none\",\n    \"background\": \"#b3d4fc\"\n  },\n  \"pre[class*=\\\"language-\\\"] ::-moz-selection\": {\n    \"textShadow\": \"none\",\n    \"background\": \"#b3d4fc\"\n  },\n  \"code[class*=\\\"language-\\\"]::-moz-selection\": {\n    \"textShadow\": \"none\",\n    \"background\": \"#b3d4fc\"\n  },\n  \"code[class*=\\\"language-\\\"] ::-moz-selection\": {\n    \"textShadow\": \"none\",\n    \"background\": \"#b3d4fc\"\n  },\n  \"pre[class*=\\\"language-\\\"]::selection\": {\n    \"textShadow\": \"none\",\n    \"background\": \"#b3d4fc\"\n  },\n  \"pre[class*=\\\"language-\\\"] ::selection\": {\n    \"textShadow\": \"none\",\n    \"background\": \"#b3d4fc\"\n  },\n  \"code[class*=\\\"language-\\\"]::selection\": {\n    \"textShadow\": \"none\",\n    \"background\": \"#b3d4fc\"\n  },\n  \"code[class*=\\\"language-\\\"] ::selection\": {\n    \"textShadow\": \"none\",\n    \"background\": \"#b3d4fc\"\n  },\n  \":not(pre) > code[class*=\\\"language-\\\"]\": {\n    \"background\": \"#f5f2f0\",\n    \"padding\": \".1em\",\n    \"borderRadius\": \".3em\",\n    \"whiteSpace\": \"normal\"\n  },\n  \"comment\": {\n    \"color\": \"slategray\"\n  },\n  \"prolog\": {\n    \"color\": \"slategray\"\n  },\n  \"doctype\": {\n    \"color\": \"slategray\"\n  },\n  \"cdata\": {\n    \"color\": \"slategray\"\n  },\n  \"punctuation\": {\n    \"color\": \"#999\"\n  },\n  \".namespace\": {\n    \"Opacity\": \".7\"\n  },\n  \"property\": {\n    \"color\": \"#905\"\n  },\n  \"tag\": {\n    \"color\": \"#905\"\n  },\n  \"boolean\": {\n    \"color\": \"#905\"\n  },\n  \"number\": {\n    \"color\": \"#905\"\n  },\n  \"constant\": {\n    \"color\": \"#905\"\n  },\n  \"symbol\": {\n    \"color\": \"#905\"\n  },\n  \"deleted\": {\n    \"color\": \"#905\"\n  },\n  \"selector\": {\n    \"color\": \"#690\"\n  },\n  \"attr-name\": {\n    \"color\": \"#690\"\n  },\n  \"string\": {\n    \"color\": \"#690\"\n  },\n  \"char\": {\n    \"color\": \"#690\"\n  },\n  \"builtin\": {\n    \"color\": \"#690\"\n  },\n  \"inserted\": {\n    \"color\": \"#690\"\n  },\n  \"operator\": {\n    \"color\": \"#9a6e3a\",\n    \"background\": \"hsla(0, 0%, 100%, .5)\"\n  },\n  \"entity\": {\n    \"color\": \"#9a6e3a\",\n    \"background\": \"hsla(0, 0%, 100%, .5)\",\n    \"cursor\": \"help\"\n  },\n  \"url\": {\n    \"color\": \"#9a6e3a\",\n    \"background\": \"hsla(0, 0%, 100%, .5)\"\n  },\n  \".language-css .token.string\": {\n    \"color\": \"#9a6e3a\",\n    \"background\": \"hsla(0, 0%, 100%, .5)\"\n  },\n  \".style .token.string\": {\n    \"color\": \"#9a6e3a\",\n    \"background\": \"hsla(0, 0%, 100%, .5)\"\n  },\n  \"atrule\": {\n    \"color\": \"#07a\"\n  },\n  \"attr-value\": {\n    \"color\": \"#07a\"\n  },\n  \"keyword\": {\n    \"color\": \"#07a\"\n  },\n  \"function\": {\n    \"color\": \"#DD4A68\"\n  },\n  \"class-name\": {\n    \"color\": \"#DD4A68\"\n  },\n  \"regex\": {\n    \"color\": \"#e90\"\n  },\n  \"important\": {\n    \"color\": \"#e90\",\n    \"fontWeight\": \"bold\"\n  },\n  \"variable\": {\n    \"color\": \"#e90\"\n  },\n  \"bold\": {\n    \"fontWeight\": \"bold\"\n  },\n  \"italic\": {\n    \"fontStyle\": \"italic\"\n  }\n};","export default ['abap', 'actionscript', 'ada', 'apacheconf', 'apl', 'applescript', 'arduino', 'arff', 'asciidoc', 'asm6502', 'aspnet', 'autohotkey', 'autoit', 'bash', 'basic', 'batch', 'bison', 'brainfuck', 'bro', 'c', 'clike', 'clojure', 'coffeescript', 'cpp', 'crystal', 'csharp', 'csp', 'css-extras', 'css', 'd', 'dart', 'diff', 'django', 'docker', 'eiffel', 'elixir', 'elm', 'erb', 'erlang', 'flow', 'fortran', 'fsharp', 'gedcom', 'gherkin', 'git', 'glsl', 'go', 'graphql', 'groovy', 'haml', 'handlebars', 'haskell', 'haxe', 'hpkp', 'hsts', 'http', 'ichigojam', 'icon', 'inform7', 'ini', 'io', 'j', 'java', 'javascript', 'jolie', 'json', 'jsx', 'julia', 'keyman', 'kotlin', 'latex', 'less', 'liquid', 'lisp', 'livescript', 'lolcode', 'lua', 'makefile', 'markdown', 'markup-templating', 'markup', 'matlab', 'mel', 'mizar', 'monkey', 'n4js', 'nasm', 'nginx', 'nim', 'nix', 'nsis', 'objectivec', 'ocaml', 'opencl', 'oz', 'parigp', 'parser', 'pascal', 'perl', 'php-extras', 'php', 'plsql', 'powershell', 'processing', 'prolog', 'properties', 'protobuf', 'pug', 'puppet', 'pure', 'python', 'q', 'qore', 'r', 'reason', 'renpy', 'rest', 'rip', 'roboconf', 'ruby', 'rust', 'sas', 'sass', 'scala', 'scheme', 'scss', 'smalltalk', 'smarty', 'soy', 'sql', 'stylus', 'swift', 'tap', 'tcl', 'textile', 'tsx', 'tt2', 'twig', 'typescript', 'vbnet', 'velocity', 'verilog', 'vhdl', 'vim', 'visual-basic', 'wasm', 'wiki', 'xeora', 'xojo', 'xquery', 'yaml'];"],"sourceRoot":""}