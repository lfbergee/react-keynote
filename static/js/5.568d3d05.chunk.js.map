{"version":3,"sources":["slides/ElateConf/hooks/Hooks.jsx","slides/ElateConf/hooks/example/code.js","slides/ElateConf/hooks/example/separation.png"],"names":["Hooks","react_default","a","createElement","components","name","heading","withImage","baseComponents","customDot","prism","language","style","okaidia","alt","src","Separation","href","module","exports","__webpack_require__","p"],"mappings":"sKAiFeA,UAzED,kBACZC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOC,KAAK,QAAQC,QAAQ,gCAAgCC,WAAS,GACnEN,EAAAC,EAAAC,cAACK,EAAA,EAAD,KACEP,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAUC,UAAU,SAApB,gBACAR,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAUC,UAAU,QAApB,gCACAR,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAUC,UAAU,QAApB,2CAGAR,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAUC,UAAU,QAApB,kCAGJR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOC,KAAK,UAAUC,QAAQ,UAAUC,WAAS,GAC/CN,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAmBC,SAAS,MAAMC,MAAOC,KCrB1B,+CDwBfZ,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAmBC,SAAS,MAAMC,MAAOC,KCtBxB,yCDyBjBZ,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAmBC,SAAS,MAAMC,MAAOC,KCvBzB,2HD2BlBZ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOC,KAAK,UAAUC,QAAQ,QAAQC,WAAS,GAC7CN,EAAAC,EAAAC,cAACK,EAAA,EAAD,KACEP,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAUC,UAAU,QAApB,6BACAR,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAUC,UAAU,QAApB,gCACAR,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAUC,UAAU,QAApB,iCAGJR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOC,KAAK,aAAaC,QAAQ,yBAC/BL,EAAAC,EAAAC,cAAA,OAAKW,IAAI,GAAGC,IAAKC,OAEnBf,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOC,KAAK,QAAQC,QAAQ,eAAeC,WAAS,GAClDN,EAAAC,EAAAC,cAACK,EAAA,EAAD,KACEP,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAUC,UAAU,SAApB,4BACAR,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAUC,UAAU,SAApB,wBACAR,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAUC,UAAU,SAApB,kCACAR,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAUC,UAAU,SAApB,4CAGAR,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAUC,UAAU,SAApB,yDAGAR,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAUC,UAAU,SAApB,iCACAR,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAUC,UAAU,QAApB,gEAKJR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOC,KAAK,MAAMC,QAAQ,aAAaC,WAAS,GAC9CN,EAAAC,EAAAC,cAACK,EAAA,EAAD,KACEP,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAUC,WAAS,GAAnB,qCACAR,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAUC,WAAS,GAAnB,kEAKJR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOC,KAAK,YAAYC,QAAQ,aAC9BL,EAAAC,EAAAC,cAACK,EAAA,EAAD,KACEP,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAUC,UAAU,QAClBR,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAYS,KAAK,6CAAjB,iBAGAhB,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAYS,KAAK,yDAAjB,4DExEVC,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/5.568d3d05.chunk.js","sourcesContent":["import React from \"react\";\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\nimport { okaidia } from \"react-syntax-highlighter/dist/esm/styles/prism\";\nimport { List, ListItem, LinkButton } from \"../../../baseComponents\";\nimport { Slide, SlideDeck } from \"../../../components\";\nimport { usestate, usecontext, useeffect } from \"./example/code\";\nimport Separation from \"./example/separation.png\";\n\nconst Hooks = () => (\n  <SlideDeck>\n    <Slide name=\"intro\" heading=\"What is the wrong with React?\" withImage>\n      <List>\n        <ListItem customDot=\"angry\">Wrapper hell</ListItem>\n        <ListItem customDot=\"down\">Awkward to share state logic</ListItem>\n        <ListItem customDot=\"down\">\n          Imperative state and lifecycle handling\n        </ListItem>\n        <ListItem customDot=\"puke\">Classes in React... and this</ListItem>\n      </List>\n    </Slide>\n    <Slide name=\"example\" heading=\"Example\" withImage>\n      <SyntaxHighlighter language=\"jsx\" style={okaidia}>\n        {usestate}\n      </SyntaxHighlighter>\n      <SyntaxHighlighter language=\"jsx\" style={okaidia}>\n        {usecontext}\n      </SyntaxHighlighter>\n      <SyntaxHighlighter language=\"jsx\" style={okaidia}>\n        {useeffect}\n      </SyntaxHighlighter>\n    </Slide>\n    <Slide name=\"summary\" heading=\"Hooks\" withImage>\n      <List>\n        <ListItem customDot=\"fire\">Functional all the things</ListItem>\n        <ListItem customDot=\"fire\">Better separation of concern</ListItem>\n        <ListItem customDot=\"fire\">Easier to share state logic</ListItem>\n      </List>\n    </Slide>\n    <Slide name=\"separation\" heading=\"Separation of concern\">\n      <img alt=\"\" src={Separation} />\n    </Slide>\n    <Slide name=\"donts\" heading=\"Hooks dont's\" withImage>\n      <List>\n        <ListItem customDot=\"skull\">Do not work with classes</ListItem>\n        <ListItem customDot=\"skull\">Must be on top level</ListItem>\n        <ListItem customDot=\"skull\">Can not be in a loop or branch</ListItem>\n        <ListItem customDot=\"skull\">\n          Do not replace ComponentWillCatch... yet\n        </ListItem>\n        <ListItem customDot=\"skull\">\n          or getSnapshotBeforeUpdate, but who uses that anyway?\n        </ListItem>\n        <ListItem customDot=\"skull\">Rewrite all old components...</ListItem>\n        <ListItem customDot=\"fire\">\n          Just remember to add hooks-eslint-plugin, and you be fine!\n        </ListItem>\n      </List>\n    </Slide>\n    <Slide name=\"how\" heading=\"Hooks note\" withImage>\n      <List>\n        <ListItem customDot>Each hook scoped to the component</ListItem>\n        <ListItem customDot>\n          Use context or prop drilling to share state, as you'd expect\n        </ListItem>\n      </List>\n    </Slide>\n    <Slide name=\"resources\" heading=\"Resources\">\n      <List>\n        <ListItem customDot=\"fire\">\n          <LinkButton href=\"https://reactjs.org/docs/hooks-intro.html\">\n            Documentation\n          </LinkButton>\n          <LinkButton href=\"https://overreacted.io/a-complete-guide-to-useeffect/\">\n            The complete guide to useEffect\n          </LinkButton>\n        </ListItem>\n      </List>\n    </Slide>\n  </SlideDeck>\n);\n\nexport default Hooks;\n","export const usestate = `const [name, setName] = useState(\"Foo Bar\")`;\n\nexport const usecontext = `const value = useContext(SomeContext)`;\n\nexport const useeffect = `useEffect(() => {\n    window.setTitle(SomeValue);\n    return () => window.setTitle(\"DefaultValue\");\n}, [SomeValue])`;\n","module.exports = __webpack_public_path__ + \"static/media/separation.f3dcdf86.png\";"],"sourceRoot":""}